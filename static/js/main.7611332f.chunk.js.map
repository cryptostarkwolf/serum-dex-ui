{"version":3,"sources":["wallet-adapters/ledger/core.ts","assets/logo.svg","utils/utils.tsx","utils/fetch-loop.tsx","utils/connection.tsx","components/Link.js","utils/notifications.tsx","wallet-adapters/types.ts","wallet-adapters/ledger/index.tsx","wallet-adapters/solong/index.tsx","wallet-adapters/phantom/index.tsx","wallet-adapters/math/index.tsx","utils/wallet.tsx","wallet-adapters/sollet-extension/index.tsx","global_style.ts","components/ErrorBoundary.jsx","utils/send.tsx","utils/tokens.tsx","utils/bonfidaConnector.tsx","utils/markets.tsx","utils/useInterval.tsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.tsx","components/layout/DataTable.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.tsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/LinkAddress.tsx","components/StandaloneBalancesDisplay.tsx","components/TradeForm.tsx","components/TradesTable.tsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","pages/TradePage.tsx","components/WalletConnect.tsx","pages/OpenOrdersPage.tsx","components/UserInfoTable/WalletBalancesTable.tsx","pages/BalancesPage.tsx","components/ConvertForm.tsx","pages/ConvertPage.tsx","utils/preferences.tsx","components/Settings.jsx","components/CustomClusterEndpointDialog.tsx","components/AppSearch.tsx","components/TopBar.tsx","components/HelpUrls.ts","components/Footer.tsx","components/BasicLayout.js","components/useMintInput.tsx","pages/ListNewMarketPage.jsx","pages/pools/NewPoolPage.tsx","components/MintName.tsx","pages/pools/PoolPage/PoolBasketDisplay.tsx","pages/pools/PoolPage/PoolInfoPanel.tsx","pages/pools/PoolPage/PoolCreateRedeemPanel.tsx","pages/pools/PoolPage/PoolBalancesPanel.tsx","pages/pools/PoolPage/PoolAdminPanel.tsx","pages/pools/PoolPage/index.tsx","pages/pools/PoolListPage.tsx","routes.tsx","App.tsx","serviceWorker.js","index.js"],"names":["ledgerSend","transport","instruction","p1","payload","a","p2","payloadOffset","length","chunk","slice","console","log","toString","send","Error","reply","harden","n","getSolanaDerivationPath","account","change","undefined","derivationPath","Buffer","alloc","offset","writeUInt8","writeUInt32BE","signTransaction","transaction","messageBytes","serializeMessage","signBytes","bytes","numPaths","concat","getPublicKey","publicKeyBytes","PublicKey","module","exports","isValidPublicKey","key","sleep","ms","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","includes","split","parseInt","divideBnToNumber","numerator","denominator","quotient","div","toNumber","rem","umod","gcd","getTokenMultiplierFromDecimals","BN","pow","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","useState","notify","useEffect","push","filter","listener","setState","useCallback","newState","removeItem","setItem","forEach","useLocalStorageState","JSON","stringify","stringState","setStringState","useMemo","parse","abbreviateAddress","address","size","base58","toBase58","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","cacheNullValues","this","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","set","notifyListeners","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","Set","previousRefreshInterval","add","assert","delete","map","refreshIntervalsOnError","x","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","loaded","refreshCache","clearCache","refreshAllCaches","ENDPOINTS","name","endpoint","custom","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","connection","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","context","useContext","useSendConnection","useConnectionConfig","endpointInfo","find","info","useAccountInfo","tuple","getAccountInfo","accountInfo","count","previousInfo","subscriptionId","equals","lamports","initializeOnly","setCache","currentItem","previousInfoRef","useRef","current","useAccountData","Link","external","props","to","rest","href","target","rel","message","description","txid","type","placement","color","notification","opacity","backgroundColor","DEFAULT_PUBLIC_KEY","LedgerWalletAdapter","_connecting","_publicKey","_transport","transactions","result","signed","signature","addSignature","TransportWebUSB","create","emit","disconnect","close","EventEmitter","SolongWalletAdapter","_onProcess","_connected","connect","bind","solong","window","signAllTransactions","selectAccount","then","catch","finally","PhantomWalletAdapter","_handleConnect","args","_handleDisconnect","solana","isPhantom","_provider","isConnected","autoApprove","open","on","MathWalletAdapter","isMathWallet","getAccount","ASSET_URL","WALLET_PROVIDERS","url","icon","adapter","_","network","sollet","Wallet","WalletContext","WalletProvider","autoConnect","setAutoConnect","providerUrl","setProviderUrl","provider","wallet","setWallet","updateWallet","readyState","removeEventListener","addEventListener","connected","setConnected","walletPublicKey","substring","isModalVisible","setIsModalVisible","select","providerName","title","okText","visible","okButtonProps","display","onCancel","width","onClick","alt","height","src","marginRight","textAlign","marginBottom","useWallet","setProvider","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","error","Component","createTokenAccountTransaction","mintPublicKey","newAccount","Transaction","SystemProgram","getMinimumBalanceForRentExemption","TokenInstructions","TOKEN_PROGRAM_ID","fromPubkey","newAccountPubkey","space","programId","createAccount","initializeAccount","mint","owner","signer","settleFunds","market","openOrders","baseCurrencyAccount","quoteCurrencyAccount","baseCurrencyAccountPubkey","pubkey","quoteCurrencyAccountPubkey","baseMintAddress","createAccountTransaction","createAccountSigner","quoteMintAddress","referrerQuoteWallet","supportsReferralFees","usdt","TOKEN_MINTS","usdc","process","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","settleAllFunds","tokenAccounts","markets","selectedTokenAccounts","programIds","reduce","cumulative","m","_programId","p","getOpenOrdersAccountsForProgramId","OpenOrders","findForOwner","openOrdersAccounts","baseTokenFree","quoteTokenFree","openOrdersAccountsForProgramIds","accounts","openOrdersAccount","_decoded","ownAddress","baseMint","quoteMint","selectedBaseTokenAccount","getSelectedTokenAccountForMint","selectedQuoteTokenAccount","settleTransactions","t","s","cancelOrder","params","cancelOrders","orders","order","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","side","price","orderType","feeDiscountPubkey","formattedMinOrderSize","minOrderSize","toFixed","formattedTickSize","tickSize","isIncrement","num","step","abs","createAccountSigners","payer","matchOrderstransaction","startTime","getUnixTs","makePlaceOrderTransaction","placeOrderTx","placeOrderSigners","endTime","listMarket","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","dexProgramId","vaultOwner","iaddn","baseLotSize","quoteLotSize","requestQueue","eventQueue","bids","asks","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","tx2","Market","getLayout","span","DexInstructions","initializeMarket","signTransactions","transactionsAndSigners","signedTransactions","signedTransaction","sendSignedTransaction","getTime","sentMessage","successMessage","timeout","getRecentBlockhash","recentBlockhash","blockhash","setSigners","partialSign","rawTransaction","serialize","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","simulateResult","simulateTransaction","err","logs","line","startsWith","parsedErrorInfo","parseInstructionErrorResponse","parsedError","reject","onSignature","e","getSignatureStatuses","signatureStatuses","confirmations","resultDescription","AccountInfoResult","struct","executable","rentEpoch","GetMultipleAccountsAndContextRpcResult","array","union","jsonRpcVersion","literal","jsonrpc","jsonRpcResult","slot","getMultipleSolanaAccounts","publicKeys","commitment","_rpcRequest","unsafeRes","res","join","from","fromEntries","_recentBlockhash","_disableBlockhashCaching","signData","wireTransaction","_serialize","encodedTransaction","encoding","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","decode","amount","parseTokenMintData","initialized","supply","getOwnedAccountsFilters","memcmp","offsetOf","dataSize","getOwnedTokenAccounts","filters","resp","bs58","every","filterBytes","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","WRAPPED_SOL_MINT","useMintToTickers","customMarkets","useCustomMarkets","useAllMarkets","mintsToTickers","customMarketInfo","customMarket","baseLabel","quoteLabel","useMintInfos","useTokenAccounts","allMarkets","allMints","marketInfo","uniqueMints","stringMint","mintInfos","entries","BonfidaApi","path","fetch","URL","response","ok","json","responseJson","success","marketAddress","USE_MARKETS","MARKETS","getMarketInfos","load","marketName","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","deprecated","publicKeyStr","baseTokenTotal","quoteTokenTotal","some","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","baseCurrency","token","quoteCurrency","setCustomMarkets","MarketProvider","setMarketAddress","marketInfos","setMarket","getTradePageUrl","saved","useSelectedTokenAccounts","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","limit","_useUnfilteredTrades","eventFlags","maker","trade","useTrades","bb","Number","ba","last","sort","b","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","selectedPubKey","filtered","useSelectedQuoteCurrencyAccount","mintAddress","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteSplSizeToNumber","useSelectedBaseCurrencyBalances","baseSplSizeToNumber","useLocallyStoredFeeDiscountKey","storedFeeDiscountKey","setStoredFeeDiscountKey","useFeeDiscountKeys","findFeeDiscountKeys","feeDiscountKey","useAllOpenOrdersBalances","useMarketInfos","stringProgramId","flat","useAllOpenOrdersAccounts","loadedOpenOrdersAccounts","mintInfosConnected","marketsByAddress","openOrdersBalances","baseMintInfo","baseFree","baseTotal","quoteMintInfo","quoteFree","quoteTotal","free","total","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","coin","sub","unsettled","useUnmigratedDeprecatedMarkets","marketsList","deps","getMarket","openOrdersList","customMarketsInfo","getMarketOrderPrice","cost","tickSizeDecimals","isBids","costAtLevel","spentCost","sendPrice","getExpectedFillPrice","sizeAtLevel","avgPrice","totalAvgPrice","useInterval","delay","savedCallback","setInterval","clearInterval","Wrapper","styled","FloatingElement","stretchVertical","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulativeSize","sizePercent","reverse","sum","index","bidsToDisplay","asksToDisplay","flex","overflow","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","formattedPrice","ref","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","justifyContent","alignItems","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","marketFilter","cancelId","setCancelId","orderId","marketFilters","orderInfos","text","onFilter","record","indexOf","fontWeight","charAt","toUpperCase","sorter","showSorterTooltip","DeleteOutlined","cancel","FillsTable","fills","fill","useFills","liquidity","FeesTable","feeTier","row","marginLeft","format","getFeeRates","taker","SRM_MINT","MSRM_MINT","marginTop","FeeScheduleTable","balance","Paragraph","TabPane","Tabs","Index","paddingTop","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","DepositDialog","coinMint","depositCoin","onClose","baseOrQuote","onOk","StandaloneTokenAccountsSelect","selectedValue","label","setSelectedTokenAccounts","Fragment","onSelect","newSelectedTokenAccounts","Option","Text","code","shape","CopyOutlined","navigator","clipboard","writeText","LinkAddress","shorten","LinkOutlined","cursor","RowBox","Tip","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","formattedBalances","currency","borderColor","content","trigger","InfoCircleOutlined","align","paddingBottom","block","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","warmUpCache","findBestFeeDiscountKey","onSetBaseSize","usePrice","maxSize","parseFloat","newSize","formatted","onSubmit","flexDirection","Group","onChange","buttonStyle","background","addonBefore","suffix","fontSize","compact","onSetQuoteSize","tipFormatter","marks","checked","disabled","PublicTrades","getRecentTrades","useBonfidaTrades","minHeight","maxHeight","paddingRight","overflowY","time","toLocaleTimeString","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","CustomMarketDialog","onAddCustomMarket","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","placeholder","LoadingOutlined","gutter","Select","OptGroup","TradePage","useParams","history","useHistory","TradePageInner","REACT_APP_EXCLUDE_MARKETS","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","innerHeight","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","componentProps","onChangeOrderRef","component","newCustomMarkets","paddingLeft","MarketSelector","onDeleteCustomMarket","PlusCircleOutlined","extractBase","extractQuote","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","input","option","toLowerCase","nanoid","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","WalletConnect","menu","Item","overlay","OpenOrdersPage","setLoaded","setRefresh","setOpenOrders","lastRefresh","setLastRefresh","_openOrders","getOpenOrdersForMarket","getAllOpenOrders","prev","useAllOpenOrders","marketAddressesToNames","WalletBalancesTable","walletBalances","tokenAccountsConnected","allMarketsConnected","settlingFunds","setSettlingFunds","walletBalance","BalancesPage","parsedAccount","mintInfo","additionalAmount","useWalletBalancesForAllMarkets","mintToTickers","openOrdersFree","openOrdersTotal","ConvertButton","ConvertForm","fromToken","setFromToken","toToken","setToToken","setSize","marketInfosbyName","tokenConvertMap","base","quote","maxWidth","minWidth","ConvertFormSubmit","fromAmount","setFromAmount","toAmount","setToAmount","isConverting","setIsConverting","isFromTokenBaseOfMarket","onConvert","sidedOrderbookAccount","decodedOrderbookData","parsedPrice","parsedSize","getPrice","expectedPrice","canConvert","coinBalance","availableBalance","SwapOutlined","ConvertPage","PreferencesContext","PreferencesProvider","autoSettleEnabled","setAutoSettleEnabled","marketList","autoSettle","Settings","usePreferences","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","appsAndTokens","apps","tags","AppSearch","searchMatches","setSearchMatches","searchValue","setSearchValue","handleClear","options","d","replace","allowClear","focussed","onSearch","filteredApps","app","searchString","lowerSearchStr","tag","matchApp","onClear","onFocus","onBlur","notFoundContent","transition","dropdownStyle","dropdownMatchSelectWidth","suffixIcon","SearchOutlined","focus","LogoWrapper","EXTERNAL_LINKS","TopBar","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","searchFocussed","setSearchFocussed","handleClick","endpointInfoCustom","handler","tradePageUrl","pathname","handleError","getEpochInfo","newCustomEndpoints","logo","mode","selectedKeys","borderBottom","margin","SubMenu","onTitleClick","SettingOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","useMintInput","tooltip","setAddress","ticker","validateStatus","hasFeedback","help","parsed","ListNewMarketPage","baseMintInput","quoteMintInput","lotSize","setLotSize","setTickSize","listedMarket","setListedMarket","labelCol","wrapperCol","layout","onFinish","initialValue","trim","colon","htmlType","AddRemoveTokenButtons","SIMPLE_POOL_PROGRAM_ID","DEFAULT_PROGRAM_ID","PROGRAM_ID_OPTIONS","NewPoolPage","poolName","setPoolName","setProgramId","initialSupply","setInitialSupply","valid","initialAssets","setInitialAssets","adminControlled","setAdminControlled","adminAddress","setAdminAddress","newPoolAddress","setNewPoolAddress","asset","assets","PoolTransactions","initializeSimplePool","poolStateSpace","poolMintDecimals","initialPoolMintSupply","assetMints","initialAssetQuantities","quantity","creator","creatorAssets","found","tokenAccount","additionalAccounts","isSigner","isWritable","poolAddress","AssetInput","mintInput","setQuantity","parsedQuantity","old","MintName","showAddress","mintKey","PoolBasketDisplay","poolInfo","basket","BasketItem","quantities","mintAccountInfo","quantityDisplay","feeFormat","PoolInfoPanel","getPoolBasket","redeem","totalBasket","copyable","poolTokenMint","adminKey","feeRate","PoolCreateRedeemPanel","CreateRedeemTab","action","basketLoaded","findTokenAccount","preventDefault","execute","poolTokenAccount","assetAccounts","PoolBalancesPanel","WalletBalancesTab","PoolBalancesTab","BalanceItem","isPoolToken","vaultAddress","balanceAccountInfo","PoolAdminPanel","PauseUnpauseTab","AddAssetTab","RemoveAssetTab","DepositTab","WithdrawTab","UpdateFeeTab","AdminControlledPoolInstructions","pause","unpause","useOnSubmitHandler","getAssociatedTokenAddress","vaultSigner","createAssociatedTokenAccount","addAsset","MintSelector","SubmitButton","removeAsset","MintInPoolSelector","walletTokenAccount","mintDecimals","wrappedSolAccount","transfer","source","destination","closeAccount","approveDelegate","setFeeRate","updateFee","makeTransaction","className","PoolPage","isPublicKey","poolAccountInfo","poolAccountLoaded","decodePoolState","program","mintAccountInfoLoaded","onBack","subTitle","isAdminControlledPool","Form","form","PoolListPage","setPoolAddress","Routes","basename","exact","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7611332f.chunk.js","sourcesContent":["import type Transport from '@ledgerhq/hw-transport';\nimport type { Transaction } from '@solana/web3.js';\n\nimport { PublicKey } from '@solana/web3.js';\n\nconst INS_GET_PUBKEY = 0x05;\nconst INS_SIGN_MESSAGE = 0x06;\n\nconst P1_NON_CONFIRM = 0x00;\nconst P1_CONFIRM = 0x01;\n\nconst P2_EXTEND = 0x01;\nconst P2_MORE = 0x02;\n\nconst MAX_PAYLOAD = 255;\n\nconst LEDGER_CLA = 0xe0;\n\n/*\n * Helper for chunked send of large payloads\n */\nasync function ledgerSend(\n  transport: Transport,\n  instruction: number,\n  p1: number,\n  payload: Buffer,\n) {\n  let p2 = 0;\n  let payloadOffset = 0;\n\n  if (payload.length > MAX_PAYLOAD) {\n    while (payload.length - payloadOffset > MAX_PAYLOAD) {\n      const chunk = payload.slice(payloadOffset, payloadOffset + MAX_PAYLOAD);\n      payloadOffset += MAX_PAYLOAD;\n      console.log(\n        'send',\n        (p2 | P2_MORE).toString(16),\n        chunk.length.toString(16),\n        chunk,\n      );\n      const reply = await transport.send(\n        LEDGER_CLA,\n        instruction,\n        p1,\n        p2 | P2_MORE,\n        chunk,\n      );\n      if (reply.length !== 2) {\n        throw new Error('Received unexpected reply payload');\n      }\n      p2 |= P2_EXTEND;\n    }\n  }\n\n  const chunk = payload.slice(payloadOffset);\n  console.log('send', p2.toString(16), chunk.length.toString(16), chunk);\n  const reply = await transport.send(LEDGER_CLA, instruction, p1, p2, chunk);\n\n  return reply.slice(0, reply.length - 2);\n}\n\nconst BIP32_HARDENED_BIT = (1 << 31) >>> 0;\nfunction harden(n: number = 0) {\n  return (n | BIP32_HARDENED_BIT) >>> 0;\n}\n\nexport function getSolanaDerivationPath(account?: number, change?: number) {\n  var length;\n  if (account !== undefined) {\n    if (change !== undefined) {\n      length = 4;\n    } else {\n      length = 3;\n    }\n  } else {\n    length = 2;\n  }\n\n  var derivationPath = Buffer.alloc(1 + length * 4);\n  // eslint-disable-next-line\n  var offset = 0;\n  offset = derivationPath.writeUInt8(length, offset);\n  offset = derivationPath.writeUInt32BE(harden(44), offset); // Using BIP44\n  offset = derivationPath.writeUInt32BE(harden(501), offset); // Solana's BIP44 path\n\n  if (length > 2) {\n    offset = derivationPath.writeUInt32BE(harden(account), offset);\n    if (length === 4) {\n      // @FIXME: https://github.com/project-serum/spl-token-wallet/issues/59\n      offset = derivationPath.writeUInt32BE(harden(change), offset);\n    }\n  }\n\n  return derivationPath;\n}\n\nexport async function signTransaction(\n  transport: Transport,\n  transaction: Transaction,\n  derivationPath: Buffer = getSolanaDerivationPath(),\n) {\n  const messageBytes = transaction.serializeMessage();\n  return signBytes(transport, messageBytes, derivationPath);\n}\n\nexport async function signBytes(\n  transport: Transport,\n  bytes: Buffer,\n  derivationPath: Buffer = getSolanaDerivationPath(),\n) {\n  const numPaths = Buffer.alloc(1);\n  numPaths.writeUInt8(1, 0);\n\n  const payload = Buffer.concat([numPaths, derivationPath, bytes]);\n\n  // @FIXME: must enable blind signing in Solana Ledger App per https://github.com/project-serum/spl-token-wallet/issues/71\n  // See also https://github.com/project-serum/spl-token-wallet/pull/23#issuecomment-712317053\n  return ledgerSend(transport, INS_SIGN_MESSAGE, P1_CONFIRM, payload);\n}\n\nexport async function getPublicKey(\n  transport: Transport,\n  derivationPath: Buffer = getSolanaDerivationPath(),\n) {\n  const publicKeyBytes = await ledgerSend(\n    transport,\n    INS_GET_PUBKEY,\n    P1_NON_CONFIRM,\n    derivationPath,\n  );\n\n  return new PublicKey(publicKeyBytes);\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals\n    ? Math.floor(value * 10 ** decimals) / 10 ** decimals\n    : Math.floor(value);\n}\n\nexport function roundToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value): number {\n  if (\n    !isNaN(value) &&\n    Math.floor(value) !== value &&\n    value.toString().includes('.')\n  )\n    return value.toString().split('.')[1].length || 0;\n  if (\n    !isNaN(value) &&\n    Math.floor(value) !== value &&\n    value.toString().includes('e')\n  )\n    return parseInt(value.toString().split('e-')[1] || '0');\n  return 0;\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\n  return new BN(10).pow(new BN(decimals));\n}\n\nconst localStorageListeners = {};\n\nexport function useLocalStorageStringState(\n  key: string,\n  defaultState: string | null = null,\n): [string | null, (newState: string | null) => void] {\n  const state = localStorage.getItem(key) || defaultState;\n\n  const [, notify] = useState(key + '\\n' + state);\n\n  useEffect(() => {\n    if (!localStorageListeners[key]) {\n      localStorageListeners[key] = [];\n    }\n    localStorageListeners[key].push(notify);\n    return () => {\n      localStorageListeners[key] = localStorageListeners[key].filter(\n        (listener) => listener !== notify,\n      );\n      if (localStorageListeners[key].length === 0) {\n        delete localStorageListeners[key];\n      }\n    };\n  }, [key]);\n\n  const setState = useCallback<(newState: string | null) => void>(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, newState);\n      }\n      localStorageListeners[key].forEach((listener) =>\n        listener(key + '\\n' + newState),\n      );\n    },\n    [state, key],\n  );\n\n  return [state, setState];\n}\n\nexport function useLocalStorageState<T = any>(\n  key: string,\n  defaultState: T | null = null,\n): [T, (newState: T) => void] {\n  let [stringState, setStringState] = useLocalStorageStringState(\n    key,\n    JSON.stringify(defaultState),\n  );\n  return [\n    useMemo(() => stringState && JSON.parse(stringState), [stringState]),\n    (newState) => setStringState(JSON.stringify(newState)),\n  ];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address: PublicKey, size = 4) {\n  const base58 = address.toBase58();\n  return base58.slice(0, size) + '…' + base58.slice(-size);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache: Map<any, any> = new Map();\n\nclass FetchLoopListener<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  refreshInterval: number;\n  refreshIntervalOnError: number | null;\n  callback: () => void;\n  cacheNullValues: Boolean = true;\n\n  constructor(\n    cacheKey: any,\n    fn: () => Promise<T>,\n    refreshInterval: number,\n    refreshIntervalOnError: number | null,\n    callback: () => void,\n    cacheNullValues: Boolean,\n  ) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n    this.cacheNullValues = cacheNullValues;\n  }\n}\n\nclass FetchLoopInternal<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  timeoutId: null | any;\n  listeners: Set<FetchLoopListener<T>>;\n  errors: number;\n  cacheNullValues: Boolean = true;\n\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n    this.cacheNullValues = cacheNullValues;\n  }\n\n  get refreshInterval(): number {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError(): number | null {\n    const refreshIntervalsOnError: number[] = [...this.listeners]\n      .map((listener) => listener.refreshIntervalOnError)\n      .filter((x): x is number => x !== null);\n    if (refreshIntervalsOnError.length === 0) {\n      return null;\n    }\n    return Math.min(...refreshIntervalsOnError);\n  }\n\n  get stopped(): boolean {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener: FetchLoopListener<T>): void {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener: FetchLoopListener<T>): void {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners(): void {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      if (!this.cacheNullValues && data === null) {\n        console.log(`Not caching null value for ${this.cacheKey}`);\n        // cached data has not changed so no need to re-render\n        this.errors = 0;\n        return data;\n      } else {\n        globalCache.set(this.cacheKey, data);\n        this.errors = 0;\n        this.notifyListeners();\n        return data;\n      }\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener<T>(listener: FetchLoopListener<T>) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal<T>(\n          listener.cacheKey,\n          listener.fn,\n          listener.cacheNullValues,\n        ),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener<T>(listener: FetchLoopListener<T>) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n      globalCache.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData<T = any>(\n  asyncFn: () => Promise<T>,\n  cacheKey: any,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n  cacheNullValues: Boolean = true,\n): [null | undefined | T, boolean] {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener<T>(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n      cacheNullValues,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey: any, clearCache = false): void {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches(): void {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(\n  cacheKey: any,\n  value: any,\n  { initializeOnly = false } = {},\n): void {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { useLocalStorageState } from './utils';\nimport { Account, AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport { ConnectionContextValues, EndpointInfo } from './types';\n\nexport const ENDPOINTS: EndpointInfo[] = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n    custom: false,\n  },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(\n  null,\n);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<\n    EndpointInfo[]\n  >('customConnectionEndpoints', []);\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => {\n      connection.removeAccountChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => {\n      connection.removeSlotChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => {\n      sendConnection.removeAccountChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => {\n      sendConnection.removeSlotChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{\n        endpoint,\n        setEndpoint,\n        connection,\n        sendConnection,\n        availableEndpoints,\n        setCustomEndpoints,\n      }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.connection;\n}\n\nexport function useSendConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return {\n    endpoint: context.endpoint,\n    endpointInfo: context.availableEndpoints.find(\n      (info) => info.endpoint === context.endpoint,\n    ),\n    setEndpoint: context.setEndpoint,\n    availableEndpoints: context.availableEndpoints,\n    setCustomEndpoints: context.setCustomEndpoints,\n  };\n}\n\nexport function useAccountInfo(\n  publicKey: PublicKey | undefined | null,\n): [AccountInfo<Buffer> | null | undefined, boolean] {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousInfo: AccountInfo<Buffer> | null = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (info) => {\n        if (\n          !previousInfo ||\n          !previousInfo.data.equals(info.data) ||\n          previousInfo.lamports !== info.lamports\n        ) {\n          previousInfo = info;\n          setCache(cacheKey, info);\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  const previousInfoRef = useRef<AccountInfo<Buffer> | null | undefined>(null);\n  if (\n    !accountInfo ||\n    !previousInfoRef.current ||\n    !previousInfoRef.current.data.equals(accountInfo.data) ||\n    previousInfoRef.current.lamports !== accountInfo.lamports\n  ) {\n    previousInfoRef.current = accountInfo;\n  }\n  return [previousInfoRef.current, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n","import React from 'react';\nimport { notification } from 'antd';\nimport Link from '../components/Link';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'bottomLeft',\n}: {\n  message: string;\n  description?: string | JSX.Element;\n  txid?: string;\n  type?: string;\n  placement?: string;\n}) {\n  if (txid) {\n    description = (\n      <Link\n        external\n        to={'https://explorer.solana.com/tx/' + txid}\n        style={{ color: '#0000ff' }}\n      >\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n      </Link>\n    );\n  }\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import { PublicKey, Transaction } from '@solana/web3.js';\n\nexport const DEFAULT_PUBLIC_KEY = new PublicKey(\n  '11111111111111111111111111111111',\n);\n\nexport interface WalletAdapter {\n  publicKey: PublicKey;\n  autoApprove: boolean;\n  connected: boolean;\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions: (transaction: Transaction[]) => Promise<Transaction[]>;\n  connect: () => any;\n  disconnect: () => any;\n  on<T>(event: string, fn: () => void): this;\n}\n","import type Transport from '@ledgerhq/hw-transport';\nimport type { Transaction } from '@solana/web3.js';\n\nimport EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport TransportWebUSB from '@ledgerhq/hw-transport-webusb';\nimport { notify } from '../../utils/notifications';\nimport { getPublicKey, signTransaction } from './core';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\nexport class LedgerWalletAdapter extends EventEmitter implements WalletAdapter {\n  _connecting: boolean;\n  _publicKey: PublicKey | null;\n  _transport: Transport | null;\n\n  constructor() {\n    super();\n    this._connecting = false;\n    this._publicKey = null;\n    this._transport = null;\n  }\n\n  get publicKey() {\n    return this._publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  get connected() {\n    return this._publicKey !== null;\n  }\n\n  get autoApprove() {\n    return false;\n  }\n\n  public async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    const result: Transaction[] = [];\n    for (let i = 0; i < transactions.length; i++) {\n      const transaction = transactions[i];\n      const signed = await this.signTransaction(transaction);\n      result.push(signed);\n    }\n\n    return result;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._transport || !this._publicKey) {\n      throw new Error('Not connected to Ledger');\n    }\n\n    // @TODO: account selection (derivation path changes with account)\n    const signature = await signTransaction(this._transport, transaction);\n\n    transaction.addSignature(this._publicKey, signature);\n\n    return transaction;\n  }\n\n  async connect() {\n    if (this._connecting) {\n      return;\n    }\n\n    this._connecting = true;\n\n    try {\n      // @TODO: transport selection (WebUSB, WebHID, bluetooth, ...)\n      this._transport = await TransportWebUSB.create();\n      // @TODO: account selection\n      this._publicKey = await getPublicKey(this._transport);\n      this.emit('connect', this._publicKey);\n    } catch (error) {\n      notify({\n        message: 'Ledger Error',\n        description: error.message,\n      });\n      await this.disconnect();\n    } finally {\n      this._connecting = false;\n    }\n  }\n\n  async disconnect() {\n    let emit = false;\n    if (this._transport) {\n      await this._transport.close();\n      this._transport = null;\n      emit = true;\n    }\n\n    this._connecting = false;\n    this._publicKey = null;\n\n    if (emit) {\n      this.emit('disconnect');\n    }\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport { notify } from '../../utils/notifications';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\nexport class SolongWalletAdapter extends EventEmitter implements WalletAdapter {\n  _publicKey?: PublicKey;\n  _onProcess: boolean;\n  _connected: boolean;\n  constructor() {\n    super();\n    this._onProcess = false;\n    this._connected = false;\n    this.connect = this.connect.bind(this);\n  }\n\n  get connected() {\n    return this._connected;\n  }\n\n  get autoApprove() {\n    return false;\n  }\n\n  public async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    const solong = (window as any).solong;\n    if (solong.signAllTransactions) {\n      return solong.signAllTransactions(transactions);\n    } else {\n      const result: Transaction[] = [];\n      for (let i = 0; i < transactions.length; i++) {\n        const transaction = transactions[i];\n        const signed = await solong.signTransaction(transaction);\n        result.push(signed);\n      }\n\n      return result;\n    }\n  }\n\n  get publicKey() {\n    return this._publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    return (window as any).solong.signTransaction(transaction);\n  }\n\n  connect() {\n    if (this._onProcess) {\n      return;\n    }\n\n    if ((window as any).solong === undefined) {\n      notify({\n        message: 'Solong Error',\n        description: 'Please install solong wallet from Chrome ',\n      });\n      return;\n    }\n\n    this._onProcess = true;\n    (window as any).solong\n      .selectAccount()\n      .then((account: any) => {\n        this._publicKey = new PublicKey(account);\n        this._connected = true;\n        this.emit('connect', this._publicKey);\n      })\n      .catch(() => {\n        this.disconnect();\n      })\n      .finally(() => {\n        this._onProcess = false;\n      });\n  }\n\n  disconnect() {\n    if (this._publicKey) {\n      this._publicKey = undefined;\n      this._connected = false;\n      this.emit('disconnect');\n    }\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport { notify } from '../../utils/notifications';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\ntype PhantomEvent = 'disconnect' | 'connect';\ntype PhantomRequestMethod =\n  | 'connect'\n  | 'disconnect'\n  | 'signTransaction'\n  | 'signAllTransactions';\n\ninterface PhantomProvider {\n  publicKey?: PublicKey;\n  isConnected?: boolean;\n  autoApprove?: boolean;\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>;\n  connect: () => Promise<void>;\n  disconnect: () => Promise<void>;\n  on: (event: PhantomEvent, handler: (args: any) => void) => void;\n  request: (method: PhantomRequestMethod, params: any) => Promise<any>;\n  listeners: (event: PhantomEvent) => (() => void)[];\n}\n\nexport class PhantomWalletAdapter\n  extends EventEmitter\n  implements WalletAdapter {\n  constructor() {\n    super();\n    this.connect = this.connect.bind(this);\n  }\n\n  private get _provider(): PhantomProvider | undefined {\n    if ((window as any)?.solana?.isPhantom) {\n      return (window as any).solana;\n    }\n    return undefined;\n  }\n\n  private _handleConnect = (...args) => {\n    this.emit('connect', ...args);\n  }\n\n  private _handleDisconnect = (...args) => {\n    this.emit('disconnect', ...args);\n  }\n\n  get connected() {\n    return this._provider?.isConnected || false;\n  }\n\n  get autoApprove() {\n    return this._provider?.autoApprove || false;\n  }\n\n  async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    if (!this._provider) {\n      return transactions;\n    }\n\n    return this._provider.signAllTransactions(transactions);\n  }\n\n  get publicKey() {\n    return this._provider?.publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._provider) {\n      return transaction;\n    }\n\n    return this._provider.signTransaction(transaction);\n  }\n\n  connect() {\n    if (!this._provider) {\n      window.open('https://phantom.app/', '_blank');\n      notify({\n        message: 'Connection Error',\n        description: 'Please install Phantom wallet',\n      });\n      return;\n    }\n    if (!this._provider.listeners('connect').length) {\n      this._provider?.on('connect', this._handleConnect);\n    }\n    if (!this._provider.listeners('disconnect').length) {\n      this._provider?.on('disconnect', this._handleDisconnect);\n    }\n    return this._provider?.connect();\n  }\n\n  disconnect() {\n    if (this._provider) {\n      this._provider.disconnect();\n    }\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport { notify } from '../../utils/notifications';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\nexport class MathWalletAdapter extends EventEmitter implements WalletAdapter {\n  _publicKey?: PublicKey;\n  _onProcess: boolean;\n  _connected: boolean;\n  constructor() {\n    super();\n    this._onProcess = false;\n    this._connected = false;\n    this.connect = this.connect.bind(this);\n  }\n\n  get connected() {\n    return this._connected;\n  }\n\n  get autoApprove() {\n    return false;\n  }\n\n  public async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    if (!this._provider) {\n      return transactions;\n    }\n\n    return this._provider.signAllTransactions(transactions);\n  }\n\n  private get _provider() {\n    if ((window as any)?.solana?.isMathWallet) {\n      return (window as any).solana;\n    }\n    return undefined;\n  }\n\n  get publicKey() {\n    return this._publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._provider) {\n      return transaction;\n    }\n\n    return this._provider.signTransaction(transaction);\n  }\n\n  connect() {\n    if (this._onProcess) {\n      return;\n    }\n\n    if (!this._provider) {\n      window.open('https://mathwallet.org/', '_blank');\n      notify({\n        message: 'Math Wallet Error',\n        description: 'Please install mathwallet',\n      });\n      return;\n    }\n\n    this._onProcess = true;\n    this._provider\n      .getAccount()\n      .then((account: any) => {\n        this._publicKey = new PublicKey(account);\n        this._connected = true;\n        this.emit('connect', this._publicKey);\n      })\n      .catch(() => {\n        this.disconnect();\n      })\n      .finally(() => {\n        this._onProcess = false;\n      });\n  }\n\n  disconnect() {\n    if (this._publicKey) {\n      this._publicKey = undefined;\n      this._connected = false;\n      this.emit('disconnect');\n    }\n  }\n}\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\nimport { WalletContextValues } from './types';\nimport { Button, Modal } from 'antd';\nimport {\n  WalletAdapter,\n  LedgerWalletAdapter,\n  SolongWalletAdapter,\n  PhantomWalletAdapter,\n  SolletExtensionAdapter,\n  MathWalletAdapter,\n} from '../wallet-adapters';\n\nconst ASSET_URL =\n  'https://cdn.jsdelivr.net/gh/solana-labs/oyster@main/assets/wallets';\nexport const WALLET_PROVIDERS = [\n  {\n    name: 'sollet.io',\n    url: 'https://www.sollet.io',\n    icon: `${ASSET_URL}/sollet.svg`,\n  },\n  {\n    name: 'Sollet Extension',\n    url: 'https://www.sollet.io/extension',\n    icon: `${ASSET_URL}/sollet.svg`,\n    adapter: SolletExtensionAdapter as any,\n  },\n  {\n    name: 'Ledger',\n    url: 'https://www.ledger.com',\n    icon: `${ASSET_URL}/ledger.svg`,\n    adapter: LedgerWalletAdapter,\n  },\n  {\n    name: 'Solong',\n    url: 'https://www.solong.com',\n    icon: `${ASSET_URL}/solong.png`,\n    adapter: SolongWalletAdapter,\n  },\n  {\n    name: 'Phantom',\n    url: 'https://www.phantom.app',\n    icon: `https://www.phantom.app/img/logo.png`,\n    adapter: PhantomWalletAdapter,\n  },\n  {\n    name: 'MathWallet',\n    url: 'https://www.mathwallet.org',\n    icon: `${ASSET_URL}/mathwallet.svg`,\n    adapter: MathWalletAdapter,\n  }\n];\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n\n  const [autoConnect, setAutoConnect] = useState(false);\n  const [providerUrl, setProviderUrl] = useLocalStorageState('walletProvider');\n\n  const provider = useMemo(\n    () => WALLET_PROVIDERS.find(({ url }) => url === providerUrl),\n    [providerUrl],\n  );\n\n  let [wallet, setWallet] = useState<WalletAdapter|undefined>(undefined);\n\n  useEffect(() => {\n    if (provider) {\n      const updateWallet = () => {\n        // hack to also update wallet synchronously in case it disconnects\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        wallet = new (provider.adapter || Wallet)(\n          providerUrl,\n          endpoint,\n        ) as WalletAdapter;\n        setWallet(wallet);\n      }\n\n      if (document.readyState !== 'complete') {\n        // wait to ensure that browser extensions are loaded\n        const listener = () => {\n          updateWallet();\n          window.removeEventListener('load', listener);\n        };\n        window.addEventListener('load', listener);\n        return () => window.removeEventListener('load', listener);\n      } else {\n        updateWallet();\n      }\n    }\n  }, [provider, providerUrl, endpoint]);\n\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    if (wallet) {\n      wallet.on('connect', () => {\n        if (wallet?.publicKey) {\n          console.log('connected');\n          localStorage.removeItem('feeDiscountKey');\n          setConnected(true);\n          const walletPublicKey = wallet.publicKey.toBase58();\n          const keyToDisplay =\n            walletPublicKey.length > 20\n              ? `${walletPublicKey.substring(\n                  0,\n                  7,\n                )}.....${walletPublicKey.substring(\n                  walletPublicKey.length - 7,\n                  walletPublicKey.length,\n                )}`\n              : walletPublicKey;\n\n          notify({\n            message: 'Wallet update',\n            description: 'Connected to wallet ' + keyToDisplay,\n          });\n        }\n      });\n\n      wallet.on('disconnect', () => {\n        setConnected(false);\n        notify({\n          message: 'Wallet update',\n          description: 'Disconnected from wallet',\n        });\n        localStorage.removeItem('feeDiscountKey');\n      });\n    }\n\n    return () => {\n      setConnected(false);\n      if (wallet && wallet.connected) {\n        wallet.disconnect();\n        setConnected(false);\n      }\n    };\n  }, [wallet]);\n\n  useEffect(() => {\n    if (wallet && autoConnect) {\n      wallet.connect();\n      setAutoConnect(false);\n    }\n\n    return () => {};\n  }, [wallet, autoConnect]);\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const select = useCallback(() => setIsModalVisible(true), []);\n  const close = useCallback(() => setIsModalVisible(false), []);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        select,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n      <Modal\n        title=\"Select Wallet\"\n        okText=\"Connect\"\n        visible={isModalVisible}\n        okButtonProps={{ style: { display: 'none' } }}\n        onCancel={close}\n        width={400}\n      >\n        {WALLET_PROVIDERS.map((provider) => {\n          const onClick = function () {\n            setProviderUrl(provider.url);\n            setAutoConnect(true);\n            close();\n          };\n\n          return (\n            <Button\n              size=\"large\"\n              type={providerUrl === provider.url ? 'primary' : 'ghost'}\n              onClick={onClick}\n              icon={\n                <img\n                  alt={`${provider.name}`}\n                  width={20}\n                  height={20}\n                  src={provider.icon}\n                  style={{ marginRight: 8 }}\n                />\n              }\n              style={{\n                display: 'block',\n                width: '100%',\n                textAlign: 'left',\n                marginBottom: 8,\n              }}\n            >\n              {provider.name}\n            </Button>\n          );\n        })}\n      </Modal>\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error('Missing wallet context');\n  }\n\n  const wallet = context.wallet;\n  return {\n    connected: context.connected,\n    wallet: wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n    select: context.select,\n    connect() {\n      wallet ? wallet.connect() : context.select();\n    },\n    disconnect() {\n      wallet?.disconnect();\n    },\n  };\n}\n","import Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from '../../utils/notifications';\n\nexport function SolletExtensionAdapter(_, network) {\n  const sollet = (window as any).sollet;\n  if (sollet) {\n    return new Wallet(sollet, network);\n  }\n\n  return {\n    on: () => {},\n    connect: () => {\n      notify({\n        message: 'Sollet Extension Error',\n        description: 'Please install the Sollet Extension for Chrome',\n      });\n    }\n  }\n}","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport { getSelectedTokenAccountForMint } from './markets';\nimport {\n  Account,\n  AccountInfo,\n  Commitment,\n  Connection,\n  PublicKey,\n  RpcResponseAndContext,\n  SimulatedTransactionResponse,\n  SystemProgram,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\nimport BN from 'bn.js';\nimport {\n  DexInstructions,\n  Market,\n  OpenOrders, parseInstructionErrorResponse,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport { SelectedTokenAccounts, TokenAccount } from './types';\nimport { Order } from '@project-serum/serum/lib/market';\nimport { Buffer } from 'buffer';\nimport assert from 'assert';\nimport { struct } from 'superstruct';\nimport { WalletAdapter } from '../wallet-adapters';\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n}: {\n  connection: Connection;\n  wallet: WalletAdapter;\n  mintPublicKey: PublicKey;\n}): Promise<{\n  transaction: Transaction;\n  signer: Account;\n  newAccountPubkey: PublicKey;\n}> {\n  const newAccount = new Account();\n  const transaction = new Transaction();\n  const instruction = SystemProgram.createAccount({\n    fromPubkey: wallet.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\n    space: 165,\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\n  });\n  transaction.add(instruction);\n  transaction.add(\n    TokenInstructions.initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: wallet.publicKey,\n    }),\n  );\n  return {\n    transaction,\n    signer: newAccount,\n    newAccountPubkey: newAccount.publicKey,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}: {\n  market: Market;\n  openOrders: OpenOrders;\n  connection: Connection;\n  wallet: WalletAdapter;\n  baseCurrencyAccount: TokenAccount;\n  quoteCurrencyAccount: TokenAccount;\n}): Promise<string | undefined> {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    notify({ message: 'Not connected' });\n    return;\n  }\n\n  let createAccountTransaction: Transaction | undefined;\n  let createAccountSigner: Account | undefined;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  let referrerQuoteWallet: PublicKey | null = null;\n  if (market.supportsReferralFees) {\n    const usdt = TOKEN_MINTS.find(({ name }) => name === 'USDT');\n    const usdc = TOKEN_MINTS.find(({ name }) => name === 'USDC');\n    if (\n      process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS &&\n      usdt &&\n      market.quoteMintAddress.equals(usdt.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS,\n      );\n    } else if (\n      process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS &&\n      usdc &&\n      market.quoteMintAddress.equals(usdc.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS,\n      );\n    }\n  }\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n    referrerQuoteWallet,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n  let signers = createAccountSigner\n    ? [...settleFundsSigners, createAccountSigner]\n    : settleFundsSigners;\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n    sendingMessage: 'Settling funds...',\n  });\n}\n\nexport async function settleAllFunds({\n  connection,\n  wallet,\n  tokenAccounts,\n  markets,\n  selectedTokenAccounts,\n}: {\n  connection: Connection;\n  wallet: WalletAdapter;\n  tokenAccounts: TokenAccount[];\n  markets: Market[];\n  selectedTokenAccounts?: SelectedTokenAccounts;\n}) {\n  if (!markets || !wallet || !connection || !tokenAccounts) {\n    return;\n  }\n\n  const programIds: PublicKey[] = [];\n  markets\n    .reduce((cumulative, m) => {\n      // @ts-ignore\n      cumulative.push(m._programId);\n      return cumulative;\n    }, [])\n    .forEach((programId) => {\n      if (!programIds.find((p) => p.equals(programId))) {\n        programIds.push(programId);\n      }\n    });\n\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\n    const openOrdersAccounts = await OpenOrders.findForOwner(\n      connection,\n      wallet.publicKey,\n      programId,\n    );\n    return openOrdersAccounts.filter(\n      (openOrders) =>\n        openOrders.baseTokenFree.toNumber() ||\n        openOrders.quoteTokenFree.toNumber(),\n    );\n  };\n\n  const openOrdersAccountsForProgramIds = await Promise.all(\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\n  );\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\n    (accounts, current) => accounts.concat(current),\n    [],\n  );\n\n  const settleTransactions = (\n    await Promise.all(\n      openOrdersAccounts.map((openOrdersAccount) => {\n        const market = markets.find((m) =>\n          // @ts-ignore\n          m._decoded?.ownAddress?.equals(openOrdersAccount.market),\n        );\n        const baseMint = market?.baseMintAddress;\n        const quoteMint = market?.quoteMintAddress;\n\n        const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          baseMint,\n          baseMint &&\n            selectedTokenAccounts &&\n            selectedTokenAccounts[baseMint.toBase58()],\n        )?.pubkey;\n        const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          quoteMint,\n          quoteMint &&\n            selectedTokenAccounts &&\n            selectedTokenAccounts[quoteMint.toBase58()],\n        )?.pubkey;\n        if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\n          return null;\n        }\n        return (\n          market &&\n          market.makeSettleFundsTransaction(\n            connection,\n            openOrdersAccount,\n            selectedBaseTokenAccount,\n            selectedQuoteTokenAccount,\n          )\n        );\n      }),\n    )\n  ).filter(\n    (\n      x,\n    ): x is {\n      signers: Account[];\n      transaction: Transaction;\n      payer: PublicKey;\n    } => !!x,\n  );\n  if (!settleTransactions || settleTransactions.length === 0) return;\n\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\n  const signers: Array<Account> = [];\n  settleTransactions\n    .reduce((cumulative: Array<Account>, t) => cumulative.concat(t.signers), [])\n    .forEach((signer) => {\n      if (!signers.find((s) => s.publicKey.equals(signer.publicKey))) {\n        signers.push(signer);\n      }\n    });\n\n  const transaction = mergeTransactions(transactions);\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n  });\n}\n\nexport async function cancelOrder(params: {\n  market: Market;\n  connection: Connection;\n  wallet: WalletAdapter;\n  order: Order;\n}) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({\n  market,\n  wallet,\n  connection,\n  orders,\n}: {\n  market: Market;\n  wallet: WalletAdapter;\n  connection: Connection;\n  orders: Order[];\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    sendingMessage: 'Sending cancel...',\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  feeDiscountPubkey = undefined,\n}: {\n  side: 'buy' | 'sell';\n  price: number;\n  size: number;\n  orderType: 'ioc' | 'postOnly' | 'limit';\n  market: Market | undefined | null;\n  connection: Connection;\n  wallet: WalletAdapter;\n  baseCurrencyAccount: PublicKey | undefined;\n  quoteCurrencyAccount: PublicKey | undefined;\n  feeDiscountPubkey: PublicKey | undefined;\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n  const transaction = new Transaction();\n  const signers: Account[] = [];\n\n  if (!baseCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      signer: createAccountSigners,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    signers.push(createAccountSigners);\n    baseCurrencyAccount = newAccountPubkey;\n  }\n  if (!quoteCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      signer: createAccountSigners,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    signers.push(createAccountSigners);\n    quoteCurrencyAccount = newAccountPubkey;\n  }\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n    feeDiscountPubkey: feeDiscountPubkey || null,\n  };\n  console.log(params);\n\n  const matchOrderstransaction = market.makeMatchOrdersTransaction(5);\n  transaction.add(matchOrderstransaction);\n  const startTime = getUnixTs();\n  let {\n    transaction: placeOrderTx,\n    signers: placeOrderSigners,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    120_000,\n    120_000,\n  );\n  const endTime = getUnixTs();\n  console.log(`Creating order transaction took ${endTime - startTime}`);\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  signers.push(...placeOrderSigners);\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    signers,\n    sendingMessage: 'Sending order...',\n  });\n}\n\nexport async function listMarket({\n  connection,\n  wallet,\n  baseMint,\n  quoteMint,\n  baseLotSize,\n  quoteLotSize,\n  dexProgramId,\n}: {\n  connection: Connection;\n  wallet: WalletAdapter;\n  baseMint: PublicKey;\n  quoteMint: PublicKey;\n  baseLotSize: number;\n  quoteLotSize: number;\n  dexProgramId: PublicKey;\n}) {\n  const market = new Account();\n  const requestQueue = new Account();\n  const eventQueue = new Account();\n  const bids = new Account();\n  const asks = new Account();\n  const baseVault = new Account();\n  const quoteVault = new Account();\n  const feeRateBps = 0;\n  const quoteDustThreshold = new BN(100);\n\n  async function getVaultOwnerAndNonce() {\n    const nonce = new BN(0);\n    while (true) {\n      try {\n        const vaultOwner = await PublicKey.createProgramAddress(\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\n          dexProgramId,\n        );\n        return [vaultOwner, nonce];\n      } catch (e) {\n        nonce.iaddn(1);\n      }\n    }\n  }\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\n\n  const tx1 = new Transaction();\n  tx1.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: baseVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: quoteVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    TokenInstructions.initializeAccount({\n      account: baseVault.publicKey,\n      mint: baseMint,\n      owner: vaultOwner,\n    }),\n    TokenInstructions.initializeAccount({\n      account: quoteVault.publicKey,\n      mint: quoteMint,\n      owner: vaultOwner,\n    }),\n  );\n\n  const tx2 = new Transaction();\n  tx2.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: market.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(\n        Market.getLayout(dexProgramId).span,\n      ),\n      space: Market.getLayout(dexProgramId).span,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: requestQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\n      space: 5120 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: eventQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\n      space: 262144 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: bids.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: asks.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    DexInstructions.initializeMarket({\n      market: market.publicKey,\n      requestQueue: requestQueue.publicKey,\n      eventQueue: eventQueue.publicKey,\n      bids: bids.publicKey,\n      asks: asks.publicKey,\n      baseVault: baseVault.publicKey,\n      quoteVault: quoteVault.publicKey,\n      baseMint,\n      quoteMint,\n      baseLotSize: new BN(baseLotSize),\n      quoteLotSize: new BN(quoteLotSize),\n      feeRateBps,\n      vaultSignerNonce,\n      quoteDustThreshold,\n      programId: dexProgramId,\n    }),\n  );\n\n  const signedTransactions = await signTransactions({\n    transactionsAndSigners: [\n      { transaction: tx1, signers: [baseVault, quoteVault] },\n      {\n        transaction: tx2,\n        signers: [market, requestQueue, eventQueue, bids, asks],\n      },\n    ],\n    wallet,\n    connection,\n  });\n  for (let signedTransaction of signedTransactions) {\n    await sendSignedTransaction({\n      signedTransaction,\n      connection,\n    });\n  }\n\n  return market.publicKey;\n}\n\nexport const getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nexport async function sendTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  transaction: Transaction;\n  wallet: WalletAdapter;\n  signers?: Array<Account>;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}) {\n  const signedTransaction = await signTransaction({\n    transaction,\n    wallet,\n    signers,\n    connection,\n  });\n  return await sendSignedTransaction({\n    signedTransaction,\n    connection,\n    sendingMessage,\n    sentMessage,\n    successMessage,\n    timeout,\n  });\n}\n\nexport async function signTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n}: {\n  transaction: Transaction;\n  wallet: WalletAdapter;\n  signers?: Array<Account>;\n  connection: Connection;\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.setSigners(wallet.publicKey, ...signers.map((s) => s.publicKey));\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  return await wallet.signTransaction(transaction);\n}\n\nexport async function signTransactions({\n  transactionsAndSigners,\n  wallet,\n  connection,\n}: {\n  transactionsAndSigners: {\n    transaction: Transaction;\n    signers?: Array<Account>;\n  }[];\n  wallet: WalletAdapter;\n  connection: Connection;\n}) {\n  const blockhash = (await connection.getRecentBlockhash('max')).blockhash;\n  transactionsAndSigners.forEach(({ transaction, signers = [] }) => {\n    transaction.recentBlockhash = blockhash;\n    transaction.setSigners(\n      wallet.publicKey,\n      ...signers.map((s) => s.publicKey),\n    );\n    if (signers?.length > 0) {\n      transaction.partialSign(...signers);\n    }\n  });\n  return await wallet.signAllTransactions(\n    transactionsAndSigners.map(({ transaction }) => transaction),\n  );\n}\n\nexport async function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<string> {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  notify({ message: sendingMessage });\n  const txid: TransactionSignature = await connection.sendRawTransaction(\n    rawTransaction,\n    {\n      skipPreflight: true,\n    },\n  );\n  notify({ message: sentMessage, type: 'success', txid });\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(300);\n    }\n  })();\n  try {\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\n  } catch (err) {\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    let simulateResult: SimulatedTransactionResponse | null = null;\n    try {\n      simulateResult = (\n        await simulateTransaction(connection, signedTransaction, 'single')\n      ).value;\n    } catch (e) {}\n    if (simulateResult && simulateResult.err) {\n      if (simulateResult.logs) {\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\n          const line = simulateResult.logs[i];\n          if (line.startsWith('Program log: ')) {\n            throw new Error(\n              'Transaction failed: ' + line.slice('Program log: '.length),\n            );\n          }\n        }\n      }\n      let parsedError;\n      if (typeof simulateResult.err == 'object' && \"InstructionError\" in simulateResult.err) {\n        const parsedErrorInfo = parseInstructionErrorResponse(signedTransaction, simulateResult.err[\"InstructionError\"]);\n        parsedError = parsedErrorInfo.error;\n      } else {\n        parsedError = JSON.stringify(simulateResult.err);\n      }\n      throw new Error(parsedError);\n    }\n    throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n  notify({ message: successMessage, type: 'success', txid });\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result.err);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t): t is Transaction => t !== undefined)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n\nfunction jsonRpcResult(resultDescription: any) {\n  const jsonRpcVersion = struct.literal('2.0');\n  return struct.union([\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'any',\n    }),\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'null?',\n      result: resultDescription,\n    }),\n  ]);\n}\n\nfunction jsonRpcResultAndContext(resultDescription: any) {\n  return jsonRpcResult({\n    context: struct({\n      slot: 'number',\n    }),\n    value: resultDescription,\n  });\n}\n\nconst AccountInfoResult = struct({\n  executable: 'boolean',\n  owner: 'string',\n  lamports: 'number',\n  data: 'any',\n  rentEpoch: 'number?',\n});\n\nexport const GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(\n  struct.array([struct.union(['null', AccountInfoResult])]),\n);\n\nexport async function getMultipleSolanaAccounts(\n  connection: Connection,\n  publicKeys: PublicKey[],\n): Promise<\n  RpcResponseAndContext<{ [key: string]: AccountInfo<Buffer> | null }>\n> {\n  const args = [publicKeys.map((k) => k.toBase58()), { commitment: 'recent' }];\n  // @ts-ignore\n  const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\n  const res = GetMultipleAccountsAndContextRpcResult(unsafeRes);\n  if (res.error) {\n    throw new Error(\n      'failed to get info about accounts ' +\n        publicKeys.map((k) => k.toBase58()).join(', ') +\n        ': ' +\n        res.error.message,\n    );\n  }\n  assert(typeof res.result !== 'undefined');\n  const accounts: Array<{\n    executable: any;\n    owner: PublicKey;\n    lamports: any;\n    data: Buffer;\n  } | null> = [];\n  for (const account of res.result.value) {\n    let value: {\n      executable: any;\n      owner: PublicKey;\n      lamports: any;\n      data: Buffer;\n    } | null = null;\n    if (res.result.value) {\n      const { executable, owner, lamports, data } = account;\n      assert(data[1] === 'base64');\n      value = {\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n        data: Buffer.from(data[0], 'base64'),\n      };\n    }\n    accounts.push(value);\n  }\n  return {\n    context: {\n      slot: res.result.context.slot,\n    },\n    value: Object.fromEntries(\n      accounts.map((account, i) => [publicKeys[i].toBase58(), account]),\n    ),\n  };\n}\n\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\nasync function simulateTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  commitment: Commitment,\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n  // @ts-ignore\n  transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching,\n  );\n\n  const signData = transaction.serializeMessage();\n  // @ts-ignore\n  const wireTransaction = transaction._serialize(signData);\n  const encodedTransaction = wireTransaction.toString('base64');\n  const config: any = { encoding: 'base64', commitment };\n  const args = [encodedTransaction, config];\n\n  // @ts-ignore\n  const res = await connection._rpcRequest('simulateTransaction', args);\n  if (res.error) {\n    throw new Error('failed to simulate transaction: ' + res.error.message);\n  }\n  return res.result;\n}\n","import * as BufferLayout from 'buffer-layout';\nimport bs58 from 'bs58';\nimport { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { TokenAccount } from './types';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport { useAllMarkets, useCustomMarkets, useTokenAccounts } from './markets';\nimport { getMultipleSolanaAccounts } from './send';\nimport { useConnection } from './connection';\nimport { useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport BN from 'bn.js';\nimport { useMemo } from 'react';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(36),\n  BufferLayout.blob(8, 'supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('initialized'),\n  BufferLayout.blob(36),\n]);\n\nexport function parseTokenAccountData(\n  data: Buffer,\n): { mint: PublicKey; owner: PublicKey; amount: number } {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport interface MintInfo {\n  decimals: number;\n  initialized: boolean;\n  supply: BN;\n}\n\nexport function parseTokenMintData(data): MintInfo {\n  let { decimals, initialized, supply } = MINT_LAYOUT.decode(data);\n  return {\n    decimals,\n    initialized: !!initialized,\n    supply: new BN(supply, 10, 'le'),\n  };\n}\n\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(\n  connection: Connection,\n  publicKey: PublicKey,\n): Promise<Array<{ publicKey: PublicKey; accountInfo: AccountInfo<Buffer> }>> {\n  let filters = getOwnedAccountsFilters(publicKey);\n  // @ts-ignore\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length,\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    });\n}\n\nexport async function getTokenAccountInfo(\n  connection: Connection,\n  ownerAddress: PublicKey,\n) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(\n    ({ publicKey, accountInfo }) => {\n      return {\n        pubkey: publicKey,\n        account: accountInfo,\n        effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n      };\n    },\n  );\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n\nexport function useMintToTickers(): { [mint: string]: string } {\n  const { customMarkets } = useCustomMarkets();\n  const [markets] = useAllMarkets();\n  return useMemo(() => {\n    const mintsToTickers = Object.fromEntries(\n      TOKEN_MINTS.map((mint) => [mint.address.toBase58(), mint.name]),\n    );\n    for (let market of markets || []) {\n      const customMarketInfo = customMarkets.find(\n        (customMarket) =>\n          customMarket.address === market.market.address.toBase58(),\n      );\n      if (!(market.market.baseMintAddress.toBase58() in mintsToTickers)) {\n        if (customMarketInfo) {\n          mintsToTickers[market.market.baseMintAddress.toBase58()] =\n            customMarketInfo.baseLabel || `${customMarketInfo.name}_BASE`;\n        }\n      }\n      if (!(market.market.quoteMintAddress.toBase58() in mintsToTickers)) {\n        if (customMarketInfo) {\n          mintsToTickers[market.market.quoteMintAddress.toBase58()] =\n            customMarketInfo.quoteLabel || `${customMarketInfo.name}_QUOTE`;\n        }\n      }\n    }\n    return mintsToTickers;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [markets?.length, customMarkets.length]);\n}\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\nexport function useMintInfos(): [\n  (\n    | {\n        [mintAddress: string]: {\n          decimals: number;\n          initialized: boolean;\n        } | null;\n      }\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const connection = useConnection();\n  const [tokenAccounts] = useTokenAccounts();\n  const [allMarkets] = useAllMarkets();\n\n  const allMints = (tokenAccounts || [])\n    .map((account) => account.effectiveMint)\n    .concat(\n      (allMarkets || []).map((marketInfo) => marketInfo.market.baseMintAddress),\n    )\n    .concat(\n      (allMarkets || []).map(\n        (marketInfo) => marketInfo.market.quoteMintAddress,\n      ),\n    );\n  const uniqueMints = [...new Set(allMints.map((mint) => mint.toBase58()))].map(\n    (stringMint) => new PublicKey(stringMint),\n  );\n\n  const getAllMintInfo = async () => {\n    const mintInfos = await getMultipleSolanaAccounts(connection, uniqueMints);\n    return Object.fromEntries(\n      Object.entries(mintInfos.value).map(([key, accountInfo]) => [\n        key,\n        accountInfo && parseTokenMintData(accountInfo.data),\n      ]),\n    );\n  };\n\n  return useAsyncData(\n    getAllMintInfo,\n    tuple(\n      'getAllMintInfo',\n      connection,\n      (tokenAccounts || []).length,\n      (allMarkets || []).length,\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n","import { BonfidaTrade } from './types';\n\nexport default class BonfidaApi {\n  static URL: string = 'https://serum-api.bonfida.com/';\n\n  static async get(path: string) {\n    try {\n      const response = await fetch(this.URL + path);\n      if (response.ok) {\n        const responseJson = await response.json();\n        return responseJson.success ? responseJson.data : null;\n      }\n    } catch (err) {\n      console.log(`Error fetching from Bonfida API ${path}: ${err}`);\n    }\n    return null;\n  }\n\n  static async getRecentTrades(\n    marketAddress: string,\n  ): Promise<BonfidaTrade[] | null> {\n    return BonfidaApi.get(`trades/address/${marketAddress}`);\n  }\n}\n\nexport const BONFIDA_DATA_FEED = 'https://serum-api.bonfida.com/tv';\n","import {\n  decodeEventQueue,\n  Market,\n  MARKETS,\n  OpenOrders,\n  Orderbook,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n  divideBnToNumber,\n  floorToDecimal,\n  getTokenMultiplierFromDecimals,\n  useLocalStorageState,\n} from './utils';\nimport { refreshCache, useAsyncData } from './fetch-loop';\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport tuple from 'immutable-tuple';\nimport { notify } from './notifications';\nimport BN from 'bn.js';\nimport {\n  getTokenAccountInfo,\n  parseTokenAccountData,\n  useMintInfos,\n} from './tokens';\nimport {\n  Balances,\n  CustomMarketInfo,\n  DeprecatedOpenOrdersBalances,\n  FullMarketInfo,\n  MarketContextValues,\n  MarketInfo,\n  OrderWithMarketAndMarketName,\n  SelectedTokenAccounts,\n  TokenAccount,\n  Trade,\n} from './types';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { Order } from '@project-serum/serum/lib/market';\nimport BonfidaApi from './bonfidaConnector';\nimport { sleep } from './utils';\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nexport const USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ name, deprecated }) => !deprecated && !process.env.REACT_APP_EXCLUDE_MARKETS?.includes(name));\n}\n\nexport function useAllMarkets() {\n  const connection = useConnection();\n  const { customMarkets } = useCustomMarkets();\n\n  const getAllMarkets = async () => {\n    const markets: Array<{\n      market: Market;\n      marketName: string;\n      programId: PublicKey;\n    } | null> = await Promise.all(\n      getMarketInfos(customMarkets).map(async (marketInfo) => {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          return {\n            market,\n            marketName: marketInfo.name,\n            programId: marketInfo.programId,\n          };\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n          return null;\n        }\n      }),\n    );\n    return markets.filter(\n      (m): m is { market: Market; marketName: string; programId: PublicKey } =>\n        !!m,\n    );\n  };\n  return useAsyncData(\n    getAllMarkets,\n    tuple('getAllMarkets', customMarkets.length, connection),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId: PublicKey;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(\n  null,\n);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === 'SRM/USDT' && !deprecated,\n);\n\nexport function getMarketDetails(\n  market: Market | undefined | null,\n  customMarkets: CustomMarketInfo[],\n): FullMarketInfo {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function useCustomMarkets() {\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<\n    CustomMarketInfo[]\n  >('customMarkets', []);\n  return { customMarkets, setCustomMarkets };\n}\n\nexport function MarketProvider({ marketAddress, setMarketAddress, children }) {\n  const { customMarkets, setCustomMarkets } = useCustomMarkets();\n\n  const address = marketAddress && new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo =\n    address && marketInfos.find((market) => market.address.equals(address));\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      if (DEFAULT_MARKET) {\n        setMarketAddress(DEFAULT_MARKET.address.toBase58());\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState<Market | null>();\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      // @ts-ignore\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function getTradePageUrl(marketAddress?: string) {\n  if (!marketAddress) {\n    const saved = localStorage.getItem('marketAddress');\n    if (saved) {\n      marketAddress = JSON.parse(saved);\n    }\n    marketAddress = marketAddress || DEFAULT_MARKET?.address.toBase58() || '';\n  }\n  return `/market/${marketAddress}`;\n}\n\nexport function useSelectedTokenAccounts(): [\n  SelectedTokenAccounts,\n  (newSelectedTokenAccounts: SelectedTokenAccounts) => void,\n] {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useLocalStorageState<SelectedTokenAccounts>('selectedTokenAccounts', {});\n  return [selectedTokenAccounts, setSelectedTokenAccounts];\n}\n\nexport function useMarket() {\n  const context = useContext(MarketContext);\n  if (!context) {\n    throw new Error('Missing market context');\n  }\n  return context;\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades && trades.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades(): Promise<any[] | null> {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useBonfidaTrades() {\n  const { market } = useMarket();\n  const marketAddress = market?.address.toBase58();\n\n  async function getBonfidaTrades() {\n    if (!marketAddress) {\n      return null;\n    }\n    return await BonfidaApi.getRecentTrades(marketAddress);\n  }\n\n  return useAsyncData(\n    getBonfidaTrades,\n    tuple('getBonfidaTrades', marketAddress),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n    false,\n  );\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  // @ts-ignore\n  let bidData = useAccountData(market && market._decoded.bids);\n  // @ts-ignore\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(\n  depth = 20,\n): [{ bids: number[][]; asks: number[][] }, boolean] {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected || !wallet) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts(): [\n  TokenAccount[] | null | undefined,\n  boolean,\n] {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected || !wallet) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(\n  accounts: TokenAccount[] | undefined | null,\n  mint: PublicKey | undefined,\n  selectedPubKey?: string | PublicKey | null,\n) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(\n    ({ effectiveMint, pubkey }) =>\n      mint.equals(effectiveMint) &&\n      (!selectedPubKey ||\n        (typeof selectedPubKey === 'string'\n          ? selectedPubKey\n          : selectedPubKey.toBase58()) === pubkey.toBase58()),\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.quoteMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.baseMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useLocallyStoredFeeDiscountKey(): {\n  storedFeeDiscountKey: PublicKey | undefined;\n  setStoredFeeDiscountKey: (key: string) => void;\n} {\n  const [\n    storedFeeDiscountKey,\n    setStoredFeeDiscountKey,\n  ] = useLocalStorageState<string>(`feeDiscountKey`, undefined);\n  return {\n    storedFeeDiscountKey: storedFeeDiscountKey\n      ? new PublicKey(storedFeeDiscountKey)\n      : undefined,\n    setStoredFeeDiscountKey,\n  };\n}\n\nexport function useFeeDiscountKeys(): [\n  (\n    | {\n        pubkey: PublicKey;\n        feeTier: number;\n        balance: number;\n        mint: PublicKey;\n      }[]\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  const { setStoredFeeDiscountKey } = useLocallyStoredFeeDiscountKey();\n  let getFeeDiscountKeys = async () => {\n    if (!connected || !wallet) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    const feeDiscountKey = await market.findFeeDiscountKeys(\n      connection,\n      wallet.publicKey,\n    );\n    if (feeDiscountKey) {\n      setStoredFeeDiscountKey(feeDiscountKey[0].pubkey.toBase58());\n    }\n    return feeDiscountKey;\n  };\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getFillsForAllMarkets() {\n    let fills: Trade[] = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market || !wallet) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket: Trade[] = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersAccounts() {\n  const { wallet, connected } = useWallet();\n  const connection = useConnection();\n  const marketInfos = useMarketInfos();\n  const programIds = [\n    ...new Set(marketInfos.map((info) => info.programId.toBase58())),\n  ].map((stringProgramId) => new PublicKey(stringProgramId));\n\n  const getAllOpenOrdersAccounts = async () => {\n    if (!connected || !wallet) {\n      return [];\n    }\n    return (\n      await Promise.all(\n        programIds.map((programId) =>\n          OpenOrders.findForOwner(connection, wallet.publicKey, programId),\n        ),\n      )\n    ).flat();\n  };\n  return useAsyncData(\n    getAllOpenOrdersAccounts,\n    tuple(\n      'getAllOpenOrdersAccounts',\n      connection,\n      connected,\n      wallet?.publicKey?.toBase58(),\n      marketInfos.length,\n      (programIds || []).length,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersBalances() {\n  const [\n    openOrdersAccounts,\n    loadedOpenOrdersAccounts,\n  ] = useAllOpenOrdersAccounts();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n  const [allMarkets] = useAllMarkets();\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\n    return {};\n  }\n\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((m) => [m.market.address.toBase58(), m]),\n  );\n  const openOrdersBalances: {\n    [mint: string]: { market: PublicKey; free: number; total: number }[];\n  } = {};\n  for (let account of openOrdersAccounts || []) {\n    const marketInfo = marketsByAddress[account.market.toBase58()];\n    const baseMint = marketInfo?.market.baseMintAddress.toBase58();\n    const quoteMint = marketInfo?.market.quoteMintAddress.toBase58();\n    if (!(baseMint in openOrdersBalances)) {\n      openOrdersBalances[baseMint] = [];\n    }\n    if (!(quoteMint in openOrdersBalances)) {\n      openOrdersBalances[quoteMint] = [];\n    }\n\n    const baseMintInfo = mintInfos && mintInfos[baseMint];\n    const baseFree = divideBnToNumber(\n      new BN(account.baseTokenFree),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const baseTotal = divideBnToNumber(\n      new BN(account.baseTokenTotal),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint];\n    const quoteFree = divideBnToNumber(\n      new BN(account.quoteTokenFree),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n    const quoteTotal = divideBnToNumber(\n      new BN(account.quoteTokenTotal),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n\n    openOrdersBalances[baseMint].push({\n      market: account.market,\n      free: baseFree,\n      total: baseTotal,\n    });\n    openOrdersBalances[quoteMint].push({\n      market: account.market,\n      free: quoteFree,\n      total: quoteTotal,\n    });\n  }\n  return openOrdersBalances;\n}\n\nexport const useAllOpenOrders = (): {\n  openOrders: { orders: Order[]; marketAddress: string }[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} => {\n  const connection = useConnection();\n  const { connected, wallet } = useWallet();\n  const [loaded, setLoaded] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n  const [openOrders, setOpenOrders] = useState<\n    { orders: Order[]; marketAddress: string }[] | null | undefined\n  >(null);\n  const [lastRefresh, setLastRefresh] = useState(0);\n\n  const refreshOpenOrders = () => {\n    if (new Date().getTime() - lastRefresh > 10 * 1000) {\n      setRefresh((prev) => prev + 1);\n    } else {\n      console.log('not refreshing');\n    }\n  };\n\n  useEffect(() => {\n    if (connected && wallet) {\n      const getAllOpenOrders = async () => {\n        setLoaded(false);\n        const _openOrders: { orders: Order[]; marketAddress: string }[] = [];\n        const getOpenOrdersForMarket = async (marketInfo: MarketInfo) => {\n          await sleep(1000 * Math.random()); // Try not to hit rate limit\n          try {\n            const market = await Market.load(\n              connection,\n              marketInfo.address,\n              undefined,\n              marketInfo.programId,\n            );\n            const orders = await market.loadOrdersForOwner(\n              connection,\n              wallet?.publicKey,\n              30000,\n            );\n            _openOrders.push({\n              orders: orders,\n              marketAddress: marketInfo.address.toBase58(),\n            });\n          } catch (e) {\n            console.warn(`Error loading open order ${marketInfo.name} - ${e}`);\n          }\n        };\n        await Promise.all(USE_MARKETS.map((m) => getOpenOrdersForMarket(m)));\n        setOpenOrders(_openOrders);\n        setLastRefresh(new Date().getTime());\n        setLoaded(true);\n      };\n      getAllOpenOrders();\n    }\n  }, [connection, connected, wallet, refresh]);\n  return {\n    openOrders: openOrders,\n    loaded: loaded,\n    refreshOpenOrders: refreshOpenOrders,\n  };\n};\n\nexport function useBalances(): Balances[] {\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets(): {\n  mint: string;\n  balance: number;\n}[] {\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected } = useWallet();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n\n  if (!connected || !mintInfosConnected) {\n    return [];\n  }\n\n  let balances: { [mint: string]: number } = {};\n  for (let account of tokenAccounts || []) {\n    if (!account.account) {\n      continue;\n    }\n    let parsedAccount;\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\n      parsedAccount = {\n        mint: WRAPPED_SOL_MINT,\n        owner: account.pubkey,\n        amount: account.account.lamports,\n      };\n    } else {\n      parsedAccount = parseTokenAccountData(account.account.data);\n    }\n    if (!(parsedAccount.mint.toBase58() in balances)) {\n      balances[parsedAccount.mint.toBase58()] = 0;\n    }\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()];\n    const additionalAmount = divideBnToNumber(\n      new BN(parsedAccount.amount),\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0),\n    );\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\n  }\n  return Object.entries(balances).map(([mint, balance]) => {\n    return { mint, balance };\n  });\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      if (!marketInfo) {\n        console.log('Failed loading market');\n        notify({\n          message: 'Error loading market',\n          type: 'error',\n        });\n        return null;\n      }\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts?.filter(\n      (openOrders) => market && openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList &&\n    marketsList\n      .filter((market): market is Market => !!market)\n      .map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected || !wallet) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market: Market | null) => {\n      if (!market) {\n        return null;\n      }\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders)))\n      .filter((x): x is OrderWithMarketAndMarketName[] => !!x)\n      .flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\n    'customMarkets',\n    [],\n  );\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    if (!baseCurrency || !quoteCurrency || !market) {\n      return;\n    }\n    (openOrdersList || []).forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(\n  customMarkets: CustomMarketInfo[],\n): MarketInfo[] {\n  const customMarketsInfo = customMarkets.map((m) => ({\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n    deprecated: false,\n  }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n\nexport function useMarketInfos() {\n  const { customMarkets } = useCustomMarkets();\n  return getMarketInfos(customMarkets);\n}\n\n/**\n * If selling, choose min tick size. If buying choose a price\n * s.t. given the state of the orderbook, the order will spend\n * `cost` cost currency.\n *\n * @param orderbook serum Orderbook object\n * @param cost quantity to spend. Base currency if selling,\n *  quote currency if buying.\n * @param tickSizeDecimals size of price increment of the market\n */\nexport function getMarketOrderPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  if (orderbook.isBids) {\n    return orderbook.market.tickSize;\n  }\n  let spentCost = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  const asks = orderbook.getL2(1000);\n  for ([price, sizeAtLevel] of asks) {\n    costAtLevel = price * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      break;\n    }\n    spentCost += costAtLevel;\n  }\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = sendPrice;\n  }\n  return formattedPrice;\n}\n\nexport function getExpectedFillPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  let spentCost = 0;\n  let avgPrice = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  for ([price, sizeAtLevel] of orderbook.getL2(1000)) {\n    costAtLevel = (orderbook.isBids ? 1 : price) * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      avgPrice += (cost - spentCost) * price;\n      spentCost = cost;\n      break;\n    }\n    avgPrice += costAtLevel * price;\n    spentCost += costAtLevel;\n  }\n  const totalAvgPrice = avgPrice / Math.min(cost, spentCost);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(totalAvgPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = totalAvgPrice;\n  }\n  return formattedPrice;\n}\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef<() => void>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current && savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({\n  style = undefined,\n  children,\n  stretchVertical = false,\n}) {\n  return (\n    <Wrapper\n      style={{\n        height: stretchVertical ? 'calc(100% - 10px)' : undefined,\n        ...style,\n      }}\n    >\n      {children}\n    </Wrapper>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [orderbookData, setOrderbookData] = useState(null);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let sum = (total, [, size], index) =>\n        index < depth ? total + size : total;\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\n\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize,\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    return cumulative;\n  }\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {orderbookData?.asks.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      const id = setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        250,\n      );\n      return () => clearTimeout(id);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(market, openOrders) {\n    try {\n      await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.baseMintAddress,\n        ),\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.quoteMintAddress,\n        ),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n    onSettleSuccess && onSettleSuccess();\n  }\n\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Col, Row, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { OrderWithMarketAndMarketName } from '../../utils/types';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({\n  openOrders,\n  onCancelSuccess,\n  pageSize,\n  loading,\n  marketFilter,\n}: {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  onCancelSuccess?: () => void;\n  pageSize?: number;\n  loading?: boolean;\n  marketFilter?: boolean;\n}) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order?.orderId);\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const marketFilters = [\n    ...new Set((openOrders || []).map((orderInfos) => orderInfos.marketName)),\n  ].map((marketName) => {\n    return { text: marketName, value: marketName };\n  });\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n      filters: marketFilter ? marketFilters : undefined,\n      onFilter: (value, record) => record.marketName.indexOf(value) === 0,\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n      sorter: (a, b) => {\n        if (a.side === b.side) {\n          return 0;\n        } else if (a.side === 'buy') {\n          return 1;\n        } else {\n          return -1;\n        }\n      },\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n      sorter: (a, b) => b.size - a.size,\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      sorter: (a, b) => b.price - a.price,\n      showSorterTooltip: false,\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) => ({\n    ...order,\n    key: order.orderId,\n  }));\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={pageSize ? pageSize : 5}\n          loading={loading !== undefined && loading}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No (M)SRM accounts\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Holding SRM or MSRM makes you eligible for fee discounts:\n          </Typography>\n          <FeeScheduleTable />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  const { market } = useMarket();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\n      <Typography>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          Make sure to go to Balances and click Settle to send out your funds.\n        </Paragraph>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          To fund your wallet, <a href=\"https://www.sollet.io\">sollet.io</a>.\n          You can get SOL from FTX, Binance, BitMax, and others. You can get\n          other tokens from FTX.{' '}\n        </Paragraph>\n      </Typography>\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n        {market && market.supportsSrmFeeDiscounts ? (\n          <TabPane tab=\"Fee discounts\" key=\"fees\">\n            <FeesTable />\n          </TabPane>\n        ) : null}\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, baseOrQuote }) {\n  const { market, baseCurrency, quoteCurrency } = useMarket();\n\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let coinMint;\n  let account;\n  let depositCoin;\n  if (baseOrQuote === 'base') {\n    coinMint = market?.baseMintAddress;\n    account = baseCurrencyAccount;\n    depositCoin = baseCurrency;\n  } else if (baseOrQuote === 'quote') {\n    coinMint = market?.quoteMintAddress;\n    account = quoteCurrencyAccount;\n    depositCoin = quoteCurrency;\n  } else {\n    account = null;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { TokenAccount } from '../utils/types';\nimport { useSelectedTokenAccounts } from '../utils/markets';\nimport { Button, Col, Select, Typography } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { abbreviateAddress } from '../utils/utils';\nimport { notify } from '../utils/notifications';\n\nexport default function StandaloneTokenAccountsSelect({\n  accounts,\n  mint,\n  label,\n}: {\n  accounts: TokenAccount[] | null | undefined;\n  mint: string | undefined;\n  label?: boolean;\n}) {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useSelectedTokenAccounts();\n\n  let selectedValue: string | undefined;\n  if (mint && mint in selectedTokenAccounts) {\n    selectedValue = selectedTokenAccounts[mint];\n  } else if (accounts && accounts?.length > 0) {\n    selectedValue = accounts[0].pubkey.toBase58();\n  } else {\n    selectedValue = undefined;\n  }\n\n  const setTokenAccountForCoin = (value) => {\n    if (!mint) {\n      notify({\n        message: 'Error selecting token account',\n        description: 'Mint is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    const newSelectedTokenAccounts = { ...selectedTokenAccounts };\n    newSelectedTokenAccounts[mint] = value;\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\n  };\n\n  return (\n    <React.Fragment>\n      {label && <Col span={8}>Token account:</Col>}\n      <Col span={label ? 13 : 21}>\n        <Select\n          style={{ width: '100%' }}\n          value={selectedValue}\n          onSelect={setTokenAccountForCoin}\n        >\n          {accounts?.map((account) => (\n            <Select.Option\n              key={account.pubkey.toBase58()}\n              value={account.pubkey.toBase58()}\n            >\n              <Typography.Text code>\n                {label\n                  ? abbreviateAddress(account.pubkey, 8)\n                  : account.pubkey.toBase58()}\n              </Typography.Text>\n            </Select.Option>\n          ))}\n        </Select>\n      </Col>\n      <Col span={2} offset={1}>\n        <Button\n          shape=\"round\"\n          icon={<CopyOutlined />}\n          size={'small'}\n          onClick={() =>\n            selectedValue && navigator.clipboard.writeText(selectedValue)\n          }\n        />\n      </Col>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({\n  title,\n  address,\n  shorten = false,\n}: {\n  title?: undefined | any;\n  address: string;\n  shorten?: boolean;\n}) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + address}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        style={{ cursor: 'pointer' }}\n      >\n        {shorten ? `${address.slice(0, 4)}...${address.slice(-4)}` : address}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Col, Divider, Popover, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useTokenAccounts,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\nimport { notify } from '../utils/notifications';\nimport { Balances } from '../utils/types';\nimport StandaloneTokenAccountsSelect from './StandaloneTokenAccountSelect';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet, connected } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const [tokenAccounts] = useTokenAccounts();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    if (!wallet) {\n      notify({\n        message: 'Wallet not connected',\n        description: 'wallet is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    if (!market) {\n      notify({\n        message: 'Error settling funds',\n        description: 'market is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!openOrdersAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!baseCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!quoteCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  const formattedBalances: [\n    string | undefined,\n    Balances | undefined,\n    string,\n    string | undefined,\n  ][] = [\n    [\n      baseCurrency,\n      baseCurrencyBalances,\n      'base',\n      market?.baseMintAddress.toBase58(),\n    ],\n    [\n      quoteCurrency,\n      quoteCurrencyBalances,\n      'quote',\n      market?.quoteMintAddress.toBase58(),\n    ],\n  ];\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {formattedBalances.map(\n        ([currency, balances, baseOrQuote, mint], index) => (\n          <React.Fragment key={index}>\n            <Divider style={{ borderColor: 'white' }}>\n              {currency}{' '}\n              {mint && (\n                <Popover\n                  content={<LinkAddress address={mint} />}\n                  placement=\"bottomRight\"\n                  title=\"Token mint\"\n                  trigger=\"hover\"\n                >\n                  <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n                </Popover>\n              )}\n            </Divider>\n            {connected && (\n              <RowBox align=\"middle\" style={{ paddingBottom: 10 }}>\n                <StandaloneTokenAccountsSelect\n                  accounts={tokenAccounts?.filter(\n                    (account) => account.effectiveMint.toBase58() === mint,\n                  )}\n                  mint={mint}\n                  label\n                />\n              </RowBox>\n            )}\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Wallet balance:</Col>\n              <Col>{balances && balances.wallet}</Col>\n            </RowBox>\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Unsettled balance:</Col>\n              <Col>{balances && balances.unsettled}</Col>\n            </RowBox>\n            <RowBox align=\"middle\" justify=\"space-around\">\n              <Col style={{ width: 150 }}>\n                <ActionButton\n                  block\n                  size=\"large\"\n                  onClick={() => setBaseOrQuote(baseOrQuote)}\n                >\n                  Deposit\n                </ActionButton>\n              </Col>\n              <Col style={{ width: 150 }}>\n                <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                  Settle\n                </ActionButton>\n              </Col>\n            </RowBox>\n            <Tip>\n              All deposits go to your{' '}\n              <Link external to={providerUrl}>\n                {providerName}\n              </Link>{' '}\n              wallet\n            </Tip>\n          </React.Fragment>\n        ),\n      )}\n      <DepositDialog\n        baseOrQuote={baseOrQuote}\n        onClose={() => setBaseOrQuote('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useSelectedBaseCurrencyBalances,\n  useSelectedQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n  useFeeDiscountKeys,\n  useLocallyStoredFeeDiscountKey,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport {\n  getDecimalCount,\n  roundToDecimal,\n  floorToDecimal,\n} from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { getUnixTs, placeOrder } from '../utils/send';\nimport { SwitchChangeEventHandler } from 'antd/es/switch';\nimport { refreshCache } from '../utils/fetch-loop';\nimport tuple from 'immutable-tuple';\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({\n  style,\n  setChangeOrderRef,\n}: {\n  style?: any;\n  setChangeOrderRef?: (\n    ref: ({ size, price }: { size?: number; price?: number }) => void,\n  ) => void;\n}) {\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet, connected } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n  useFeeDiscountKeys();\n  const {\n    storedFeeDiscountKey: feeDiscountKey,\n  } = useLocallyStoredFeeDiscountKey();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote =\n    openOrdersAccount && market\n      ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n      : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  const publicKey = wallet?.publicKey;\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  useEffect(() => {\n    const warmUpCache = async () => {\n      try {\n        if (!wallet || !publicKey || !market) {\n          console.log(`Skipping refreshing accounts`);\n          return;\n        }\n        const startTime = getUnixTs();\n        console.log(`Refreshing accounts for ${market.address}`);\n        await market?.findOpenOrdersAccountsForOwner(sendConnection, publicKey);\n        await market?.findBestFeeDiscountKey(sendConnection, publicKey);\n        const endTime = getUnixTs();\n        console.log(\n          `Finished refreshing accounts for ${market.address} after ${\n            endTime - startTime\n          }`,\n        );\n      } catch (e) {\n        console.log(`Encountered error when refreshing trading accounts: ${e}`);\n      }\n    };\n    warmUpCache();\n    const id = setInterval(warmUpCache, 30_000);\n    return () => clearInterval(id);\n  }, [market, sendConnection, wallet, publicKey]);\n\n  const onSetBaseSize = (baseSize: number | undefined) => {\n    setBaseSize(baseSize);\n    if (!baseSize) {\n      setQuoteSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setQuoteSize(undefined);\n      return;\n    }\n    const rawQuoteSize = baseSize * usePrice;\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\n    setQuoteSize(quoteSize);\n    if (!quoteSize) {\n      setBaseSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setBaseSize(undefined);\n      return;\n    }\n    const rawBaseSize = quoteSize / usePrice;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({\n    size,\n    price,\n  }: {\n    size?: number;\n    price?: number;\n  }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize =\n      side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min(((baseSize || 0) / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice: number | string = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(\n        typeof formattedMarkPrice === 'number'\n          ? formattedMarkPrice\n          : parseFloat(formattedMarkPrice),\n      );\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice || 1)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    if (!price) {\n      console.warn('Missing price');\n      notify({\n        message: 'Missing price',\n        type: 'error',\n      });\n      return;\n    } else if (!baseSize) {\n      console.warn('Missing size');\n      notify({\n        message: 'Missing size',\n        type: 'error',\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await placeOrder({\n        side,\n        price,\n        size: baseSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey,\n      });\n      refreshCache(tuple('getTokenAccounts', wallet, connected));\n      setPrice(undefined);\n      onSetBaseSize(undefined);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <Input\n          style={{ textAlign: 'right', paddingBottom: 8 }}\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\n          suffix={\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n          }\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(parseFloat(e.target.value))}\n        />\n        <Input.Group compact style={{ paddingBottom: 8 }}>\n          <Input\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n            }\n            value={baseSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetBaseSize(parseFloat(e.target.value))}\n          />\n          <Input\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\n                {quoteCurrency}\n              </span>\n            }\n            value={quoteSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetQuoteSize(parseFloat(e.target.value))}\n          />\n        </Input.Group>\n        <Slider\n          value={sizeFraction}\n          tipFormatter={(value) => `${value}%`}\n          marks={sliderMarks}\n          onChange={onSliderChange}\n        />\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useBonfidaTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport { BonfidaTrade } from '../utils/types';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const [trades, loaded] = useBonfidaTrades();\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : {\n              marginTop: '10px',\n              minHeight: '270px',\n              maxHeight: 'calc(100vh - 700px)',\n            }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={8}>Price ({quoteCurrency}) </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Time\n        </Col>\n      </SizeTitle>\n      {!!trades && loaded && (\n        <div\n          style={{\n            marginRight: '-20px',\n            paddingRight: '5px',\n            overflowY: 'scroll',\n            maxHeight: smallScreen\n              ? 'calc(100% - 75px)'\n              : 'calc(100vh - 800px)',\n          }}\n        >\n          {trades.map((trade: BonfidaTrade, i: number) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col\n                span={8}\n                style={{\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right', color: '#434a59' }}>\n                {trade.time && new Date(trade.time).toLocaleTimeString()}\n              </Col>\n            </Row>\n          ))}\n        </div>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate new markets\n      </Title>\n      <Typography>\n        Markets on older versions of the DEX or using Wrapped USDT are now\n        deprecated. To migrate over to the new markets, please cancel your\n        orders and settle your funds on old markets. To convert from Wrapped\n        USDT to Native USDT use sollet.io.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Col, Input, Modal, Row, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nexport default function CustomMarketDialog({\n  visible,\n  onAddCustomMarket,\n  onClose,\n}) {\n  const connection = useConnection();\n\n  const [marketId, setMarketId] = useState('');\n\n  const [marketLabel, setMarketLabel] = useState('');\n  const [baseLabel, setBaseLabel] = useState('');\n  const [quoteLabel, setQuoteLabel] = useState('');\n\n  const [market, setMarket] = useState(null);\n  const [loadingMarket, setLoadingMarket] = useState(false);\n\n  const wellFormedMarketId = isValidPublicKey(marketId);\n\n  const [marketAccountInfo] = useAccountInfo(\n    wellFormedMarketId ? new PublicKey(marketId) : null,\n  );\n  const programId = marketAccountInfo\n    ? marketAccountInfo.owner.toBase58()\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\n\n  useEffect(() => {\n    if (!wellFormedMarketId || !programId) {\n      resetLabels();\n      return;\n    }\n    setLoadingMarket(true);\n    Market.load(\n      connection,\n      new PublicKey(marketId),\n      {},\n      new PublicKey(programId),\n    )\n      .then((market) => {\n        setMarket(market);\n      })\n      .catch(() => {\n        resetLabels();\n        setMarket(null);\n      })\n      .finally(() => setLoadingMarket(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, marketId, programId]);\n\n  const resetLabels = () => {\n    setMarketLabel(null);\n    setBaseLabel(null);\n    setQuoteLabel(null);\n  };\n\n  const knownMarket = MARKETS.find(\n    (m) =>\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\n  );\n  const knownProgram = MARKETS.find(\n    (m) => m.programId.toBase58() === programId,\n  );\n  const knownBaseCurrency =\n    market?.baseMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n      ?.name;\n\n  const knownQuoteCurrency =\n    market?.quoteMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n      ?.name;\n\n  const canSubmit =\n    !loadingMarket &&\n    !!market &&\n    market.publicKey.toBase58() === marketId &&\n    marketId &&\n    programId &&\n    marketLabel &&\n    (knownBaseCurrency || baseLabel) &&\n    (knownQuoteCurrency || quoteLabel) &&\n    wellFormedMarketId;\n\n  const onSubmit = () => {\n    if (!canSubmit) {\n      notify({\n        message: 'Please fill in all fields with valid values',\n        type: 'error',\n      });\n      return;\n    }\n\n    let params = {\n      address: marketId,\n      programId,\n      name: marketLabel,\n    };\n    if (!knownBaseCurrency) {\n      params.baseLabel = baseLabel;\n    }\n    if (!knownQuoteCurrency) {\n      params.quoteLabel = quoteLabel;\n    }\n    onAddCustomMarket(params);\n    onDoClose();\n  };\n\n  const onDoClose = () => {\n    resetLabels();\n    setMarket(null);\n    setMarketId(null);\n    onClose();\n  };\n\n  return (\n    <Modal\n      title={'Add custom market'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <div>\n        {wellFormedMarketId ? (\n          <>\n            {!market && !loadingMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Not a valid market</Text>\n              </Row>\n            )}\n            {market && knownMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\n              </Row>\n            )}\n            {market && !knownProgram && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\n              </Row>\n            )}\n            {market && knownProgram && knownProgram.deprecated && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\n              </Row>\n            )}\n          </>\n        ) : (\n          <>\n            {marketId && !wellFormedMarketId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid market ID</Text>\n              </Row>\n            )}\n          </>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Id\"\n              value={marketId}\n              onChange={(e) => setMarketId(e.target.value)}\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\n            />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Label\"\n              disabled={!market}\n              value={marketLabel}\n              onChange={(e) => setMarketLabel(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\n          <Col span={12}>\n            <Input\n              placeholder=\"Base label\"\n              disabled={!market || knownBaseCurrency}\n              value={knownBaseCurrency || baseLabel}\n              onChange={(e) => setBaseLabel(e.target.value)}\n            />\n            {market && !knownBaseCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n          <Col span={12}>\n            <Input\n              placeholder=\"Quote label\"\n              disabled={!market || knownQuoteCurrency}\n              value={knownQuoteCurrency || quoteLabel}\n              onChange={(e) => setQuoteLabel(e.target.value)}\n            />\n            {market && !knownQuoteCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Popover, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  getMarketInfos,\n  getTradePageUrl,\n  MarketProvider,\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport {\n  DeleteOutlined,\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport CustomMarketDialog from '../components/CustomMarketDialog';\nimport { notify } from '../utils/notifications';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\n\nconst { Option, OptGroup } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const { marketAddress } = useParams();\n  useEffect(() => {\n    if (marketAddress) {\n      localStorage.setItem('marketAddress', JSON.stringify(marketAddress));\n    }\n  }, [marketAddress]);\n  const history = useHistory();\n  function setMarketAddress(address) {\n    history.push(getTradePageUrl(address));\n  }\n\n  return (\n    <MarketProvider\n      marketAddress={marketAddress}\n      setMarketAddress={setMarketAddress}\n    >\n      <TradePageInner />\n    </MarketProvider>\n  );\n}\n\nfunction TradePageInner() {\n  const {\n    market,\n    marketName,\n    customMarkets,\n    setCustomMarkets,\n    setMarketAddress,\n  } = useMarket();\n  const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} — Serum` : 'Serum';\n  }, [marketName]);\n\n  const changeOrderRef = useRef<\n    ({ size, price }: { size?: number; price?: number }) => void\n  >();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n  const component = (() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  })();\n\n  const onAddCustomMarket = (customMarket) => {\n    const marketInfo = getMarketInfos(customMarkets).some(\n      (m) => m.address.toBase58() === customMarket.address,\n    );\n    if (marketInfo) {\n      notify({\n        message: `A market with the given ID already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomMarkets = [...customMarkets, customMarket];\n    setCustomMarkets(newCustomMarkets);\n    setMarketAddress(customMarket.address);\n  };\n\n  const onDeleteCustomMarket = (address) => {\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\n    setCustomMarkets(newCustomMarkets);\n  };\n\n  return (\n    <>\n      <CustomMarketDialog\n        visible={addMarketVisible}\n        onClose={() => setAddMarketVisible(false)}\n        onAddCustomMarket={onAddCustomMarket}\n      />\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector\n              markets={markets}\n              setHandleDeprecated={setHandleDeprecated}\n              placeholder={'Select market'}\n              customMarkets={customMarkets}\n              onDeleteCustomMarket={onDeleteCustomMarket}\n            />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          <Col>\n            <PlusCircleOutlined\n              style={{ color: '#2abdd2' }}\n              onClick={() => setAddMarketVisible(true)}\n            />\n          </Col>\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on old markets! Please go through\n                  them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {component}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({\n  markets,\n  placeholder,\n  setHandleDeprecated,\n  customMarkets,\n  onDeleteCustomMarket,\n}) {\n  const { market, setMarketAddress } = useMarket();\n\n  const onSetMarketAddress = (marketAddress) => {\n    setHandleDeprecated(false);\n    setMarketAddress(marketAddress);\n  };\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  const selectedMarket = getMarketInfos(customMarkets)\n    .find(\n      (proposedMarket) =>\n        market?.address && proposedMarket.address.equals(market.address),\n    )\n    ?.address?.toBase58();\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      style={{ width: 200 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={onSetMarketAddress}\n      listHeight={400}\n      value={selectedMarket}\n      filterOption={(input, option) =>\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {customMarkets && customMarkets.length > 0 && (\n        <OptGroup label=\"Custom\">\n          {customMarkets.map(({ address, name }, i) => (\n            <Option\n              value={address}\n              key={nanoid()}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              <Row>\n                <Col flex=\"auto\">{name}</Col>\n                {selectedMarket !== address && (\n                  <Col>\n                    <DeleteOutlined\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\n                      }}\n                    />\n                  </Col>\n                )}\n              </Row>\n            </Option>\n          ))}\n        </OptGroup>\n      )}\n      <OptGroup label=\"Markets\">\n        {markets\n          .sort((a, b) =>\n            extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n              ? -1\n              : extractQuote(a.name) !== 'USDT' &&\n                extractQuote(b.name) === 'USDT'\n              ? 1\n              : 0,\n          )\n          .sort((a, b) =>\n            extractBase(a.name) < extractBase(b.name)\n              ? -1\n              : extractBase(a.name) > extractBase(b.name)\n              ? 1\n              : 0,\n          )\n          .map(({ address, name, deprecated }, i) => (\n            <Option\n              value={address.toBase58()}\n              key={nanoid()}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              {name} {deprecated ? ' (Deprecated)' : null}\n            </Option>\n          ))}\n      </OptGroup>\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '900px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n        <UserInfoTable />\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '900px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={13}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row\n        style={{\n          height: '500px',\n        }}\n      >\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { Dropdown, Menu } from 'antd';\nimport { useWallet } from '../utils/wallet';\nimport LinkAddress from './LinkAddress';\n\nexport default function WalletConnect() {\n  const { connected, wallet, select, connect, disconnect } = useWallet();\n  const publicKey = (connected && wallet?.publicKey?.toBase58()) || '';\n\n  const menu = (\n    <Menu>\n      {connected && <LinkAddress shorten={true} address={publicKey} />}\n      <Menu.Item key=\"3\" onClick={select}>\n        Change Wallet\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Dropdown.Button onClick={connected ? disconnect : connect} overlay={menu}>\n      {connected ? 'Disconnect' : 'Connect'}\n    </Dropdown.Button>\n  );\n}\n","import React from 'react';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport {\n  useAllMarkets,\n  useAllOpenOrders,\n  useMarketInfos,\n} from '../utils/markets';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\nimport { Button, Row } from 'antd';\nimport { OrderWithMarketAndMarketName } from '../utils/types';\nimport { useWallet } from '../utils/wallet';\nimport WalletConnect from '../components/WalletConnect';\n\nexport default function OpenOrdersPage() {\n  const { connected } = useWallet();\n  const { openOrders, loaded, refreshOpenOrders } = useAllOpenOrders();\n  let marketInfos = useMarketInfos();\n  let marketAddressesToNames = Object.fromEntries(\n    marketInfos.map((info) => [info.address.toBase58(), info.name]),\n  );\n  let [allMarkets] = useAllMarkets();\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((marketInfo) => [\n      marketInfo.market.address.toBase58(),\n      marketInfo.market,\n    ]),\n  );\n\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || [])\n    .map((orderInfos) =>\n      orderInfos.orders.map((order) => {\n        return {\n          marketName: marketAddressesToNames[orderInfos.marketAddress],\n          market: marketsByAddress[orderInfos.marketAddress],\n          ...order,\n        };\n      }),\n    )\n    .flat();\n\n  if (!connected) {\n    return (\n      <Row\n        justify=\"center\"\n        style={{\n          marginTop: '10%',\n        }}\n      >\n        <WalletConnect />\n      </Row>\n    );\n  }\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Button onClick={refreshOpenOrders} loading={!loaded}>\n        Refresh\n      </Button>\n      <OpenOrderTable\n        openOrders={dataSource}\n        pageSize={25}\n        loading={!loaded}\n        onCancelSuccess={refreshOpenOrders}\n        marketFilter\n      />\n    </FloatingElement>\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\nimport { Button, Row } from 'antd';\nimport { settleAllFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport {\n  useAllMarkets,\n  useSelectedTokenAccounts,\n  useTokenAccounts,\n} from '../../utils/markets';\nimport StandaloneTokenAccountsSelect from '../StandaloneTokenAccountSelect';\nimport { abbreviateAddress } from '../../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\n\nexport default function WalletBalancesTable({\n  walletBalances,\n}: {\n  walletBalances: {\n    coin: string;\n    mint: string;\n    walletBalance: number;\n    openOrdersFree: number;\n    openOrdersTotal: number;\n  }[];\n}) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const [tokenAccounts, tokenAccountsConnected] = useTokenAccounts();\n  const [allMarkets, allMarketsConnected] = useAllMarkets();\n  const [settlingFunds, setSettlingFunds] = useState(false);\n\n  async function onSettleFunds() {\n    setSettlingFunds(true);\n    try {\n      if (!wallet) {\n        notify({\n          message: 'Wallet not connected',\n          description: 'Wallet not connected',\n          type: 'error',\n        });\n        return;\n      }\n\n      if (!tokenAccounts || !tokenAccountsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'TokenAccounts not connected',\n          type: 'error',\n        });\n        return;\n      }\n      if (!allMarkets || !allMarketsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'Markets not connected',\n          type: 'error',\n        });\n        return;\n      }\n      await settleAllFunds({\n        connection,\n        tokenAccounts,\n        selectedTokenAccounts,\n        wallet,\n        markets: allMarkets.map((marketInfo) => marketInfo.market),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSettlingFunds(false);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Coin',\n      key: 'coin',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\">\n          <a\n            href={`https://explorer.solana.com/address/${walletBalance.mint}`}\n            target={'_blank'}\n            rel=\"noopener noreferrer\"\n          >\n            {walletBalance.coin ||\n              abbreviateAddress(new PublicKey(walletBalance.mint))}\n          </a>\n        </Row>\n      ),\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'walletBalance',\n      key: 'walletBalance',\n      width: '20%',\n    },\n    {\n      title: 'Open orders total balances',\n      dataIndex: 'openOrdersTotal',\n      key: 'openOrdersTotal',\n      width: '20%',\n    },\n    {\n      title: 'Unsettled balances',\n      dataIndex: 'openOrdersFree',\n      key: 'openOrdersFree',\n      width: '20%',\n    },\n    {\n      title: 'Selected token account',\n      key: 'selectTokenAccount',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\" style={{ width: '430px' }}>\n          <StandaloneTokenAccountsSelect\n            accounts={tokenAccounts?.filter(\n              (t) => t.effectiveMint.toBase58() === walletBalance.mint,\n            )}\n            mint={walletBalance.mint}\n          />\n        </Row>\n      ),\n    },\n  ];\n  return (\n    <React.Fragment>\n      <DataTable\n        emptyLabel=\"No balances\"\n        dataSource={walletBalances}\n        columns={columns}\n        pagination={false}\n      />\n      {connected && (\n        <Button onClick={onSettleFunds} loading={settlingFunds}>\n          Settle all funds\n        </Button>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useAllOpenOrdersBalances,\n  useWalletBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport { useMintToTickers } from '../utils/tokens';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const walletBalances = useWalletBalancesForAllMarkets();\n  const mintToTickers = useMintToTickers();\n  const openOrdersBalances = useAllOpenOrdersBalances();\n\n  const data = (walletBalances || []).map((balance) => {\n    const balances = {\n      coin: mintToTickers[balance.mint],\n      mint: balance.mint,\n      walletBalance: balance.balance,\n      openOrdersFree: 0,\n      openOrdersTotal: 0,\n    };\n    for (let openOrdersAccount of openOrdersBalances[balance.mint] || []) {\n      balances['openOrdersFree'] += openOrdersAccount.free;\n      balances['openOrdersTotal'] += openOrdersAccount.total;\n    }\n    return balances;\n  });\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable walletBalances={data} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Input, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { Orderbook } from '@project-serum/serum';\nimport {\n  getExpectedFillPrice,\n  getMarketDetails,\n  getMarketInfos,\n  getMarketOrderPrice,\n  getSelectedTokenAccountForMint,\n  MarketProvider,\n  useBalances,\n  useCustomMarkets,\n  useLocallyStoredFeeDiscountKey,\n  useMarket,\n  useTokenAccounts,\n} from '../utils/markets';\nimport { notify } from '../utils/notifications';\nimport { useWallet } from '../utils/wallet';\nimport { useConnection, useSendConnection } from '../utils/connection';\nimport { placeOrder } from '../utils/send';\nimport { floorToDecimal, getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport WalletConnect from './WalletConnect';\nimport { SwapOutlined } from '@ant-design/icons';\nimport { CustomMarketInfo } from '../utils/types';\nimport { WalletAdapter } from '../wallet-adapters';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nconst ConvertButton = styled(Button)`\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nexport default function ConvertForm() {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const marketInfos = getMarketInfos(customMarkets);\n  const [marketAddress, setMarketAddress] = useState<string | null>(null);\n\n  const [fromToken, setFromToken] = useState<string | undefined>(undefined);\n  const [toToken, setToToken] = useState<string | undefined>(undefined);\n  const [size, setSize] = useState<number | undefined>(undefined);\n\n  const marketInfosbyName = Object.fromEntries(\n    marketInfos.map((market) => [market.name, market]),\n  );\n\n  const tokenConvertMap: Map<string, Set<string>> = new Map();\n  Object.keys(marketInfosbyName).forEach((market) => {\n    let [base, quote] = market.split('/');\n    !tokenConvertMap.has(base)\n      ? tokenConvertMap.set(base, new Set([quote]))\n      : tokenConvertMap.set(\n          base,\n          new Set([...(tokenConvertMap.get(base) || []), quote]),\n        );\n    !tokenConvertMap.has(quote)\n      ? tokenConvertMap.set(quote, new Set([base]))\n      : tokenConvertMap.set(\n          quote,\n          new Set([...(tokenConvertMap.get(quote) || []), base]),\n        );\n  });\n\n  const setMarket = (toToken) => {\n    const marketInfo = marketInfos\n      .filter((marketInfo) => !marketInfo.deprecated)\n      .find(\n        (marketInfo) =>\n          marketInfo.name === `${fromToken}/${toToken}` ||\n          marketInfo.name === `${toToken}/${fromToken}`,\n      );\n    if (!marketInfo) {\n      console.warn(\n        `Could not find market info for market names ${fromToken}/${toToken} or ${toToken}/${fromToken}`,\n      );\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    setMarketAddress(marketInfo.address.toBase58());\n    setToToken(toToken);\n  };\n\n  return (\n    <FloatingElement style={{ maxWidth: 500 }}>\n      <Title level={3}>Convert</Title>\n      {!connected && (\n        <Row justify=\"center\">\n          <Col>\n            <WalletConnect />\n          </Col>\n        </Row>\n      )}\n      {tokenConvertMap && connected && (\n        <>\n          <Row style={{ marginBottom: 8 }}>\n            <Col>\n              <Select\n                style={{ minWidth: 300 }}\n                placeholder=\"Select a token\"\n                value={fromToken}\n                onChange={(token) => {\n                  setFromToken(token);\n                  setToToken(undefined);\n                }}\n              >\n                {Array.from(tokenConvertMap.keys()).map((token) => (\n                  <Option value={token} key={token}>\n                    {token}\n                  </Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n          {fromToken && (\n            <Row style={{ marginBottom: 8 }}>\n              <Col>\n                <Select\n                  style={{ minWidth: 300 }}\n                  value={toToken}\n                  onChange={setMarket}\n                >\n                  {[...(tokenConvertMap.get(fromToken) || [])].map((token) => (\n                    <Option value={token} key={token}>\n                      {token}\n                    </Option>\n                  ))}\n                </Select>\n              </Col>\n            </Row>\n          )}\n          {fromToken && toToken && (\n            <MarketProvider\n              marketAddress={marketAddress}\n              setMarketAddress={setMarketAddress}\n            >\n              <ConvertFormSubmit\n                size={size}\n                setSize={setSize}\n                fromToken={fromToken}\n                toToken={toToken}\n                wallet={wallet}\n                customMarkets={customMarkets}\n              />\n            </MarketProvider>\n          )}\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n\nfunction ConvertFormSubmit({\n  size,\n  setSize,\n  fromToken,\n  toToken,\n  wallet,\n  customMarkets,\n}: {\n  size: number | null | undefined;\n  setSize: (newSize: number | undefined) => void;\n  fromToken: string;\n  toToken: string;\n  wallet?: WalletAdapter;\n  customMarkets: CustomMarketInfo[];\n}) {\n  const { market } = useMarket();\n  const [accounts] = useTokenAccounts();\n  const balances = useBalances();\n  const [fromAmount, setFromAmount] = useState<number | undefined>();\n  const [toAmount, setToAmount] = useState<number | undefined>();\n  const {\n    storedFeeDiscountKey: feeDiscountKey,\n  } = useLocallyStoredFeeDiscountKey();\n\n  const connection = useConnection();\n  const sendConnection = useSendConnection();\n\n  const [isConverting, setIsConverting] = useState(false);\n\n  const isFromTokenBaseOfMarket = (market) => {\n    const { marketName } = getMarketDetails(market, customMarkets);\n    if (!marketName) {\n      throw Error(\n        'Cannot determine if coin is quote or base because marketName is missing',\n      );\n    }\n    const [base] = marketName.split('/');\n    return fromToken === base;\n  };\n\n  const onConvert = async () => {\n    if (!market) {\n      console.warn('Market is null when attempting convert.');\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    // get accounts\n    const baseCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.baseMintAddress,\n    );\n    const quoteCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.quoteMintAddress,\n    );\n\n    // get approximate price\n    let side;\n    try {\n      side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n\n    const sidedOrderbookAccount =\n      // @ts-ignore\n      side === 'buy' ? market._decoded.asks : market._decoded.bids;\n    const orderbookData = await connection.getAccountInfo(\n      sidedOrderbookAccount,\n    );\n    if (!orderbookData?.data) {\n      notify({ message: 'Invalid orderbook data', type: 'error' });\n      return;\n    }\n    const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n    const [bbo] =\n      decodedOrderbookData &&\n      decodedOrderbookData.getL2(1).map(([price]) => price);\n    if (!bbo) {\n      notify({ message: 'No best price found', type: 'error' });\n      return;\n    }\n    if (!size) {\n      notify({ message: 'Size not specified', type: 'error' });\n      return;\n    }\n\n    const tickSizeDecimals = getDecimalCount(market.tickSize);\n    const parsedPrice = getMarketOrderPrice(\n      decodedOrderbookData,\n      size,\n      tickSizeDecimals,\n    );\n\n    // round size\n    const sizeDecimalCount = getDecimalCount(market.minOrderSize);\n    const nativeSize = side === 'sell' ? size : size / parsedPrice;\n    const parsedSize = floorToDecimal(nativeSize, sizeDecimalCount);\n\n    setIsConverting(true);\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: 'ioc',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey,\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  const getPrice = async () => {\n    try {\n      const side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n      const sidedOrderbookAccount =\n        // @ts-ignore\n        side === 'buy' ? market._decoded.asks : market._decoded.bids;\n      const orderbookData = await connection.getAccountInfo(\n        sidedOrderbookAccount,\n      );\n      if (!orderbookData?.data || !market) {\n        return [null, null];\n      }\n      const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n      const [bbo] =\n        decodedOrderbookData &&\n        decodedOrderbookData.getL2(1).map(([price]) => price);\n      if (!bbo || !size) {\n        return [null, null];\n      }\n      const tickSizeDecimals = getDecimalCount(market.tickSize);\n      const expectedPrice = getExpectedFillPrice(\n        decodedOrderbookData,\n        size,\n        tickSizeDecimals,\n      );\n      if (side === 'buy') {\n        return [expectedPrice.toFixed(6), 1];\n      } else {\n        return [1, expectedPrice.toFixed(6)];\n      }\n    } catch (e) {\n      console.log(`Got error ${e}`);\n      return [null, null];\n    }\n  };\n\n  useEffect(\n    () => {\n      getPrice().then(([fromAmount, toAmount]) => {\n        setFromAmount(fromAmount || undefined);\n        setToAmount(toAmount || undefined);\n      });\n    },\n    // eslint-disable-next-line\n    [market?.address.toBase58(), size],\n  );\n\n  const canConvert = market && size && size > 0;\n  const balance = balances.find(\n    (coinBalance) => coinBalance.coin === fromToken,\n  );\n  const availableBalance =\n    ((balance?.unsettled || 0) + (balance?.wallet || 0)) * 0.99;\n\n  return (\n    <React.Fragment>\n      <Row style={{ marginBottom: 8 }}>\n        <Col>\n          <Input\n            style={{ minWidth: 300 }}\n            addonBefore={`Size (${fromToken})`}\n            placeholder=\"Size\"\n            value={size === null ? undefined : size}\n            type=\"number\"\n            onChange={(e) => setSize(parseFloat(e.target.value) || undefined)}\n          />\n        </Col>\n      </Row>\n      <Row gutter={12} style={{ marginBottom: 8 }}>\n        <Col span={12}>\n          <ActionButton\n            block\n            size=\"large\"\n            onClick={() => setSize(floorToDecimal(availableBalance, 4))}\n          >\n            Max: {availableBalance.toFixed(4)}\n          </ActionButton>\n        </Col>\n        <Col span={12}>\n          <ConvertButton\n            block\n            type=\"primary\"\n            size=\"large\"\n            loading={isConverting}\n            onClick={onConvert}\n            disabled={!canConvert}\n          >\n            Convert\n          </ConvertButton>\n        </Col>\n      </Row>\n      {canConvert && (\n        <Row align=\"middle\" justify=\"center\">\n          <Col>\n            {fromAmount} {fromToken}\n          </Col>\n          <Col offset={1}>\n            <SwapOutlined />\n          </Col>\n          <Col offset={1}>\n            {toAmount} {toToken}\n          </Col>\n        </Row>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport ConvertForm from '../components/ConvertForm';\nimport { Row, Col } from 'antd';\nimport { DEFAULT_MARKET, MarketProvider } from '../utils/markets';\nimport { useLocalStorageState } from '../utils/utils';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function ConvertPage() {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET?.address.toBase58(),\n  );\n  return (\n    <Wrapper style={{ flex: 1, paddingTop: 10 }}>\n      <Row justify=\"center\">\n        <Col>\n          <MarketProvider\n            marketAddress={marketAddress}\n            setMarketAddress={setMarketAddress}\n          >\n            <ConvertForm />\n          </MarketProvider>\n        </Col>\n      </Row>\n    </Wrapper>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useLocalStorageState } from './utils';\nimport { useInterval } from './useInterval';\nimport { useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport {\n  useAllMarkets,\n  useSelectedTokenAccounts,\n  useTokenAccounts,\n} from './markets';\nimport { settleAllFunds } from './send';\nimport { PreferencesContextValues } from './types';\n\nconst PreferencesContext = React.createContext<PreferencesContextValues | null>(\n  null,\n);\n\nexport function PreferencesProvider({ children }) {\n  const [autoSettleEnabled, setAutoSettleEnabled] = useLocalStorageState(\n    'autoSettleEnabled',\n    true,\n  );\n\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected, wallet } = useWallet();\n  const [marketList] = useAllMarkets();\n  const connection = useConnection();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      const markets = (marketList || []).map((m) => m.market);\n      try {\n        if (!wallet) {\n          return;\n        }\n\n        console.log('Auto settling');\n        await settleAllFunds({\n          connection,\n          wallet,\n          tokenAccounts: tokenAccounts || [],\n          markets,\n          selectedTokenAccounts,\n        });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n      }\n    };\n\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\n  }, 10000);\n\n  return (\n    <PreferencesContext.Provider\n      value={{\n        autoSettleEnabled,\n        setAutoSettleEnabled,\n      }}\n    >\n      {children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport function usePreferences() {\n  const context = useContext(PreferencesContext);\n  if (!context) {\n    throw new Error('Missing preferences context');\n  }\n  return {\n    autoSettleEnabled: context.autoSettleEnabled,\n    setAutoSettleEnabled: context.setAutoSettleEnabled,\n  };\n}\n","import React from 'react';\nimport { Switch, Typography } from 'antd';\nimport { usePreferences } from '../utils/preferences';\n\nconst { Paragraph } = Typography;\n\nexport default function Settings({ autoApprove }) {\n  const { autoSettleEnabled, setAutoSettleEnabled } = usePreferences();\n\n  return (\n    <div>\n      <Switch\n        style={{ marginRight: 10 }}\n        disabled={!autoApprove}\n        checked={autoApprove && autoSettleEnabled}\n        onChange={setAutoSettleEnabled}\n      />{' '}\n      Auto settle\n      {!autoApprove && (\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)', marginTop: 10 }}>\n          To use auto settle, first enable auto approval in your wallet\n        </Paragraph>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Col, Input, Modal, Row } from 'antd';\nimport { EndpointInfo } from '../utils/types';\n\nexport default function CustomClusterEndpointDialog({\n  visible,\n  testingConnection,\n  onAddCustomEndpoint,\n  onClose,\n}: {\n  visible: boolean;\n  testingConnection: boolean;\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\n  onClose?: () => void;\n}) {\n  const [customEndpoint, setCustomEndpoint] = useState('');\n  const [customEndpointName, setCustomEndpointName] = useState('');\n\n  const onSubmit = () => {\n    const fullEndpoint = 'https://' + customEndpoint;\n    const params = {\n      name: customEndpointName,\n      endpoint: fullEndpoint,\n      custom: true,\n    };\n    onAddCustomEndpoint(params);\n    onDoClose();\n  };\n  const onDoClose = () => {\n    setCustomEndpoint('');\n    setCustomEndpointName('');\n    onClose && onClose();\n  };\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\n\n  return (\n    <Modal\n      title={'Add custom endpoint'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\n    >\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Name\"\n            value={customEndpointName}\n            onChange={(e) => setCustomEndpointName(e.target.value)}\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Endpoint\"\n            value={customEndpoint}\n            addonBefore={'https://'}\n            onChange={(e) => setCustomEndpoint(e.target.value)}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport { Select, Typography } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport apps from '@project-serum/awesome-serum';\n\nconst { Option } = Select;\n\nconst appsAndTokens = apps.concat(\n  TOKEN_MINTS.map((mint) => {\n    return {\n      name: `${mint.name} SPL`,\n      url: `https://explorer.solana.com/address/${mint.address.toBase58()}`,\n      description: `${mint.name} SPL token`,\n      icon: '',\n      tags: [\n        'token',\n        'blockchain',\n        'solana',\n        'spl',\n        'solana',\n        mint.address.toBase58(),\n      ],\n    };\n  }),\n);\n\ninterface App {\n  name: string;\n  url: string;\n  description: string;\n  tags: string[];\n}\n\nexport default function AppSearch(props) {\n  const [searchMatches, setSearchMatches] = useState<App[]>([]);\n  const [searchValue, setSearchValue] = useState<string | undefined>(undefined);\n\n  const matchApp = (searchString: string, app: App) => {\n    const lowerSearchStr = searchString.toLowerCase();\n    return (\n      app.name.toLowerCase().includes(lowerSearchStr) ||\n      app.tags.some(\n        (tag) =>\n          tag.toLowerCase().includes(lowerSearchStr) ||\n          lowerSearchStr.includes(tag.toLowerCase()),\n      )\n    );\n  };\n\n  const handleSearch = (value) => {\n    setSearchValue(value === '' ? undefined : value);\n    const filteredApps = appsAndTokens.filter((app) => matchApp(value, app));\n    setSearchMatches(filteredApps);\n  };\n\n  const handleSelect = (value, option) => {\n    window.open(option.href, '_blank');\n    handleClear();\n  };\n\n  const handleClear = () => {\n    setSearchMatches([]);\n    setSearchValue(undefined);\n  };\n\n  const options = searchMatches.map((d) => (\n    <Option key={d.name} value={d.name} href={d.url}>\n      <h3>{d.name}</h3>\n      <Typography.Text type=\"secondary\">\n        {d.url.replace('https://', '')}\n      </Typography.Text>\n    </Option>\n  ));\n\n  const ref = useRef<any>();\n  return (\n    <Select\n      ref={ref}\n      showSearch\n      allowClear\n      value={searchValue}\n      placeholder={\n        props.focussed || props.focussed === undefined\n          ? 'Search for dex, swap, wallet, token...'\n          : ''\n      }\n      onSearch={handleSearch}\n      onClear={handleClear}\n      onSelect={handleSelect}\n      onFocus={props.onFocus}\n      onBlur={() => {\n        props.onBlur();\n        handleClear();\n      }}\n      notFoundContent={null} // todo: make this search history\n      style={{\n        width: props.width || '300px',\n        transition: props.focussed ? 'width 0.1s ease 0.1s' : '',\n      }}\n      dropdownStyle={{\n        width: props.width || '300px',\n      }}\n      dropdownMatchSelectWidth={false}\n      suffixIcon={\n        <SearchOutlined onClick={() => ref.current && ref.current.focus()} />\n      }\n      filterOption={false}\n    >\n      {options}\n    </Select>\n  );\n}\n","import {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { Button, Col, Menu, Popover, Row, Select } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { useWallet } from '../utils/wallet';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport Settings from './Settings';\nimport CustomClusterEndpointDialog from './CustomClusterEndpointDialog';\nimport { EndpointInfo } from '../utils/types';\nimport { notify } from '../utils/notifications';\nimport { Connection } from '@solana/web3.js';\nimport WalletConnect from './WalletConnect';\nimport AppSearch from './AppSearch';\nimport { getTradePageUrl } from '../utils/markets';\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nconst EXTERNAL_LINKS = {\n  '/learn': 'https://serum-academy.com/en/serum-dex/',\n  '/add-market': 'https://serum-academy.com/en/add-market/',\n  '/wallet-support': 'https://serum-academy.com/en/wallet-support',\n  '/dex-list': 'https://serum-academy.com/en/dex-list/',\n  '/developer-resources': 'https://serum-academy.com/en/developer-resources/',\n  '/explorer': 'https://explorer.solana.com',\n  '/srm-faq': 'https://projectserum.com/srm-faq',\n  '/swap': 'https://serum-swap.cryptostarkwolf.com/'\n};\n\nexport default function TopBar() {\n  const { connected, wallet } = useWallet();\n  const {\n    endpoint,\n    endpointInfo,\n    setEndpoint,\n    availableEndpoints,\n    setCustomEndpoints,\n  } = useConnectionConfig();\n  const [addEndpointVisible, setAddEndpointVisible] = useState(false);\n  const [testingConnection, setTestingConnection] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n  const [searchFocussed, setSearchFocussed] = useState(false);\n\n  const handleClick = useCallback(\n    (e) => {\n      if (!(e.key in EXTERNAL_LINKS)) {\n        history.push(e.key);\n      }\n    },\n    [history],\n  );\n\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\n    const existingEndpoint = availableEndpoints.some(\n      (e) => e.endpoint === info.endpoint,\n    );\n    if (existingEndpoint) {\n      notify({\n        message: `An endpoint with the given url already exists`,\n        type: 'error',\n      });\n      return;\n    }\n\n    const handleError = (e) => {\n      console.log(`Connection to ${info.endpoint} failed: ${e}`);\n      notify({\n        message: `Failed to connect to ${info.endpoint}`,\n        type: 'error',\n      });\n    };\n\n    try {\n      const connection = new Connection(info.endpoint, 'recent');\n      connection\n        .getEpochInfo()\n        .then((result) => {\n          setTestingConnection(true);\n          console.log(`testing connection to ${info.endpoint}`);\n          const newCustomEndpoints = [\n            ...availableEndpoints.filter((e) => e.custom),\n            info,\n          ];\n          setEndpoint(info.endpoint);\n          setCustomEndpoints(newCustomEndpoints);\n        })\n        .catch(handleError);\n    } catch (e) {\n      handleError(e);\n    } finally {\n      setTestingConnection(false);\n    }\n  };\n\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom;\n  useEffect(() => {\n    const handler = () => {\n      if (endpointInfoCustom) {\n        setEndpoint(ENDPOINTS[0].endpoint);\n      }\n    };\n    window.addEventListener('beforeunload', handler);\n    return () => window.removeEventListener('beforeunload', handler);\n  }, [endpointInfoCustom, setEndpoint]);\n\n  const tradePageUrl = location.pathname.startsWith('/market/')\n    ? location.pathname\n    : getTradePageUrl();\n\n  return (\n    <>\n      <CustomClusterEndpointDialog\n        visible={addEndpointVisible}\n        testingConnection={testingConnection}\n        onAddCustomEndpoint={onAddCustomEndpoint}\n        onClose={() => setAddEndpointVisible(false)}\n      />\n      <Wrapper>\n        <LogoWrapper onClick={() => history.push(tradePageUrl)}>\n          <img src={logo} alt=\"\" />\n          {'SERUM'}\n        </LogoWrapper>\n        <Menu\n          mode=\"horizontal\"\n          onClick={handleClick}\n          selectedKeys={[location.pathname]}\n          style={{\n            borderBottom: 'none',\n            backgroundColor: 'transparent',\n            display: 'flex',\n            alignItems: 'flex-end',\n            flex: 1,\n          }}\n        >\n          <Menu.Item key={tradePageUrl} style={{ margin: '0 10px 0 20px' }}>\n            TRADE\n          </Menu.Item>\n          {!searchFocussed && (\n            <Menu.Item key=\"/swap\" style={{ margin: '0 10px' }}>\n              <a\n                href={EXTERNAL_LINKS['/swap']}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                SWAP\n              </a>\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/balances') && (\n            <Menu.Item key=\"/balances\" style={{ margin: '0 10px' }}>\n              BALANCES\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/orders') && (\n            <Menu.Item key=\"/orders\" style={{ margin: '0 10px' }}>\n              ORDERS\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/convert') && (\n            <Menu.Item key=\"/convert\" style={{ margin: '0 10px' }}>\n              CONVERT\n            </Menu.Item>\n          )}\n          {(!searchFocussed || location.pathname === '/list-new-market') && (\n            <Menu.Item key=\"/list-new-market\" style={{ margin: '0 10px' }}>\n              ADD MARKET\n            </Menu.Item>\n          )}\n          {!searchFocussed && (\n            <Menu.SubMenu\n              title=\"LEARN\"\n              onTitleClick={() =>\n                window.open(EXTERNAL_LINKS['/learn'], '_blank')\n              }\n              style={{ margin: '0 0px 0 10px' }}\n            >\n              <Menu.Item key=\"/add-market\">\n                <a\n                  href={EXTERNAL_LINKS['/add-market']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Adding a market\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/wallet-support\">\n                <a\n                  href={EXTERNAL_LINKS['/wallet-support']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Supported wallets\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/dex-list\">\n                <a\n                  href={EXTERNAL_LINKS['/dex-list']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  DEX list\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/developer-resources\">\n                <a\n                  href={EXTERNAL_LINKS['/developer-resources']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Developer resources\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/explorer\">\n                <a\n                  href={EXTERNAL_LINKS['/explorer']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Solana block explorer\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/srm-faq\">\n                <a\n                  href={EXTERNAL_LINKS['/srm-faq']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  SRM FAQ\n                </a>\n              </Menu.Item>\n            </Menu.SubMenu>\n          )}\n        </Menu>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            paddingRight: 5,\n          }}\n        >\n          <AppSearch\n            onFocus={() => setSearchFocussed(true)}\n            onBlur={() => setSearchFocussed(false)}\n            focussed={searchFocussed}\n            width={searchFocussed ? '350px' : '35px'}\n          />\n        </div>\n        <div>\n          <Row\n            align=\"middle\"\n            style={{ paddingLeft: 5, paddingRight: 5 }}\n            gutter={16}\n          >\n            <Col>\n              <PlusCircleOutlined\n                style={{ color: '#2abdd2' }}\n                onClick={() => setAddEndpointVisible(true)}\n              />\n            </Col>\n            <Col>\n              <Popover\n                content={endpoint}\n                placement=\"bottomRight\"\n                title=\"URL\"\n                trigger=\"hover\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n            <Col>\n              <Select\n                onSelect={setEndpoint}\n                value={endpoint}\n                style={{ marginRight: 8, width: '150px' }}\n              >\n                {availableEndpoints.map(({ name, endpoint }) => (\n                  <Select.Option value={endpoint} key={endpoint}>\n                    {name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n        </div>\n        {connected && (\n          <div>\n            <Popover\n              content={<Settings autoApprove={wallet?.autoApprove} />}\n              placement=\"bottomRight\"\n              title=\"Settings\"\n              trigger=\"click\"\n            >\n              <Button style={{ marginRight: 8 }}>\n                <SettingOutlined />\n                Settings\n              </Button>\n            </Popover>\n          </div>\n        )}\n        <div>\n          <WalletConnect />\n        </div>\n      </Wrapper>\n    </>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/EDvudv6',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import { PublicKey } from '@solana/web3.js';\nimport React, { ReactElement, useMemo, useState } from 'react';\nimport { useAccountInfo } from '../utils/connection';\nimport { isValidPublicKey } from '../utils/utils';\nimport { ValidateStatus } from 'antd/lib/form/FormItem';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { parseTokenMintData, useMintToTickers } from '../utils/tokens';\nimport { AutoComplete, Form, Tooltip } from 'antd';\nimport Link from './Link';\n\nexport interface MintInfo {\n  address: PublicKey;\n  decimals: number;\n}\n\nexport function useMintInput(\n  name,\n  label: string | ReactElement,\n  tooltip?: string | ReactElement,\n): [ReactElement, MintInfo | null] {\n  const [address, setAddress] = useState('');\n  const [accountInfo, loaded] = useAccountInfo(\n    isValidPublicKey(address) ? new PublicKey(address) : null,\n  );\n\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(address) ||\n          ticker.toLowerCase().includes(address.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, address]);\n\n  const { validateStatus, hasFeedback, help, mintInfo } = useMemo(() => {\n    let validateStatus: ValidateStatus = '';\n    let hasFeedback = false;\n    let help: string | null = null;\n    let mintInfo: MintInfo | null = null;\n    if (address) {\n      hasFeedback = true;\n      if (accountInfo) {\n        if (\n          accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\n          accountInfo.data.length === 82\n        ) {\n          let parsed = parseTokenMintData(accountInfo.data);\n          if (parsed.initialized) {\n            validateStatus = 'success';\n            mintInfo = {\n              address: new PublicKey(address),\n              decimals: parsed.decimals,\n            };\n          } else {\n            validateStatus = 'error';\n            help = 'Invalid SPL mint';\n          }\n        } else {\n          validateStatus = 'error';\n          help = 'Invalid SPL mint address';\n        }\n      } else if (isValidPublicKey(address) && !loaded) {\n        validateStatus = 'validating';\n      } else {\n        validateStatus = 'error';\n        help = 'Invalid Solana address';\n      }\n    }\n    return { validateStatus, hasFeedback, help, mintInfo };\n  }, [address, accountInfo, loaded]);\n\n  const input = (\n    <Form.Item\n      label={\n        <Tooltip\n          title={\n            <>\n              {tooltip} You can look up token mint addresses on{' '}\n              <Link external to=\"https://sollet.io\">\n                sollet.io\n              </Link>\n              .\n            </>\n          }\n        >\n          {label}\n        </Tooltip>\n      }\n      name={name}\n      validateStatus={validateStatus}\n      hasFeedback={hasFeedback}\n      help={help}\n    >\n      <AutoComplete\n        options={options}\n        value={address}\n        onChange={(value) => setAddress(value)}\n      />\n    </Form.Item>\n  );\n\n  return [input, mintInfo];\n}\n","import React, { useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { MARKETS } from '@project-serum/serum';\nimport { useConnection } from '../utils/connection';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../utils/wallet';\nimport { listMarket } from '../utils/send';\nimport { useMintInput } from '../components/useMintInput';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport default function ListNewMarketPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [baseMintInput, baseMintInfo] = useMintInput(\n    'baseMint',\n    <Text>\n      Base Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. BTC solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\n  );\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\n    'quoteMint',\n    <Text>\n      Quote Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. USDT solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\n  );\n  const [lotSize, setLotSize] = useState('1');\n  const [tickSize, setTickSize] = useState('0.01');\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\n  const [submitting, setSubmitting] = useState(false);\n\n  const [listedMarket, setListedMarket] = useState(null);\n\n  let baseLotSize;\n  let quoteLotSize;\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\n      quoteLotSize = Math.round(\n        parseFloat(lotSize) *\n          10 ** quoteMintInfo.decimals *\n          parseFloat(tickSize),\n      );\n    }\n  }\n\n  const canSubmit =\n    connected &&\n    !!baseMintInfo &&\n    !!quoteMintInfo &&\n    !!baseLotSize &&\n    !!quoteLotSize;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const marketAddress = await listMarket({\n        connection,\n        wallet,\n        baseMint: baseMintInfo.address,\n        quoteMint: quoteMintInfo.address,\n        baseLotSize,\n        quoteLotSize,\n        dexProgramId,\n      });\n      setListedMarket(marketAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error listing new market',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>List New Market</Title>\n        <Form\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          layout={'vertical'}\n          onFinish={onSubmit}\n        >\n          {baseMintInput}\n          {quoteMintInput}\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\n                Minimum Order Size{' '}\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\n              </Tooltip>\n            }\n            name=\"lotSize\"\n            initialValue=\"1\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? baseLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={lotSize}\n              onChange={(e) => setLotSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\n                Tick Size{' '}\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\n              </Tooltip>\n            }\n            name=\"tickSize\"\n            initialValue=\"0.01\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? quoteLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={tickSize}\n              onChange={(e) => setTickSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {listedMarket ? (\n        <FloatingElement>\n          <Text>New market address: {listedMarket.toBase58()}</Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  AutoComplete,\n  Button,\n  Form,\n  Input,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useConnection } from '../../utils/connection';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../../utils/wallet';\nimport { sendSignedTransaction, signTransactions } from '../../utils/send';\nimport { useMintInput } from '../../components/useMintInput';\nimport { PoolTransactions } from '@project-serum/pool';\nimport { useTokenAccounts } from '../../utils/markets';\nimport BN from 'bn.js';\nimport { notify } from '../../utils/notifications';\nimport Link from '../../components/Link';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst AddRemoveTokenButtons = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nconst SIMPLE_POOL_PROGRAM_ID = '71JS8f7y7ASMbuuSMCVG7a3qDdcVco2qYD6bMJeZqUCm';\nconst ADMIN_CONTROLLED_POOL_PROGRAM_ID =\n  'WvmTNLpGMVbwJVYztYL4Hnsy82cJhQorxjnnXcRm3b6';\nconst DEFAULT_PROGRAM_ID = ADMIN_CONTROLLED_POOL_PROGRAM_ID;\nconst PROGRAM_ID_OPTIONS = [\n  {\n    label: `Simple Pool (${SIMPLE_POOL_PROGRAM_ID})`,\n    value: SIMPLE_POOL_PROGRAM_ID,\n  },\n  {\n    label: `Admin-Controlled Pool (${ADMIN_CONTROLLED_POOL_PROGRAM_ID})`,\n    value: ADMIN_CONTROLLED_POOL_PROGRAM_ID,\n  },\n];\n\nexport default function NewPoolPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [poolName, setPoolName] = useState('');\n  const [programId, setProgramId] = useState(DEFAULT_PROGRAM_ID);\n  const [initialSupply, setInitialSupply] = useState('1');\n  const [initialAssets, setInitialAssets] = useState<InitialAsset[]>([\n    { valid: false },\n    { valid: false },\n  ]);\n  const [adminControlled, setAdminControlled] = useState(false);\n  const [adminAddress, setAdminAddress] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n  const [newPoolAddress, setNewPoolAddress] = useState<PublicKey | null>(null);\n\n  useEffect(() => {\n    if (programId === SIMPLE_POOL_PROGRAM_ID) {\n      setAdminControlled(false);\n    } else if (programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID) {\n      setAdminControlled(true);\n    }\n  }, [programId]);\n\n  useEffect(() => {\n    if (connected && wallet) {\n      setAdminAddress(wallet.publicKey.toBase58());\n    }\n  }, [wallet, connected]);\n\n  const canSubmit =\n    connected &&\n    poolName.trim() &&\n    programId &&\n    parseFloat(initialSupply) > 0 &&\n    initialAssets.every((asset) => asset.valid) &&\n    tokenAccounts &&\n    (adminAddress || !adminControlled);\n\n  async function onSubmit() {\n    if (!canSubmit || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const assets = initialAssets as ValidInitialAsset[];\n      const [\n        poolAddress,\n        transactionsAndSigners,\n      ] = await PoolTransactions.initializeSimplePool({\n        connection,\n        programId: new PublicKey(programId),\n        poolName,\n        poolStateSpace: 1024,\n        poolMintDecimals: 6,\n        initialPoolMintSupply: new BN(\n          Math.round(10 ** 6 * parseFloat(initialSupply)),\n        ),\n        assetMints: assets.map((asset) => asset.mint),\n        initialAssetQuantities: assets.map((asset) => new BN(asset.quantity)),\n        creator: wallet.publicKey,\n        creatorAssets: assets.map((asset) => {\n          const found = tokenAccounts?.find((tokenAccount) =>\n            tokenAccount.effectiveMint.equals(asset.mint),\n          );\n          if (!found) {\n            throw new Error('No token account for ' + asset.mint.toBase58());\n          }\n          return found.pubkey;\n        }),\n        additionalAccounts: adminControlled\n          ? [\n              {\n                pubkey: new PublicKey(adminAddress),\n                isSigner: false,\n                isWritable: false,\n              },\n            ]\n          : [],\n      });\n      const signed = await signTransactions({\n        transactionsAndSigners,\n        wallet,\n        connection,\n      });\n      for (let signedTransaction of signed) {\n        await sendSignedTransaction({ signedTransaction, connection });\n      }\n      setNewPoolAddress(poolAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error creating new pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>Create new pool</Title>\n        <Form layout=\"vertical\" onFinish={onSubmit}>\n          <Form.Item\n            label={\n              <Tooltip title=\"Public name of the pool.\">Pool Name</Tooltip>\n            }\n            name=\"name\"\n          >\n            <Input\n              value={poolName}\n              onChange={(e) => setPoolName(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Address of the pool program.\">\n                Program ID{' '}\n                <Text type=\"secondary\">(e.g. {DEFAULT_PROGRAM_ID})</Text>\n              </Tooltip>\n            }\n            name=\"programId\"\n            initialValue={DEFAULT_PROGRAM_ID}\n          >\n            <AutoComplete\n              value={programId}\n              onChange={(value) => setProgramId(value)}\n              options={PROGRAM_ID_OPTIONS}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Initial number of pool tokens to mint to your account.\">\n                Initial Pool Token Supply\n              </Tooltip>\n            }\n            name=\"initialSupply\"\n            initialValue=\"1\"\n          >\n            <Input\n              value={initialSupply}\n              onChange={(e) => setInitialSupply(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <AddRemoveTokenButtons>\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.concat({ valid: false }))\n              }\n            >\n              Add token\n            </Button>{' '}\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.slice(0, assets.length - 1))\n              }\n              disabled={initialAssets.length <= 1}\n            >\n              Remove token\n            </Button>\n          </AddRemoveTokenButtons>\n          {initialAssets.map((asset, i) => (\n            <AssetInput setInitialAssets={setInitialAssets} index={i} key={i} />\n          ))}\n          <Form.Item\n            label={\n              <Tooltip title=\"Whether the assets in the pool can be controlled by the pool admin.\">\n                Admin Controlled\n              </Tooltip>\n            }\n            name=\"adminControlled\"\n          >\n            <Switch\n              checked={adminControlled}\n              onChange={(checked) => setAdminControlled(checked)}\n              disabled={\n                programId === SIMPLE_POOL_PROGRAM_ID ||\n                programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID\n              }\n            />\n          </Form.Item>\n          {adminControlled ? (\n            <Form.Item\n              label={\n                <Tooltip title=\"Address of the pool admin account.\">\n                  Admin Address\n                </Tooltip>\n              }\n            >\n              <Input\n                value={adminAddress}\n                onChange={(e) => setAdminAddress(e.target.value.trim())}\n              />\n            </Form.Item>\n          ) : null}\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {newPoolAddress ? (\n        <FloatingElement>\n          <Text>\n            New pool address:{' '}\n            <Link to={`/pools/${newPoolAddress.toBase58()}`}>\n              {newPoolAddress.toBase58()}\n            </Link>\n          </Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n\ntype InitialAsset = { valid: false } | ValidInitialAsset;\ninterface ValidInitialAsset {\n  valid: true;\n  mint: PublicKey;\n  quantity: number;\n}\n\nfunction AssetInput({ setInitialAssets, index }) {\n  const [mintInput, mintInfo] = useMintInput(\n    `mint${index}`,\n    <Text>Token {index + 1} Mint Address</Text>,\n    <>Token mint address for token {index + 1}.</>,\n  );\n  const [quantity, setQuantity] = useState('');\n\n  useEffect(() => {\n    let change: InitialAsset;\n    if (mintInfo && parseFloat(quantity) >= 0) {\n      let parsedQuantity = Math.round(\n        10 ** mintInfo.decimals * parseFloat(quantity),\n      );\n      change = {\n        mint: mintInfo.address,\n        quantity: parsedQuantity,\n        valid: true,\n      };\n    } else {\n      change = { valid: false };\n    }\n    setInitialAssets((assets: InitialAsset[]) =>\n      assets.map((old, i) => (i === index ? change : old)),\n    );\n  }, [setInitialAssets, index, mintInfo, quantity]);\n\n  return (\n    <>\n      {mintInput}\n      <Form.Item\n        label={\n          <Tooltip\n            title={\n              <>\n                Initial quantity of token {index + 1} to deposit into the pool.\n              </>\n            }\n          >\n            Token {index + 1} Initial Quantity\n          </Tooltip>\n        }\n        name={`quantity${index}`}\n        validateStatus={'success'}\n      >\n        <Input\n          value={quantity}\n          onChange={(e) => setQuantity(e.target.value.trim())}\n          type=\"number\"\n          min=\"0\"\n          step=\"any\"\n        />\n      </Form.Item>\n    </>\n  );\n}\n","import React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport { useMintToTickers } from '../utils/tokens';\nimport { Popover } from 'antd';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nexport function MintName({\n  mint,\n  showAddress = false,\n}: {\n  mint: string | PublicKey | null | undefined;\n  showAddress?: boolean;\n}) {\n  const mintToTickers = useMintToTickers();\n  if (!mint) {\n    return null;\n  }\n  const mintKey = typeof mint === 'string' ? new PublicKey(mint) : mint;\n  const mintAddress = typeof mint === 'string' ? mint : mint.toBase58();\n  const ticker = mintToTickers[mintAddress] ?? abbreviateAddress(mintKey);\n\n  return (\n    <>\n      {ticker}\n      {showAddress ? (\n        <>\n          {' '}\n          <Popover\n            content={<LinkAddress address={mintAddress} />}\n            placement=\"bottomRight\"\n            title=\"Token mint\"\n            trigger=\"hover\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import { Basket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport BN from 'bn.js';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport { Spin } from 'antd';\nimport { MintName } from '../../../components/MintName';\n\ninterface BasketDisplayProps {\n  poolInfo: PoolInfo;\n  basket?: Basket | null | undefined;\n}\n\nexport default function PoolBasketDisplay({\n  poolInfo,\n  basket,\n}: BasketDisplayProps) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => (\n        <BasketItem\n          key={index}\n          mint={asset.mint}\n          quantity={basket?.quantities[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ninterface BasketItemProps {\n  mint: PublicKey;\n  quantity?: BN;\n}\n\nfunction BasketItem({ mint, quantity }: BasketItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && quantity) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    quantityDisplay = <>{quantity.toNumber() / 10 ** mintInfo.decimals}</>;\n  }\n\n  return (\n    <li>\n      {quantityDisplay} <MintName mint={mint} showAddress />\n    </li>\n  );\n}\n","import { getPoolBasket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\n\nconst { Text, Paragraph } = Typography;\n\ninterface PoolInfoProps {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nconst feeFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 6,\n});\n\nexport default function PoolInfoPanel({ poolInfo, mintInfo }: PoolInfoProps) {\n  const connection = useConnection();\n\n  const [totalBasket] = useAsyncData(\n    () => getPoolBasket(connection, poolInfo, { redeem: mintInfo.supply }),\n    tuple(getPoolBasket, connection, poolInfo, 'total', mintInfo),\n  );\n\n  return (\n    <FloatingElement stretchVertical>\n      <Paragraph>Name: {poolInfo.state.name}</Paragraph>\n      <Paragraph>\n        Address: <Text copyable>{poolInfo.address.toBase58()}</Text>\n      </Paragraph>\n      <Paragraph>\n        Pool token mint address:{' '}\n        <Text copyable>{poolInfo.state.poolTokenMint.toBase58()}</Text>\n      </Paragraph>\n      {poolInfo.state.adminKey ? (\n        <Paragraph>\n          Pool admin: <Text copyable>{poolInfo.state.adminKey.toBase58()}</Text>\n        </Paragraph>\n      ) : null}\n      <Paragraph>\n        Fee rate: {feeFormat.format(poolInfo.state.feeRate / 1_000_000)}\n      </Paragraph>\n      <Paragraph>\n        Total supply: {mintInfo.supply.toNumber() / 10 ** mintInfo.decimals}\n      </Paragraph>\n      <Text>Total assets:</Text>\n      <div>\n        <PoolBasketDisplay poolInfo={poolInfo} basket={totalBasket} />\n      </div>\n    </FloatingElement>\n  );\n}\n","import { getPoolBasket, PoolInfo, PoolTransactions } from '@project-serum/pool';\nimport React, { useMemo, useState } from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Button, Input, Spin, Tabs, Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport { PublicKey } from '@solana/web3.js';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\nimport BN from 'bn.js';\nimport { notify } from '../../../utils/notifications';\nimport { useWallet } from '../../../utils/wallet';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\ninterface PoolCreateRedeemPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nexport default function PoolCreateRedeemPanel({\n  poolInfo,\n  mintInfo,\n}: PoolCreateRedeemPanel) {\n  return (\n    <FloatingElement stretchVertical>\n      <Tabs>\n        <TabPane tab=\"Create\" key=\"create\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"create\"\n          />\n        </TabPane>\n        <TabPane tab=\"Redeem\" key=\"redeem\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"redeem\"\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface CreateRedeemInnerPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n  tab: string;\n}\n\nfunction CreateRedeemTab({ poolInfo, mintInfo, tab }: CreateRedeemInnerPanel) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [quantity, setQuantity] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n\n  const action = useMemo(() => {\n    const parsedQuantity = Math.round(\n      parseFloat(quantity) * 10 ** mintInfo.decimals,\n    );\n    if (parsedQuantity > 0) {\n      if (tab === 'create') {\n        return { create: new BN(parsedQuantity) };\n      } else {\n        return { redeem: new BN(parsedQuantity) };\n      }\n    }\n    return null;\n  }, [mintInfo.decimals, quantity, tab]);\n\n  const [basket, basketLoaded] = useAsyncData(\n    async () =>\n      action ? await getPoolBasket(connection, poolInfo, action) : null,\n    tuple(getPoolBasket, connection, poolInfo.address.toBase58(), action),\n  );\n\n  function findTokenAccount(mint: PublicKey): PublicKey {\n    const account = tokenAccounts?.find((account) =>\n      account.effectiveMint.equals(mint),\n    );\n    if (account) {\n      return account.pubkey;\n    }\n    throw new Error('No token account for ' + mint.toBase58());\n  }\n\n  const canSubmit = connected && action && basket;\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    if (!action || !basket || !connected || !canSubmit || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const { transaction, signers } = PoolTransactions.execute(\n        poolInfo,\n        action,\n        {\n          owner: wallet.publicKey,\n          poolTokenAccount: findTokenAccount(poolInfo.state.poolTokenMint),\n          assetAccounts: poolInfo.state.assets.map((asset) =>\n            findTokenAccount(asset.mint),\n          ),\n        },\n        basket,\n      );\n      await sendTransaction({ connection, wallet, transaction, signers });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message:\n          'Error ' +\n          (tab === 'create' ? 'creating' : 'redeeming') +\n          ' pool tokens',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <div>\n        {!basket ? (\n          basketLoaded ? null : (\n            <Spin />\n          )\n        ) : (\n          <>\n            <Text>{tab === 'create' ? 'Cost' : 'Proceeds'}: </Text>\n            <Text type=\"secondary\">(indicative only)</Text>\n            <PoolBasketDisplay poolInfo={poolInfo} basket={basket} />\n          </>\n        )}\n      </div>\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n        disabled={!canSubmit || submitting}\n      >\n        {!connected ? 'Wallet not connected' : 'Submit'}\n      </Button>\n    </form>\n  );\n}\n","import { PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport {\n  parseTokenAccountData,\n  parseTokenMintData,\n} from '../../../utils/tokens';\nimport { Button, Spin, Tabs } from 'antd';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { MintName } from '../../../components/MintName';\nimport { LinkOutlined } from '@ant-design/icons';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\n\nconst { TabPane } = Tabs;\n\nexport default function PoolBalancesPanel({\n  poolInfo,\n}: {\n  poolInfo: PoolInfo;\n}) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Wallet Balances\" key=\"wallet\">\n          <WalletBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Pool Balances\" key=\"pool\">\n          <PoolBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nfunction WalletBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  const [tokenAccounts] = useTokenAccounts();\n  return (\n    <ul>\n      {[\n        poolInfo.state.poolTokenMint,\n        ...poolInfo.state.assets.map((asset) => asset.mint),\n      ].map((mint, index) => {\n        const tokenAccount = tokenAccounts?.find((account) =>\n          account.effectiveMint.equals(mint),\n        );\n        if (!tokenAccount) {\n          return null;\n        }\n        return (\n          <BalanceItem\n            key={index}\n            mint={mint}\n            publicKey={tokenAccount.pubkey}\n            isPoolToken={mint.equals(poolInfo.state.poolTokenMint)}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction PoolBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => {\n        return (\n          <BalanceItem\n            key={index}\n            mint={asset.mint}\n            publicKey={asset.vaultAddress}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\ninterface BalanceItemProps {\n  mint: PublicKey;\n  publicKey: PublicKey;\n  isPoolToken?: boolean;\n}\n\nfunction BalanceItem({ mint, publicKey, isPoolToken }: BalanceItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  const [balanceAccountInfo] = useAccountInfo(publicKey);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && balanceAccountInfo) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    if (mint.equals(WRAPPED_SOL_MINT)) {\n      quantityDisplay = (\n        <>{balanceAccountInfo.lamports / 10 ** mintInfo.decimals}</>\n      );\n    } else {\n      const accountInfo = parseTokenAccountData(balanceAccountInfo.data);\n      quantityDisplay = <>{accountInfo.amount / 10 ** mintInfo.decimals}</>;\n    }\n  }\n\n  return (\n    <li>\n      {quantityDisplay}{' '}\n      {isPoolToken ? (\n        <>\n          Pool Token (<MintName mint={mint} />)\n        </>\n      ) : (\n        <MintName mint={mint} />\n      )}{' '}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + publicKey.toBase58()}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      />\n    </li>\n  );\n}\n","import React, { FormEvent, useMemo, useState } from 'react';\nimport { AdminControlledPoolInstructions, PoolInfo } from '@project-serum/pool';\nimport { TokenInstructions } from '@project-serum/serum';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useConnection } from '../../../utils/connection';\nimport { useWallet } from '../../../utils/wallet';\nimport {\n  getSelectedTokenAccountForMint,\n  useTokenAccounts,\n} from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\nimport { notify } from '../../../utils/notifications';\nimport {\n  Account,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from '@solana/web3.js';\nimport { AutoComplete, Button, Input, Select, Tabs } from 'antd';\nimport {\n  createAssociatedTokenAccount,\n  getAssociatedTokenAddress,\n} from '@project-serum/associated-token';\nimport { parseTokenMintData, useMintToTickers } from '../../../utils/tokens';\nimport BN from 'bn.js';\nimport { refreshAllCaches } from '../../../utils/fetch-loop';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nexport function PoolAdminPanel({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Pause/Unpause\" key=\"pause\">\n          <PauseUnpauseTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Add Token\" key=\"addAsset\">\n          <AddAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Remove Token\" key=\"removeAsset\">\n          <RemoveAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Deposit\" key=\"deposit\">\n          <DepositTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Withdraw\" key=\"withdraw\">\n          <WithdrawTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Modify Fee\" key=\"updateFee\">\n          <UpdateFeeTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface TabParams {\n  poolInfo: PoolInfo;\n}\n\nfunction PauseUnpauseTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function sendPause() {\n    if (!connected || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.pause(poolInfo));\n      await sendTransaction({ connection, wallet, transaction });\n    } catch (e) {\n      notify({\n        message: 'Error pausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  async function sendUnpause() {\n    if (!connected || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.unpause(poolInfo));\n      await sendTransaction({ connection, wallet, transaction });\n    } catch (e) {\n      notify({\n        message: 'Error unpausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <>\n      <Button onClick={sendPause} disabled={submitting}>\n        Pause\n      </Button>{' '}\n      <Button onClick={sendUnpause} disabled={submitting}>\n        Unpause\n      </Button>\n    </>\n  );\n}\n\nfunction AddAssetTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const [address, setAddress] = useState('');\n  const { wallet, connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'adding asset to pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = await getAssociatedTokenAddress(\n        poolInfo.state.vaultSigner,\n        mintAddress,\n      );\n      const transaction = new Transaction();\n      if (!(await connection.getAccountInfo(vaultAddress)) && wallet) {\n        transaction.add(\n          await createAssociatedTokenAccount(\n            wallet.publicKey,\n            poolInfo.state.vaultSigner,\n            mintAddress,\n          ),\n        );\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.addAsset(poolInfo, vaultAddress),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintSelector\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction RemoveAssetTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const { connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'removing asset from pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.removeAsset(poolInfo, vaultAddress),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction DepositTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'depositing to pool',\n    async () => {\n      if (!wallet) {\n        throw new Error('Wallet is not connected');\n      }\n\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const wrappedSolAccount =\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\n          ? new Account()\n          : null;\n\n      const transaction = new Transaction();\n      const signers: Account[] = [];\n      if (wrappedSolAccount) {\n        transaction.add(\n          SystemProgram.createAccount({\n            fromPubkey: wallet.publicKey,\n            lamports: parsedQuantity + 2.04e6,\n            newAccountPubkey: wrappedSolAccount.publicKey,\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\n            space: 165,\n          }),\n          TokenInstructions.initializeAccount({\n            account: wrappedSolAccount.publicKey,\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.transfer({\n            source: wrappedSolAccount.publicKey,\n            destination: vaultAddress,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.closeAccount({\n            source: wrappedSolAccount.publicKey,\n            destination: walletTokenAccount.pubkey,\n            owner: wallet.publicKey,\n          }),\n        );\n        signers.push(wrappedSolAccount);\n      } else {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: walletTokenAccount.pubkey,\n            destination: vaultAddress,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n        );\n      }\n      return [transaction, signers];\n    },\n    true,\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction WithdrawTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'withdrawing from pool',\n    async () => {\n      if (!wallet) {\n        throw new Error('Wallet is not connected');\n      }\n\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const wrappedSolAccount =\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\n          ? new Account()\n          : null;\n\n      const transaction = new Transaction();\n      const signers: Account[] = [];\n      if (wrappedSolAccount) {\n        transaction.add(\n          SystemProgram.createAccount({\n            fromPubkey: wallet.publicKey,\n            lamports: 2.04e6,\n            newAccountPubkey: wrappedSolAccount.publicKey,\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\n            space: 165,\n          }),\n          TokenInstructions.initializeAccount({\n            account: wrappedSolAccount.publicKey,\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\n            owner: wallet.publicKey,\n          }),\n        );\n        signers.push(wrappedSolAccount);\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.approveDelegate(\n          poolInfo,\n          vaultAddress,\n          wallet.publicKey,\n          new BN(parsedQuantity),\n        ),\n      );\n      if (wrappedSolAccount) {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: vaultAddress,\n            destination: wrappedSolAccount.publicKey,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.closeAccount({\n            source: wrappedSolAccount.publicKey,\n            destination: walletTokenAccount.pubkey,\n            owner: wallet.publicKey,\n          }),\n        );\n      } else {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: vaultAddress,\n            destination: walletTokenAccount.pubkey,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n        );\n      }\n      return [transaction, signers];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction UpdateFeeTab({ poolInfo }: TabParams) {\n  const [feeRate, setFeeRate] = useState('');\n\n  const { connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit = connected && tokenAccounts && parseFloat(feeRate);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'changing pool fee',\n    async () => {\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.updateFee(\n          poolInfo,\n          Math.round(parseFloat(feeRate) * 1_000_000),\n        ),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Fee Rate</>}\n        value={feeRate}\n        onChange={(e) => setFeeRate(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction useOnSubmitHandler(\n  description: string,\n  makeTransaction: () => Promise<[Transaction, Account[]]>,\n  refresh = false,\n): [(FormEvent) => void, boolean] {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function onSubmit(e: FormEvent) {\n    e.preventDefault();\n    if (submitting) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      if (!connected || !wallet) {\n        throw new Error('Wallet not connected');\n      }\n      const [transaction, signers] = await makeTransaction();\n      await sendTransaction({ connection, wallet, transaction, signers });\n      if (refresh) {\n        refreshAllCaches();\n      }\n    } catch (e) {\n      notify({\n        message: `Error ${description}`,\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return [onSubmit, submitting];\n}\n\nfunction SubmitButton({ canSubmit, submitting }) {\n  const { connected } = useWallet();\n  return (\n    <Button\n      htmlType=\"submit\"\n      type=\"primary\"\n      disabled={!canSubmit || submitting}\n    >\n      {!connected ? 'Wallet not connected' : 'Submit'}\n    </Button>\n  );\n}\n\nfunction MintInPoolSelector({\n  poolInfo,\n  label,\n  value,\n  onChange,\n  style,\n}: {\n  poolInfo: PoolInfo;\n  label: string;\n  value: string;\n  onChange: (string) => void;\n  style: any;\n}) {\n  const mintToTickers = useMintToTickers();\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <Select onChange={onChange} value={value} style={{ width: '100%' }}>\n        {poolInfo.state.assets.map((asset) => (\n          <Option value={asset.mint.toBase58()} key={asset.mint.toBase58()}>\n            {mintToTickers[asset.mint.toBase58()] ? (\n              <>\n                {mintToTickers[asset.mint.toBase58()]} ({asset.mint.toBase58()})\n              </>\n            ) : (\n              asset.mint.toBase58()\n            )}\n          </Option>\n        ))}\n      </Select>\n    </Input.Group>\n  );\n}\n\nfunction MintSelector({ label, style, value, onChange }) {\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(value) ||\n          ticker.toLowerCase().includes(value.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, value]);\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <AutoComplete\n        options={options}\n        value={value}\n        onChange={(e) => onChange(e)}\n        style={{ width: '100%' }}\n      />\n    </Input.Group>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Col, PageHeader, Row, Spin, Typography } from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport {\n  decodePoolState,\n  isAdminControlledPool,\n  PoolInfo,\n} from '@project-serum/pool';\nimport PoolInfoPanel from './PoolInfoPanel';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport PoolCreateRedeemPanel from './PoolCreateRedeemPanel';\nimport PoolBalancesPanel from './PoolBalancesPanel';\nimport { useHistory } from 'react-router-dom';\nimport { PoolAdminPanel } from './PoolAdminPanel';\nimport { useWallet } from '../../../utils/wallet';\n\nconst { Text } = Typography;\n\nexport default function PoolPage() {\n  const { poolAddress } = useParams();\n  const [poolAccountInfo, poolAccountLoaded] = useAccountInfo(\n    isPublicKey(poolAddress) ? new PublicKey(poolAddress) : null,\n  );\n  const history = useHistory();\n\n  const poolInfo: PoolInfo | null = useMemo(() => {\n    if (!poolAccountInfo) {\n      return null;\n    }\n    try {\n      return {\n        address: new PublicKey(poolAddress),\n        state: decodePoolState(poolAccountInfo.data),\n        program: poolAccountInfo.owner,\n      };\n    } catch (e) {\n      return null;\n    }\n  }, [poolAddress, poolAccountInfo]);\n  const [mintAccountInfo, mintAccountInfoLoaded] = useAccountInfo(\n    poolInfo?.state.poolTokenMint,\n  );\n  const mintInfo = useMemo(\n    () => (mintAccountInfo ? parseTokenMintData(mintAccountInfo.data) : null),\n    [mintAccountInfo],\n  );\n  const { wallet } = useWallet();\n\n  if (poolInfo && mintInfo && wallet) {\n    return (\n      <>\n        <PageHeader\n          title={<>Pool {poolInfo.address.toBase58()}</>}\n          onBack={() => history.push('/pools')}\n          subTitle={poolInfo.state.name}\n        />\n        <Row>\n          <Col xs={24} lg={12}>\n            <PoolInfoPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24} lg={12}>\n            <PoolCreateRedeemPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24}>\n            <PoolBalancesPanel poolInfo={poolInfo} />\n          </Col>\n          {wallet.connected &&\n          poolInfo.state.adminKey?.equals(wallet.publicKey) &&\n          isAdminControlledPool(poolInfo) ? (\n            <Col xs={24}>\n              <PoolAdminPanel poolInfo={poolInfo} />\n            </Col>\n          ) : null}\n        </Row>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageHeader\n        title={<>Pool {poolAddress}</>}\n        onBack={() => history.push('/pools')}\n      />\n      <FloatingElement>\n        {!poolAccountLoaded || !mintAccountInfoLoaded ? (\n          <Spin />\n        ) : (\n          <Text>Invalid pool</Text>\n        )}\n      </FloatingElement>\n    </>\n  );\n}\n\nfunction isPublicKey(address) {\n  try {\n    new PublicKey(address);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","import styled from 'styled-components';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport React, { useState } from 'react';\nimport { Button, Input, Typography } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport Link from '../../components/Link';\n\nconst { Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  margin-top: 16px;\n  margin-bottom: 48px;\n`;\n\nexport default function PoolListPage() {\n  const [poolAddress, setPoolAddress] = useState('');\n  const history = useHistory();\n\n  function onSubmit(e) {\n    e.preventDefault();\n    history.push(`/pools/${poolAddress}`);\n  }\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={3}>Pools</Title>\n        <Form onSubmit={onSubmit}>\n          <Input\n            value={poolAddress}\n            onChange={(e) => setPoolAddress(e.target.value.trim())}\n            placeholder=\"Pool address\"\n          />\n          <Button type=\"primary\" htmlType=\"submit\">\n            Go\n          </Button>\n        </Form>\n        <Link to=\"/pools/new\">Create new pool</Link>\n      </FloatingElement>\n    </Wrapper>\n  );\n}\n","import { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport ConvertPage from './pages/ConvertPage';\nimport BasicLayout from './components/BasicLayout';\nimport ListNewMarketPage from './pages/ListNewMarketPage';\nimport NewPoolPage from './pages/pools/NewPoolPage';\nimport PoolPage from './pages/pools/PoolPage';\nimport PoolListPage from './pages/pools/PoolListPage';\nimport { getTradePageUrl } from './utils/markets';\n\nexport function Routes() {\n  return (\n    <>\n      <HashRouter basename={'/'}>\n        <BasicLayout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to={getTradePageUrl()} />\n            </Route>\n            <Route exact path=\"/market/:marketAddress\">\n              <TradePage />\n            </Route>\n            <Route exact path=\"/orders\" component={OpenOrdersPage} />\n            <Route exact path=\"/balances\" component={BalancesPage} />\n            <Route exact path=\"/convert\" component={ConvertPage} />\n            <Route\n              exact\n              path=\"/list-new-market\"\n              component={ListNewMarketPage}\n            />\n            <Route exact path=\"/pools\">\n              <PoolListPage />\n            </Route>\n            <Route exact path=\"/pools/new\">\n              <NewPoolPage />\n            </Route>\n            <Route exact path=\"/pools/:poolAddress\">\n              <PoolPage />\n            </Route>\n          </Switch>\n        </BasicLayout>\n      </HashRouter>\n    </>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\nimport { PreferencesProvider } from './utils/preferences';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <WalletProvider>\n            <PreferencesProvider>\n              <Suspense fallback={() => <Spin size=\"large\" />}>\n                <Routes />\n              </Suspense>\n            </PreferencesProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}