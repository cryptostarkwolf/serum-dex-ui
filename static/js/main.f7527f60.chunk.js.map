{"version":3,"sources":["wallet-adapters/ledger/core.ts","assets/logo.svg","utils/utils.tsx","utils/fetch-loop.tsx","utils/connection.tsx","components/Link.js","utils/notifications.tsx","wallet-adapters/types.ts","wallet-adapters/ledger/index.tsx","wallet-adapters/solong/index.tsx","wallet-adapters/phantom/index.tsx","utils/wallet.tsx","global_style.ts","components/ErrorBoundary.jsx","utils/send.tsx","utils/tokens.tsx","utils/bonfidaConnector.tsx","utils/markets.tsx","utils/useInterval.tsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.tsx","components/layout/DataTable.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.tsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/LinkAddress.tsx","components/StandaloneBalancesDisplay.tsx","components/TradeForm.tsx","components/TradesTable.tsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","pages/TradePage.tsx","components/WalletConnect.tsx","pages/OpenOrdersPage.tsx","components/UserInfoTable/WalletBalancesTable.tsx","pages/BalancesPage.tsx","components/ConvertForm.tsx","pages/ConvertPage.tsx","utils/preferences.tsx","components/Settings.jsx","components/CustomClusterEndpointDialog.tsx","components/AppSearch.tsx","components/TopBar.tsx","components/HelpUrls.ts","components/Footer.tsx","components/BasicLayout.js","components/useMintInput.tsx","pages/ListNewMarketPage.jsx","pages/pools/NewPoolPage.tsx","components/MintName.tsx","pages/pools/PoolPage/PoolBasketDisplay.tsx","pages/pools/PoolPage/PoolInfoPanel.tsx","pages/pools/PoolPage/PoolCreateRedeemPanel.tsx","pages/pools/PoolPage/PoolBalancesPanel.tsx","pages/pools/PoolPage/PoolAdminPanel.tsx","pages/pools/PoolPage/index.tsx","pages/pools/PoolListPage.tsx","routes.tsx","App.tsx","serviceWorker.js","index.js"],"names":["ledgerSend","transport","instruction","p1","payload","a","p2","payloadOffset","length","chunk","slice","console","log","toString","send","Error","reply","harden","n","getSolanaDerivationPath","account","change","undefined","derivationPath","Buffer","alloc","offset","writeUInt8","writeUInt32BE","signTransaction","transaction","messageBytes","serializeMessage","signBytes","bytes","numPaths","concat","getPublicKey","publicKeyBytes","PublicKey","module","exports","isValidPublicKey","key","sleep","ms","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","includes","split","parseInt","divideBnToNumber","numerator","denominator","quotient","div","toNumber","rem","umod","gcd","getTokenMultiplierFromDecimals","BN","pow","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","useState","notify","useEffect","push","filter","listener","setState","useCallback","newState","removeItem","setItem","forEach","useLocalStorageState","JSON","stringify","stringState","setStringState","useMemo","parse","abbreviateAddress","address","size","base58","toBase58","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","cacheNullValues","this","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","set","notifyListeners","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","Set","previousRefreshInterval","add","assert","delete","map","refreshIntervalsOnError","x","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","loaded","refreshCache","clearCache","refreshAllCaches","ENDPOINTS","name","endpoint","custom","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","connection","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","context","useContext","useSendConnection","useConnectionConfig","endpointInfo","find","info","useAccountInfo","tuple","getAccountInfo","accountInfo","count","previousInfo","subscriptionId","equals","lamports","initializeOnly","setCache","currentItem","previousInfoRef","useRef","current","useAccountData","Link","external","props","to","rest","href","target","rel","message","description","txid","type","placement","color","notification","opacity","backgroundColor","DEFAULT_PUBLIC_KEY","LedgerWalletAdapter","_connecting","_publicKey","_transport","transactions","result","signed","signature","addSignature","TransportWebUSB","create","emit","disconnect","close","EventEmitter","SolongWalletAdapter","_onProcess","_connected","connect","bind","solong","window","signAllTransactions","selectAccount","then","catch","finally","SUPPORTED_PHANTOM_EVENTS","PhantomWalletAdapter","onload","event","_provider","on","args","solana","isPhantom","isConnected","autoApprove","open","ASSET_URL","WALLET_PROVIDERS","url","icon","adapter","WalletContext","WalletProvider","autoConnect","setAutoConnect","providerUrl","setProviderUrl","provider","wallet","Wallet","connected","setConnected","walletPublicKey","substring","isModalVisible","setIsModalVisible","select","providerName","title","okText","visible","okButtonProps","display","onCancel","width","onClick","alt","height","src","marginRight","textAlign","marginBottom","useWallet","setProvider","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","error","Component","createTokenAccountTransaction","mintPublicKey","newAccount","Transaction","SystemProgram","getMinimumBalanceForRentExemption","TokenInstructions","TOKEN_PROGRAM_ID","fromPubkey","newAccountPubkey","space","programId","createAccount","initializeAccount","mint","owner","signer","settleFunds","market","openOrders","baseCurrencyAccount","quoteCurrencyAccount","baseCurrencyAccountPubkey","pubkey","quoteCurrencyAccountPubkey","baseMintAddress","createAccountTransaction","createAccountSigner","quoteMintAddress","referrerQuoteWallet","supportsReferralFees","usdt","TOKEN_MINTS","usdc","process","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","settleAllFunds","tokenAccounts","markets","selectedTokenAccounts","programIds","reduce","cumulative","m","_programId","p","getOpenOrdersAccountsForProgramId","OpenOrders","findForOwner","openOrdersAccounts","baseTokenFree","quoteTokenFree","openOrdersAccountsForProgramIds","accounts","openOrdersAccount","_decoded","ownAddress","baseMint","quoteMint","selectedBaseTokenAccount","getSelectedTokenAccountForMint","selectedQuoteTokenAccount","settleTransactions","t","s","cancelOrder","params","cancelOrders","orders","order","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","side","price","orderType","feeDiscountPubkey","formattedMinOrderSize","minOrderSize","toFixed","formattedTickSize","tickSize","isIncrement","num","step","abs","createAccountSigners","payer","matchOrderstransaction","startTime","getUnixTs","makePlaceOrderTransaction","placeOrderTx","placeOrderSigners","endTime","listMarket","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","dexProgramId","vaultOwner","iaddn","baseLotSize","quoteLotSize","requestQueue","eventQueue","bids","asks","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","tx2","Market","getLayout","span","DexInstructions","initializeMarket","signTransactions","transactionsAndSigners","signedTransactions","signedTransaction","sendSignedTransaction","getTime","sentMessage","successMessage","timeout","getRecentBlockhash","recentBlockhash","blockhash","setSigners","partialSign","rawTransaction","serialize","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","simulateResult","simulateTransaction","err","logs","line","startsWith","reject","onSignature","e","getSignatureStatuses","signatureStatuses","confirmations","resultDescription","AccountInfoResult","struct","executable","rentEpoch","GetMultipleAccountsAndContextRpcResult","array","union","jsonRpcVersion","literal","jsonrpc","jsonRpcResult","slot","getMultipleSolanaAccounts","publicKeys","commitment","_rpcRequest","unsafeRes","res","join","from","fromEntries","_recentBlockhash","_disableBlockhashCaching","signData","wireTransaction","_serialize","encodedTransaction","encoding","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","decode","amount","parseTokenMintData","initialized","supply","getOwnedAccountsFilters","memcmp","offsetOf","dataSize","getOwnedTokenAccounts","filters","resp","bs58","every","filterBytes","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","WRAPPED_SOL_MINT","useMintToTickers","customMarkets","useCustomMarkets","useAllMarkets","mintsToTickers","customMarketInfo","customMarket","baseLabel","quoteLabel","useMintInfos","useTokenAccounts","allMarkets","allMints","marketInfo","uniqueMints","stringMint","mintInfos","entries","BonfidaApi","path","fetch","URL","response","ok","json","responseJson","success","marketAddress","USE_MARKETS","MARKETS","getMarketInfos","load","marketName","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","deprecated","publicKeyStr","baseTokenTotal","quoteTokenTotal","some","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","baseCurrency","token","quoteCurrency","setCustomMarkets","MarketProvider","setMarketAddress","marketInfos","setMarket","getTradePageUrl","saved","useSelectedTokenAccounts","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","limit","_useUnfilteredTrades","eventFlags","maker","trade","useTrades","bb","Number","ba","last","sort","b","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","selectedPubKey","filtered","useSelectedQuoteCurrencyAccount","mintAddress","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteSplSizeToNumber","useSelectedBaseCurrencyBalances","baseSplSizeToNumber","useLocallyStoredFeeDiscountKey","storedFeeDiscountKey","setStoredFeeDiscountKey","useFeeDiscountKeys","findFeeDiscountKeys","feeDiscountKey","useAllOpenOrdersBalances","useMarketInfos","stringProgramId","flat","useAllOpenOrdersAccounts","loadedOpenOrdersAccounts","mintInfosConnected","marketsByAddress","openOrdersBalances","baseMintInfo","baseFree","baseTotal","quoteMintInfo","quoteFree","quoteTotal","free","total","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","coin","sub","unsettled","useUnmigratedDeprecatedMarkets","marketsList","deps","getMarket","openOrdersList","customMarketsInfo","getMarketOrderPrice","cost","tickSizeDecimals","isBids","costAtLevel","spentCost","sendPrice","getExpectedFillPrice","sizeAtLevel","avgPrice","totalAvgPrice","useInterval","delay","savedCallback","setInterval","clearInterval","Wrapper","styled","FloatingElement","stretchVertical","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulativeSize","sizePercent","reverse","sum","index","bidsToDisplay","asksToDisplay","flex","overflow","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","formattedPrice","ref","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","justifyContent","alignItems","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","marketFilter","cancelId","setCancelId","orderId","marketFilters","orderInfos","text","onFilter","record","indexOf","fontWeight","charAt","toUpperCase","sorter","showSorterTooltip","DeleteOutlined","cancel","FillsTable","fills","fill","useFills","liquidity","FeesTable","feeTier","row","marginLeft","format","getFeeRates","taker","_","SRM_MINT","MSRM_MINT","marginTop","FeeScheduleTable","balance","Paragraph","TabPane","Tabs","Index","paddingTop","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","DepositDialog","coinMint","depositCoin","onClose","baseOrQuote","onOk","StandaloneTokenAccountsSelect","selectedValue","label","setSelectedTokenAccounts","Fragment","onSelect","newSelectedTokenAccounts","Option","Text","code","shape","CopyOutlined","navigator","clipboard","writeText","LinkAddress","shorten","LinkOutlined","cursor","RowBox","Tip","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","formattedBalances","currency","borderColor","content","trigger","InfoCircleOutlined","align","paddingBottom","block","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","warmUpCache","findBestFeeDiscountKey","onSetBaseSize","usePrice","maxSize","parseFloat","newSize","formatted","onSubmit","flexDirection","Group","onChange","buttonStyle","background","addonBefore","suffix","fontSize","compact","onSetQuoteSize","tipFormatter","marks","checked","disabled","PublicTrades","getRecentTrades","useBonfidaTrades","minHeight","maxHeight","paddingRight","overflowY","time","toLocaleTimeString","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","CustomMarketDialog","onAddCustomMarket","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","placeholder","LoadingOutlined","gutter","Select","OptGroup","TradePage","useParams","history","useHistory","TradePageInner","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","innerHeight","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","component","newCustomMarkets","paddingLeft","MarketSelector","onDeleteCustomMarket","PlusCircleOutlined","extractBase","extractQuote","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","input","option","toLowerCase","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","WalletConnect","menu","Item","overlay","OpenOrdersPage","setLoaded","setRefresh","setOpenOrders","lastRefresh","setLastRefresh","_openOrders","getOpenOrdersForMarket","getAllOpenOrders","prev","useAllOpenOrders","marketAddressesToNames","WalletBalancesTable","walletBalances","tokenAccountsConnected","allMarketsConnected","settlingFunds","setSettlingFunds","walletBalance","BalancesPage","parsedAccount","mintInfo","additionalAmount","useWalletBalancesForAllMarkets","mintToTickers","openOrdersFree","openOrdersTotal","ConvertButton","ConvertForm","fromToken","setFromToken","toToken","setToToken","setSize","marketInfosbyName","tokenConvertMap","base","quote","maxWidth","minWidth","ConvertFormSubmit","fromAmount","setFromAmount","toAmount","setToAmount","isConverting","setIsConverting","isFromTokenBaseOfMarket","onConvert","sidedOrderbookAccount","decodedOrderbookData","parsedPrice","parsedSize","getPrice","expectedPrice","canConvert","coinBalance","availableBalance","SwapOutlined","ConvertPage","PreferencesContext","PreferencesProvider","autoSettleEnabled","setAutoSettleEnabled","marketList","autoSettle","Settings","usePreferences","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","appsAndTokens","apps","tags","AppSearch","searchMatches","setSearchMatches","searchValue","setSearchValue","handleClear","options","d","replace","allowClear","focussed","onSearch","filteredApps","app","searchString","lowerSearchStr","tag","matchApp","onClear","onFocus","onBlur","notFoundContent","transition","dropdownStyle","dropdownMatchSelectWidth","suffixIcon","SearchOutlined","focus","LogoWrapper","EXTERNAL_LINKS","TopBar","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","searchFocussed","setSearchFocussed","handleClick","endpointInfoCustom","handler","tradePageUrl","pathname","handleError","getEpochInfo","newCustomEndpoints","logo","mode","selectedKeys","borderBottom","margin","SubMenu","onTitleClick","SettingOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","useMintInput","tooltip","setAddress","ticker","validateStatus","hasFeedback","help","parsed","ListNewMarketPage","baseMintInput","quoteMintInput","lotSize","setLotSize","setTickSize","listedMarket","setListedMarket","labelCol","wrapperCol","layout","onFinish","initialValue","trim","colon","htmlType","AddRemoveTokenButtons","SIMPLE_POOL_PROGRAM_ID","DEFAULT_PROGRAM_ID","PROGRAM_ID_OPTIONS","NewPoolPage","poolName","setPoolName","setProgramId","initialSupply","setInitialSupply","valid","initialAssets","setInitialAssets","adminControlled","setAdminControlled","adminAddress","setAdminAddress","newPoolAddress","setNewPoolAddress","asset","assets","PoolTransactions","initializeSimplePool","poolStateSpace","poolMintDecimals","initialPoolMintSupply","assetMints","initialAssetQuantities","quantity","creator","creatorAssets","found","tokenAccount","additionalAccounts","isSigner","isWritable","poolAddress","AssetInput","mintInput","setQuantity","parsedQuantity","old","MintName","showAddress","mintKey","PoolBasketDisplay","poolInfo","basket","BasketItem","quantities","mintAccountInfo","quantityDisplay","feeFormat","PoolInfoPanel","getPoolBasket","redeem","totalBasket","copyable","poolTokenMint","adminKey","feeRate","PoolCreateRedeemPanel","CreateRedeemTab","action","basketLoaded","findTokenAccount","preventDefault","execute","poolTokenAccount","assetAccounts","PoolBalancesPanel","WalletBalancesTab","PoolBalancesTab","BalanceItem","isPoolToken","vaultAddress","balanceAccountInfo","PoolAdminPanel","PauseUnpauseTab","AddAssetTab","RemoveAssetTab","DepositTab","WithdrawTab","UpdateFeeTab","AdminControlledPoolInstructions","pause","unpause","useOnSubmitHandler","getAssociatedTokenAddress","vaultSigner","createAssociatedTokenAccount","addAsset","MintSelector","SubmitButton","removeAsset","MintInPoolSelector","walletTokenAccount","mintDecimals","wrappedSolAccount","transfer","source","destination","closeAccount","approveDelegate","setFeeRate","updateFee","makeTransaction","className","PoolPage","isPublicKey","poolAccountInfo","poolAccountLoaded","decodePoolState","program","mintAccountInfoLoaded","onBack","subTitle","isAdminControlledPool","Form","form","PoolListPage","setPoolAddress","Routes","basename","exact","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7527f60.chunk.js","sourcesContent":["import type Transport from '@ledgerhq/hw-transport';\nimport type { Transaction } from '@solana/web3.js';\n\nimport { PublicKey } from '@solana/web3.js';\n\nconst INS_GET_PUBKEY = 0x05;\nconst INS_SIGN_MESSAGE = 0x06;\n\nconst P1_NON_CONFIRM = 0x00;\nconst P1_CONFIRM = 0x01;\n\nconst P2_EXTEND = 0x01;\nconst P2_MORE = 0x02;\n\nconst MAX_PAYLOAD = 255;\n\nconst LEDGER_CLA = 0xe0;\n\n/*\n * Helper for chunked send of large payloads\n */\nasync function ledgerSend(\n  transport: Transport,\n  instruction: number,\n  p1: number,\n  payload: Buffer,\n) {\n  let p2 = 0;\n  let payloadOffset = 0;\n\n  if (payload.length > MAX_PAYLOAD) {\n    while (payload.length - payloadOffset > MAX_PAYLOAD) {\n      const chunk = payload.slice(payloadOffset, payloadOffset + MAX_PAYLOAD);\n      payloadOffset += MAX_PAYLOAD;\n      console.log(\n        'send',\n        (p2 | P2_MORE).toString(16),\n        chunk.length.toString(16),\n        chunk,\n      );\n      const reply = await transport.send(\n        LEDGER_CLA,\n        instruction,\n        p1,\n        p2 | P2_MORE,\n        chunk,\n      );\n      if (reply.length !== 2) {\n        throw new Error('Received unexpected reply payload');\n      }\n      p2 |= P2_EXTEND;\n    }\n  }\n\n  const chunk = payload.slice(payloadOffset);\n  console.log('send', p2.toString(16), chunk.length.toString(16), chunk);\n  const reply = await transport.send(LEDGER_CLA, instruction, p1, p2, chunk);\n\n  return reply.slice(0, reply.length - 2);\n}\n\nconst BIP32_HARDENED_BIT = (1 << 31) >>> 0;\nfunction harden(n: number = 0) {\n  return (n | BIP32_HARDENED_BIT) >>> 0;\n}\n\nexport function getSolanaDerivationPath(account?: number, change?: number) {\n  var length;\n  if (account !== undefined) {\n    if (change !== undefined) {\n      length = 4;\n    } else {\n      length = 3;\n    }\n  } else {\n    length = 2;\n  }\n\n  var derivationPath = Buffer.alloc(1 + length * 4);\n  // eslint-disable-next-line\n  var offset = 0;\n  offset = derivationPath.writeUInt8(length, offset);\n  offset = derivationPath.writeUInt32BE(harden(44), offset); // Using BIP44\n  offset = derivationPath.writeUInt32BE(harden(501), offset); // Solana's BIP44 path\n\n  if (length > 2) {\n    offset = derivationPath.writeUInt32BE(harden(account), offset);\n    if (length === 4) {\n      // @FIXME: https://github.com/project-serum/spl-token-wallet/issues/59\n      offset = derivationPath.writeUInt32BE(harden(change), offset);\n    }\n  }\n\n  return derivationPath;\n}\n\nexport async function signTransaction(\n  transport: Transport,\n  transaction: Transaction,\n  derivationPath: Buffer = getSolanaDerivationPath(),\n) {\n  const messageBytes = transaction.serializeMessage();\n  return signBytes(transport, messageBytes, derivationPath);\n}\n\nexport async function signBytes(\n  transport: Transport,\n  bytes: Buffer,\n  derivationPath: Buffer = getSolanaDerivationPath(),\n) {\n  const numPaths = Buffer.alloc(1);\n  numPaths.writeUInt8(1, 0);\n\n  const payload = Buffer.concat([numPaths, derivationPath, bytes]);\n\n  // @FIXME: must enable blind signing in Solana Ledger App per https://github.com/project-serum/spl-token-wallet/issues/71\n  // See also https://github.com/project-serum/spl-token-wallet/pull/23#issuecomment-712317053\n  return ledgerSend(transport, INS_SIGN_MESSAGE, P1_CONFIRM, payload);\n}\n\nexport async function getPublicKey(\n  transport: Transport,\n  derivationPath: Buffer = getSolanaDerivationPath(),\n) {\n  const publicKeyBytes = await ledgerSend(\n    transport,\n    INS_GET_PUBKEY,\n    P1_NON_CONFIRM,\n    derivationPath,\n  );\n\n  return new PublicKey(publicKeyBytes);\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals\n    ? Math.floor(value * 10 ** decimals) / 10 ** decimals\n    : Math.floor(value);\n}\n\nexport function roundToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value): number {\n  if (\n    !isNaN(value) &&\n    Math.floor(value) !== value &&\n    value.toString().includes('.')\n  )\n    return value.toString().split('.')[1].length || 0;\n  if (\n    !isNaN(value) &&\n    Math.floor(value) !== value &&\n    value.toString().includes('e')\n  )\n    return parseInt(value.toString().split('e-')[1] || '0');\n  return 0;\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\n  return new BN(10).pow(new BN(decimals));\n}\n\nconst localStorageListeners = {};\n\nexport function useLocalStorageStringState(\n  key: string,\n  defaultState: string | null = null,\n): [string | null, (newState: string | null) => void] {\n  const state = localStorage.getItem(key) || defaultState;\n\n  const [, notify] = useState(key + '\\n' + state);\n\n  useEffect(() => {\n    if (!localStorageListeners[key]) {\n      localStorageListeners[key] = [];\n    }\n    localStorageListeners[key].push(notify);\n    return () => {\n      localStorageListeners[key] = localStorageListeners[key].filter(\n        (listener) => listener !== notify,\n      );\n      if (localStorageListeners[key].length === 0) {\n        delete localStorageListeners[key];\n      }\n    };\n  }, [key]);\n\n  const setState = useCallback<(newState: string | null) => void>(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, newState);\n      }\n      localStorageListeners[key].forEach((listener) =>\n        listener(key + '\\n' + newState),\n      );\n    },\n    [state, key],\n  );\n\n  return [state, setState];\n}\n\nexport function useLocalStorageState<T = any>(\n  key: string,\n  defaultState: T | null = null,\n): [T, (newState: T) => void] {\n  let [stringState, setStringState] = useLocalStorageStringState(\n    key,\n    JSON.stringify(defaultState),\n  );\n  return [\n    useMemo(() => stringState && JSON.parse(stringState), [stringState]),\n    (newState) => setStringState(JSON.stringify(newState)),\n  ];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address: PublicKey, size = 4) {\n  const base58 = address.toBase58();\n  return base58.slice(0, size) + '…' + base58.slice(-size);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache: Map<any, any> = new Map();\n\nclass FetchLoopListener<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  refreshInterval: number;\n  refreshIntervalOnError: number | null;\n  callback: () => void;\n  cacheNullValues: Boolean = true;\n\n  constructor(\n    cacheKey: any,\n    fn: () => Promise<T>,\n    refreshInterval: number,\n    refreshIntervalOnError: number | null,\n    callback: () => void,\n    cacheNullValues: Boolean,\n  ) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n    this.cacheNullValues = cacheNullValues;\n  }\n}\n\nclass FetchLoopInternal<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  timeoutId: null | any;\n  listeners: Set<FetchLoopListener<T>>;\n  errors: number;\n  cacheNullValues: Boolean = true;\n\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n    this.cacheNullValues = cacheNullValues;\n  }\n\n  get refreshInterval(): number {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError(): number | null {\n    const refreshIntervalsOnError: number[] = [...this.listeners]\n      .map((listener) => listener.refreshIntervalOnError)\n      .filter((x): x is number => x !== null);\n    if (refreshIntervalsOnError.length === 0) {\n      return null;\n    }\n    return Math.min(...refreshIntervalsOnError);\n  }\n\n  get stopped(): boolean {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener: FetchLoopListener<T>): void {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener: FetchLoopListener<T>): void {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners(): void {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      if (!this.cacheNullValues && data === null) {\n        console.log(`Not caching null value for ${this.cacheKey}`);\n        // cached data has not changed so no need to re-render\n        this.errors = 0;\n        return data;\n      } else {\n        globalCache.set(this.cacheKey, data);\n        this.errors = 0;\n        this.notifyListeners();\n        return data;\n      }\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener<T>(listener: FetchLoopListener<T>) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal<T>(\n          listener.cacheKey,\n          listener.fn,\n          listener.cacheNullValues,\n        ),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener<T>(listener: FetchLoopListener<T>) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n      globalCache.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData<T = any>(\n  asyncFn: () => Promise<T>,\n  cacheKey: any,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n  cacheNullValues: Boolean = true,\n): [null | undefined | T, boolean] {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener<T>(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n      cacheNullValues,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey: any, clearCache = false): void {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches(): void {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(\n  cacheKey: any,\n  value: any,\n  { initializeOnly = false } = {},\n): void {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { useLocalStorageState } from './utils';\nimport { Account, AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport { ConnectionContextValues, EndpointInfo } from './types';\n\nexport const ENDPOINTS: EndpointInfo[] = [\n  {\n    name: 'mainnet-beta',\n    endpoint: 'https://solana-api.projectserum.com',\n    custom: false,\n  },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(\n  null,\n);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<\n    EndpointInfo[]\n  >('customConnectionEndpoints', []);\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => {\n      connection.removeAccountChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => {\n      connection.removeSlotChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => {\n      sendConnection.removeAccountChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => {\n      sendConnection.removeSlotChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{\n        endpoint,\n        setEndpoint,\n        connection,\n        sendConnection,\n        availableEndpoints,\n        setCustomEndpoints,\n      }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.connection;\n}\n\nexport function useSendConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return {\n    endpoint: context.endpoint,\n    endpointInfo: context.availableEndpoints.find(\n      (info) => info.endpoint === context.endpoint,\n    ),\n    setEndpoint: context.setEndpoint,\n    availableEndpoints: context.availableEndpoints,\n    setCustomEndpoints: context.setCustomEndpoints,\n  };\n}\n\nexport function useAccountInfo(\n  publicKey: PublicKey | undefined | null,\n): [AccountInfo<Buffer> | null | undefined, boolean] {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousInfo: AccountInfo<Buffer> | null = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (info) => {\n        if (\n          !previousInfo ||\n          !previousInfo.data.equals(info.data) ||\n          previousInfo.lamports !== info.lamports\n        ) {\n          previousInfo = info;\n          setCache(cacheKey, info);\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  const previousInfoRef = useRef<AccountInfo<Buffer> | null | undefined>(null);\n  if (\n    !accountInfo ||\n    !previousInfoRef.current ||\n    !previousInfoRef.current.data.equals(accountInfo.data) ||\n    previousInfoRef.current.lamports !== accountInfo.lamports\n  ) {\n    previousInfoRef.current = accountInfo;\n  }\n  return [previousInfoRef.current, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n","import React from 'react';\nimport { notification } from 'antd';\nimport Link from '../components/Link';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'bottomLeft',\n}: {\n  message: string;\n  description?: string | JSX.Element;\n  txid?: string;\n  type?: string;\n  placement?: string;\n}) {\n  if (txid) {\n    description = (\n      <Link\n        external\n        to={'https://explorer.solana.com/tx/' + txid}\n        style={{ color: '#0000ff' }}\n      >\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n      </Link>\n    );\n  }\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import { PublicKey, Transaction } from '@solana/web3.js';\n\nexport const DEFAULT_PUBLIC_KEY = new PublicKey(\n  '11111111111111111111111111111111',\n);\n\nexport interface WalletAdapter {\n  publicKey: PublicKey;\n  autoApprove: boolean;\n  connected: boolean;\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions: (transaction: Transaction[]) => Promise<Transaction[]>;\n  connect: () => any;\n  disconnect: () => any;\n  on<T>(event: string, fn: () => void): this;\n}\n","import type Transport from '@ledgerhq/hw-transport';\nimport type { Transaction } from '@solana/web3.js';\n\nimport EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport TransportWebUSB from '@ledgerhq/hw-transport-webusb';\nimport { notify } from '../../utils/notifications';\nimport { getPublicKey, signTransaction } from './core';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\nexport class LedgerWalletAdapter extends EventEmitter implements WalletAdapter {\n  _connecting: boolean;\n  _publicKey: PublicKey | null;\n  _transport: Transport | null;\n\n  constructor() {\n    super();\n    this._connecting = false;\n    this._publicKey = null;\n    this._transport = null;\n  }\n\n  get publicKey() {\n    return this._publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  get connected() {\n    return this._publicKey !== null;\n  }\n\n  get autoApprove() {\n    return false;\n  }\n\n  public async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    const result: Transaction[] = [];\n    for (let i = 0; i < transactions.length; i++) {\n      const transaction = transactions[i];\n      const signed = await this.signTransaction(transaction);\n      result.push(signed);\n    }\n\n    return result;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._transport || !this._publicKey) {\n      throw new Error('Not connected to Ledger');\n    }\n\n    // @TODO: account selection (derivation path changes with account)\n    const signature = await signTransaction(this._transport, transaction);\n\n    transaction.addSignature(this._publicKey, signature);\n\n    return transaction;\n  }\n\n  async connect() {\n    if (this._connecting) {\n      return;\n    }\n\n    this._connecting = true;\n\n    try {\n      // @TODO: transport selection (WebUSB, WebHID, bluetooth, ...)\n      this._transport = await TransportWebUSB.create();\n      // @TODO: account selection\n      this._publicKey = await getPublicKey(this._transport);\n      this.emit('connect', this._publicKey);\n    } catch (error) {\n      notify({\n        message: 'Ledger Error',\n        description: error.message,\n      });\n      await this.disconnect();\n    } finally {\n      this._connecting = false;\n    }\n  }\n\n  async disconnect() {\n    let emit = false;\n    if (this._transport) {\n      await this._transport.close();\n      this._transport = null;\n      emit = true;\n    }\n\n    this._connecting = false;\n    this._publicKey = null;\n\n    if (emit) {\n      this.emit('disconnect');\n    }\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport { notify } from '../../utils/notifications';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\nexport class SolongWalletAdapter extends EventEmitter implements WalletAdapter {\n  _publicKey?: PublicKey;\n  _onProcess: boolean;\n  _connected: boolean;\n  constructor() {\n    super();\n    this._onProcess = false;\n    this._connected = false;\n    this.connect = this.connect.bind(this);\n  }\n\n  get connected() {\n    return this._connected;\n  }\n\n  get autoApprove() {\n    return false;\n  }\n\n  public async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    const solong = (window as any).solong;\n    if (solong.signAllTransactions) {\n      return solong.signAllTransactions(transactions);\n    } else {\n      const result: Transaction[] = [];\n      for (let i = 0; i < transactions.length; i++) {\n        const transaction = transactions[i];\n        const signed = await solong.signTransaction(transaction);\n        result.push(signed);\n      }\n\n      return result;\n    }\n  }\n\n  get publicKey() {\n    return this._publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    return (window as any).solong.signTransaction(transaction);\n  }\n\n  connect() {\n    if (this._onProcess) {\n      return;\n    }\n\n    if ((window as any).solong === undefined) {\n      notify({\n        message: 'Solong Error',\n        description: 'Please install solong wallet from Chrome ',\n      });\n      return;\n    }\n\n    this._onProcess = true;\n    (window as any).solong\n      .selectAccount()\n      .then((account: any) => {\n        this._publicKey = new PublicKey(account);\n        this._connected = true;\n        this.emit('connect', this._publicKey);\n      })\n      .catch(() => {\n        this.disconnect();\n      })\n      .finally(() => {\n        this._onProcess = false;\n      });\n  }\n\n  disconnect() {\n    if (this._publicKey) {\n      this._publicKey = undefined;\n      this._connected = false;\n      this.emit('disconnect');\n    }\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport { notify } from '../../utils/notifications';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\ntype PhantomEvent = 'disconnect' | 'connect';\ntype PhantomRequestMethod =\n  | 'connect'\n  | 'disconnect'\n  | 'signTransaction'\n  | 'signAllTransactions';\n\ninterface PhantomProvider {\n  publicKey?: PublicKey;\n  isConnected?: boolean;\n  autoApprove?: boolean;\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>;\n  connect: () => Promise<void>;\n  disconnect: () => Promise<void>;\n  on: (event: PhantomEvent, handler: (args: any) => void) => void;\n  request: (method: PhantomRequestMethod, params: any) => Promise<any>;\n}\n\nconst SUPPORTED_PHANTOM_EVENTS: PhantomEvent[] = ['connect', 'disconnect'];\n\nexport class PhantomWalletAdapter\n  extends EventEmitter\n  implements WalletAdapter {\n  constructor() {\n    super();\n    this.connect = this.connect.bind(this);\n    window.onload = () => {\n      for (const event of SUPPORTED_PHANTOM_EVENTS) {\n        this._provider?.on(event, (...args) => this.emit(event, ...args));\n      }\n    };\n  }\n\n  private get _provider(): PhantomProvider | undefined {\n    if ((window as any)?.solana?.isPhantom) {\n      return (window as any).solana;\n    }\n    return undefined;\n  }\n\n  get connected() {\n    return this._provider?.isConnected || false;\n  }\n\n  get autoApprove() {\n    return this._provider?.autoApprove || false;\n  }\n\n  async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    if (!this._provider) {\n      return transactions;\n    }\n\n    return this._provider.signAllTransactions(transactions);\n  }\n\n  get publicKey() {\n    return this._provider?.publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._provider) {\n      return transaction;\n    }\n\n    return this._provider.signTransaction(transaction);\n  }\n\n  connect() {\n    if (!this._provider) {\n      window.open('https://phantom.app/', '_blank');\n      notify({\n        message: 'Connection Error',\n        description: 'Please install Phantom wallet',\n      });\n      return;\n    }\n\n    return this._provider?.connect();\n  }\n\n  disconnect() {\n    if (this._provider) {\n      this._provider.disconnect();\n    }\n  }\n}\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\nimport { WalletContextValues } from './types';\nimport { Button, Modal } from 'antd';\nimport {\n  WalletAdapter,\n  LedgerWalletAdapter,\n  SolongWalletAdapter,\n  PhantomWalletAdapter,\n} from '../wallet-adapters';\n\nconst ASSET_URL =\n  'https://cdn.jsdelivr.net/gh/solana-labs/oyster@main/assets/wallets';\nexport const WALLET_PROVIDERS = [\n  {\n    name: 'sollet.io',\n    url: 'https://www.sollet.io',\n    icon: `${ASSET_URL}/sollet.svg`,\n  },\n  {\n    name: 'Ledger',\n    url: 'https://www.ledger.com',\n    icon: `${ASSET_URL}/ledger.svg`,\n    adapter: LedgerWalletAdapter,\n  },\n  {\n    name: 'Solong',\n    url: 'https://www.solong.com',\n    icon: `${ASSET_URL}/solong.png`,\n    adapter: SolongWalletAdapter,\n  },\n  {\n    name: 'Phantom',\n    url: 'https://www.phantom.app',\n    icon: `https://www.phantom.app/img/logo.png`,\n    adapter: PhantomWalletAdapter,\n  },\n];\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n\n  const [autoConnect, setAutoConnect] = useState(false);\n  const [providerUrl, setProviderUrl] = useLocalStorageState('walletProvider');\n\n  const provider = useMemo(\n    () => WALLET_PROVIDERS.find(({ url }) => url === providerUrl),\n    [providerUrl],\n  );\n\n  const wallet = useMemo(\n    function () {\n      if (provider) {\n        return new (provider.adapter || Wallet)(\n          providerUrl,\n          endpoint,\n        ) as WalletAdapter;\n      }\n    },\n    [provider, providerUrl, endpoint],\n  );\n\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    if (wallet) {\n      wallet.on('connect', () => {\n        if (wallet.publicKey) {\n          console.log('connected');\n          localStorage.removeItem('feeDiscountKey');\n          setConnected(true);\n          const walletPublicKey = wallet.publicKey.toBase58();\n          const keyToDisplay =\n            walletPublicKey.length > 20\n              ? `${walletPublicKey.substring(\n                  0,\n                  7,\n                )}.....${walletPublicKey.substring(\n                  walletPublicKey.length - 7,\n                  walletPublicKey.length,\n                )}`\n              : walletPublicKey;\n\n          notify({\n            message: 'Wallet update',\n            description: 'Connected to wallet ' + keyToDisplay,\n          });\n        }\n      });\n\n      wallet.on('disconnect', () => {\n        setConnected(false);\n        notify({\n          message: 'Wallet update',\n          description: 'Disconnected from wallet',\n        });\n        localStorage.removeItem('feeDiscountKey');\n      });\n    }\n\n    return () => {\n      setConnected(false);\n      if (wallet) {\n        wallet.disconnect();\n        setConnected(false);\n      }\n    };\n  }, [wallet]);\n\n  useEffect(() => {\n    if (wallet && autoConnect) {\n      wallet.connect();\n      setAutoConnect(false);\n    }\n\n    return () => {};\n  }, [wallet, autoConnect]);\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const select = useCallback(() => setIsModalVisible(true), []);\n  const close = useCallback(() => setIsModalVisible(false), []);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        select,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n      <Modal\n        title=\"Select Wallet\"\n        okText=\"Connect\"\n        visible={isModalVisible}\n        okButtonProps={{ style: { display: 'none' } }}\n        onCancel={close}\n        width={400}\n      >\n        {WALLET_PROVIDERS.map((provider) => {\n          const onClick = function () {\n            setProviderUrl(provider.url);\n            setAutoConnect(true);\n            close();\n          };\n\n          return (\n            <Button\n              size=\"large\"\n              type={providerUrl === provider.url ? 'primary' : 'ghost'}\n              onClick={onClick}\n              icon={\n                <img\n                  alt={`${provider.name}`}\n                  width={20}\n                  height={20}\n                  src={provider.icon}\n                  style={{ marginRight: 8 }}\n                />\n              }\n              style={{\n                display: 'block',\n                width: '100%',\n                textAlign: 'left',\n                marginBottom: 8,\n              }}\n            >\n              {provider.name}\n            </Button>\n          );\n        })}\n      </Modal>\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error('Missing wallet context');\n  }\n\n  const wallet = context.wallet;\n  return {\n    connected: context.connected,\n    wallet: wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n    select: context.select,\n    connect() {\n      wallet ? wallet.connect() : context.select();\n    },\n    disconnect() {\n      wallet?.disconnect();\n    },\n  };\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #11161D\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport { getSelectedTokenAccountForMint } from './markets';\nimport {\n  Account,\n  AccountInfo,\n  Commitment,\n  Connection,\n  PublicKey,\n  RpcResponseAndContext,\n  SimulatedTransactionResponse,\n  SystemProgram,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\nimport BN from 'bn.js';\nimport {\n  DexInstructions,\n  Market,\n  OpenOrders,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport { SelectedTokenAccounts, TokenAccount } from './types';\nimport { Order } from '@project-serum/serum/lib/market';\nimport { Buffer } from 'buffer';\nimport assert from 'assert';\nimport { struct } from 'superstruct';\nimport { WalletAdapter } from '../wallet-adapters';\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n}: {\n  connection: Connection;\n  wallet: WalletAdapter;\n  mintPublicKey: PublicKey;\n}): Promise<{\n  transaction: Transaction;\n  signer: Account;\n  newAccountPubkey: PublicKey;\n}> {\n  const newAccount = new Account();\n  const transaction = new Transaction();\n  const instruction = SystemProgram.createAccount({\n    fromPubkey: wallet.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\n    space: 165,\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\n  });\n  transaction.add(instruction);\n  transaction.add(\n    TokenInstructions.initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: wallet.publicKey,\n    }),\n  );\n  return {\n    transaction,\n    signer: newAccount,\n    newAccountPubkey: newAccount.publicKey,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n}: {\n  market: Market;\n  openOrders: OpenOrders;\n  connection: Connection;\n  wallet: WalletAdapter;\n  baseCurrencyAccount: TokenAccount;\n  quoteCurrencyAccount: TokenAccount;\n}): Promise<string | undefined> {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    notify({ message: 'Not connected' });\n    return;\n  }\n\n  let createAccountTransaction: Transaction | undefined;\n  let createAccountSigner: Account | undefined;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n    createAccountSigner = result?.signer;\n  }\n  let referrerQuoteWallet: PublicKey | null = null;\n  if (market.supportsReferralFees) {\n    const usdt = TOKEN_MINTS.find(({ name }) => name === 'USDT');\n    const usdc = TOKEN_MINTS.find(({ name }) => name === 'USDC');\n    if (\n      process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS &&\n      usdt &&\n      market.quoteMintAddress.equals(usdt.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS,\n      );\n    } else if (\n      process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS &&\n      usdc &&\n      market.quoteMintAddress.equals(usdc.address)\n    ) {\n      referrerQuoteWallet = new PublicKey(\n        process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS,\n      );\n    }\n  }\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n    referrerQuoteWallet,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n  let signers = createAccountSigner\n    ? [...settleFundsSigners, createAccountSigner]\n    : settleFundsSigners;\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n    sendingMessage: 'Settling funds...',\n  });\n}\n\nexport async function settleAllFunds({\n  connection,\n  wallet,\n  tokenAccounts,\n  markets,\n  selectedTokenAccounts,\n}: {\n  connection: Connection;\n  wallet: WalletAdapter;\n  tokenAccounts: TokenAccount[];\n  markets: Market[];\n  selectedTokenAccounts?: SelectedTokenAccounts;\n}) {\n  if (!markets || !wallet || !connection || !tokenAccounts) {\n    return;\n  }\n\n  const programIds: PublicKey[] = [];\n  markets\n    .reduce((cumulative, m) => {\n      // @ts-ignore\n      cumulative.push(m._programId);\n      return cumulative;\n    }, [])\n    .forEach((programId) => {\n      if (!programIds.find((p) => p.equals(programId))) {\n        programIds.push(programId);\n      }\n    });\n\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\n    const openOrdersAccounts = await OpenOrders.findForOwner(\n      connection,\n      wallet.publicKey,\n      programId,\n    );\n    return openOrdersAccounts.filter(\n      (openOrders) =>\n        openOrders.baseTokenFree.toNumber() ||\n        openOrders.quoteTokenFree.toNumber(),\n    );\n  };\n\n  const openOrdersAccountsForProgramIds = await Promise.all(\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\n  );\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\n    (accounts, current) => accounts.concat(current),\n    [],\n  );\n\n  const settleTransactions = (\n    await Promise.all(\n      openOrdersAccounts.map((openOrdersAccount) => {\n        const market = markets.find((m) =>\n          // @ts-ignore\n          m._decoded?.ownAddress?.equals(openOrdersAccount.market),\n        );\n        const baseMint = market?.baseMintAddress;\n        const quoteMint = market?.quoteMintAddress;\n\n        const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          baseMint,\n          baseMint &&\n            selectedTokenAccounts &&\n            selectedTokenAccounts[baseMint.toBase58()],\n        )?.pubkey;\n        const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          quoteMint,\n          quoteMint &&\n            selectedTokenAccounts &&\n            selectedTokenAccounts[quoteMint.toBase58()],\n        )?.pubkey;\n        if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\n          return null;\n        }\n        return (\n          market &&\n          market.makeSettleFundsTransaction(\n            connection,\n            openOrdersAccount,\n            selectedBaseTokenAccount,\n            selectedQuoteTokenAccount,\n          )\n        );\n      }),\n    )\n  ).filter(\n    (\n      x,\n    ): x is {\n      signers: Account[];\n      transaction: Transaction;\n      payer: PublicKey;\n    } => !!x,\n  );\n  if (!settleTransactions || settleTransactions.length === 0) return;\n\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\n  const signers: Array<Account> = [];\n  settleTransactions\n    .reduce((cumulative: Array<Account>, t) => cumulative.concat(t.signers), [])\n    .forEach((signer) => {\n      if (!signers.find((s) => s.publicKey.equals(signer.publicKey))) {\n        signers.push(signer);\n      }\n    });\n\n  const transaction = mergeTransactions(transactions);\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n  });\n}\n\nexport async function cancelOrder(params: {\n  market: Market;\n  connection: Connection;\n  wallet: WalletAdapter;\n  order: Order;\n}) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({\n  market,\n  wallet,\n  connection,\n  orders,\n}: {\n  market: Market;\n  wallet: WalletAdapter;\n  connection: Connection;\n  orders: Order[];\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    sendingMessage: 'Sending cancel...',\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  feeDiscountPubkey = undefined,\n}: {\n  side: 'buy' | 'sell';\n  price: number;\n  size: number;\n  orderType: 'ioc' | 'postOnly' | 'limit';\n  market: Market | undefined | null;\n  connection: Connection;\n  wallet: WalletAdapter;\n  baseCurrencyAccount: PublicKey | undefined;\n  quoteCurrencyAccount: PublicKey | undefined;\n  feeDiscountPubkey: PublicKey | undefined;\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n  const transaction = new Transaction();\n  const signers: Account[] = [];\n\n  if (!baseCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      signer: createAccountSigners,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    signers.push(createAccountSigners);\n    baseCurrencyAccount = newAccountPubkey;\n  }\n  if (!quoteCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      signer: createAccountSigners,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    signers.push(createAccountSigners);\n    quoteCurrencyAccount = newAccountPubkey;\n  }\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n    feeDiscountPubkey: feeDiscountPubkey || null,\n  };\n  console.log(params);\n\n  const matchOrderstransaction = market.makeMatchOrdersTransaction(5);\n  transaction.add(matchOrderstransaction);\n  const startTime = getUnixTs();\n  let {\n    transaction: placeOrderTx,\n    signers: placeOrderSigners,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    120_000,\n    120_000,\n  );\n  const endTime = getUnixTs();\n  console.log(`Creating order transaction took ${endTime - startTime}`);\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  signers.push(...placeOrderSigners);\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    signers,\n    sendingMessage: 'Sending order...',\n  });\n}\n\nexport async function listMarket({\n  connection,\n  wallet,\n  baseMint,\n  quoteMint,\n  baseLotSize,\n  quoteLotSize,\n  dexProgramId,\n}: {\n  connection: Connection;\n  wallet: WalletAdapter;\n  baseMint: PublicKey;\n  quoteMint: PublicKey;\n  baseLotSize: number;\n  quoteLotSize: number;\n  dexProgramId: PublicKey;\n}) {\n  const market = new Account();\n  const requestQueue = new Account();\n  const eventQueue = new Account();\n  const bids = new Account();\n  const asks = new Account();\n  const baseVault = new Account();\n  const quoteVault = new Account();\n  const feeRateBps = 0;\n  const quoteDustThreshold = new BN(100);\n\n  async function getVaultOwnerAndNonce() {\n    const nonce = new BN(0);\n    while (true) {\n      try {\n        const vaultOwner = await PublicKey.createProgramAddress(\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\n          dexProgramId,\n        );\n        return [vaultOwner, nonce];\n      } catch (e) {\n        nonce.iaddn(1);\n      }\n    }\n  }\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\n\n  const tx1 = new Transaction();\n  tx1.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: baseVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: quoteVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    TokenInstructions.initializeAccount({\n      account: baseVault.publicKey,\n      mint: baseMint,\n      owner: vaultOwner,\n    }),\n    TokenInstructions.initializeAccount({\n      account: quoteVault.publicKey,\n      mint: quoteMint,\n      owner: vaultOwner,\n    }),\n  );\n\n  const tx2 = new Transaction();\n  tx2.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: market.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(\n        Market.getLayout(dexProgramId).span,\n      ),\n      space: Market.getLayout(dexProgramId).span,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: requestQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\n      space: 5120 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: eventQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\n      space: 262144 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: bids.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: asks.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    DexInstructions.initializeMarket({\n      market: market.publicKey,\n      requestQueue: requestQueue.publicKey,\n      eventQueue: eventQueue.publicKey,\n      bids: bids.publicKey,\n      asks: asks.publicKey,\n      baseVault: baseVault.publicKey,\n      quoteVault: quoteVault.publicKey,\n      baseMint,\n      quoteMint,\n      baseLotSize: new BN(baseLotSize),\n      quoteLotSize: new BN(quoteLotSize),\n      feeRateBps,\n      vaultSignerNonce,\n      quoteDustThreshold,\n      programId: dexProgramId,\n    }),\n  );\n\n  const signedTransactions = await signTransactions({\n    transactionsAndSigners: [\n      { transaction: tx1, signers: [baseVault, quoteVault] },\n      {\n        transaction: tx2,\n        signers: [market, requestQueue, eventQueue, bids, asks],\n      },\n    ],\n    wallet,\n    connection,\n  });\n  for (let signedTransaction of signedTransactions) {\n    await sendSignedTransaction({\n      signedTransaction,\n      connection,\n    });\n  }\n\n  return market.publicKey;\n}\n\nexport const getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nexport async function sendTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  transaction: Transaction;\n  wallet: WalletAdapter;\n  signers?: Array<Account>;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}) {\n  const signedTransaction = await signTransaction({\n    transaction,\n    wallet,\n    signers,\n    connection,\n  });\n  return await sendSignedTransaction({\n    signedTransaction,\n    connection,\n    sendingMessage,\n    sentMessage,\n    successMessage,\n    timeout,\n  });\n}\n\nexport async function signTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n}: {\n  transaction: Transaction;\n  wallet: WalletAdapter;\n  signers?: Array<Account>;\n  connection: Connection;\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.setSigners(wallet.publicKey, ...signers.map((s) => s.publicKey));\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  return await wallet.signTransaction(transaction);\n}\n\nexport async function signTransactions({\n  transactionsAndSigners,\n  wallet,\n  connection,\n}: {\n  transactionsAndSigners: {\n    transaction: Transaction;\n    signers?: Array<Account>;\n  }[];\n  wallet: WalletAdapter;\n  connection: Connection;\n}) {\n  const blockhash = (await connection.getRecentBlockhash('max')).blockhash;\n  transactionsAndSigners.forEach(({ transaction, signers = [] }) => {\n    transaction.recentBlockhash = blockhash;\n    transaction.setSigners(\n      wallet.publicKey,\n      ...signers.map((s) => s.publicKey),\n    );\n    if (signers?.length > 0) {\n      transaction.partialSign(...signers);\n    }\n  });\n  return await wallet.signAllTransactions(\n    transactionsAndSigners.map(({ transaction }) => transaction),\n  );\n}\n\nexport async function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<string> {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  notify({ message: sendingMessage });\n  const txid: TransactionSignature = await connection.sendRawTransaction(\n    rawTransaction,\n    {\n      skipPreflight: true,\n    },\n  );\n  notify({ message: sentMessage, type: 'success', txid });\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(300);\n    }\n  })();\n  try {\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\n  } catch (err) {\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    let simulateResult: SimulatedTransactionResponse | null = null;\n    try {\n      simulateResult = (\n        await simulateTransaction(connection, signedTransaction, 'single')\n      ).value;\n    } catch (e) {}\n    if (simulateResult && simulateResult.err) {\n      if (simulateResult.logs) {\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\n          const line = simulateResult.logs[i];\n          if (line.startsWith('Program log: ')) {\n            throw new Error(\n              'Transaction failed: ' + line.slice('Program log: '.length),\n            );\n          }\n        }\n      }\n      throw new Error(JSON.stringify(simulateResult.err));\n    }\n    throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n  notify({ message: successMessage, type: 'success', txid });\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result.err);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t): t is Transaction => t !== undefined)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n\nfunction jsonRpcResult(resultDescription: any) {\n  const jsonRpcVersion = struct.literal('2.0');\n  return struct.union([\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'any',\n    }),\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'null?',\n      result: resultDescription,\n    }),\n  ]);\n}\n\nfunction jsonRpcResultAndContext(resultDescription: any) {\n  return jsonRpcResult({\n    context: struct({\n      slot: 'number',\n    }),\n    value: resultDescription,\n  });\n}\n\nconst AccountInfoResult = struct({\n  executable: 'boolean',\n  owner: 'string',\n  lamports: 'number',\n  data: 'any',\n  rentEpoch: 'number?',\n});\n\nexport const GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(\n  struct.array([struct.union(['null', AccountInfoResult])]),\n);\n\nexport async function getMultipleSolanaAccounts(\n  connection: Connection,\n  publicKeys: PublicKey[],\n): Promise<\n  RpcResponseAndContext<{ [key: string]: AccountInfo<Buffer> | null }>\n> {\n  const args = [publicKeys.map((k) => k.toBase58()), { commitment: 'recent' }];\n  // @ts-ignore\n  const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\n  const res = GetMultipleAccountsAndContextRpcResult(unsafeRes);\n  if (res.error) {\n    throw new Error(\n      'failed to get info about accounts ' +\n        publicKeys.map((k) => k.toBase58()).join(', ') +\n        ': ' +\n        res.error.message,\n    );\n  }\n  assert(typeof res.result !== 'undefined');\n  const accounts: Array<{\n    executable: any;\n    owner: PublicKey;\n    lamports: any;\n    data: Buffer;\n  } | null> = [];\n  for (const account of res.result.value) {\n    let value: {\n      executable: any;\n      owner: PublicKey;\n      lamports: any;\n      data: Buffer;\n    } | null = null;\n    if (res.result.value) {\n      const { executable, owner, lamports, data } = account;\n      assert(data[1] === 'base64');\n      value = {\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n        data: Buffer.from(data[0], 'base64'),\n      };\n    }\n    accounts.push(value);\n  }\n  return {\n    context: {\n      slot: res.result.context.slot,\n    },\n    value: Object.fromEntries(\n      accounts.map((account, i) => [publicKeys[i].toBase58(), account]),\n    ),\n  };\n}\n\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\nasync function simulateTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  commitment: Commitment,\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n  // @ts-ignore\n  transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching,\n  );\n\n  const signData = transaction.serializeMessage();\n  // @ts-ignore\n  const wireTransaction = transaction._serialize(signData);\n  const encodedTransaction = wireTransaction.toString('base64');\n  const config: any = { encoding: 'base64', commitment };\n  const args = [encodedTransaction, config];\n\n  // @ts-ignore\n  const res = await connection._rpcRequest('simulateTransaction', args);\n  if (res.error) {\n    throw new Error('failed to simulate transaction: ' + res.error.message);\n  }\n  return res.result;\n}\n","import * as BufferLayout from 'buffer-layout';\nimport bs58 from 'bs58';\nimport { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { TokenAccount } from './types';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport { useAllMarkets, useCustomMarkets, useTokenAccounts } from './markets';\nimport { getMultipleSolanaAccounts } from './send';\nimport { useConnection } from './connection';\nimport { useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport BN from 'bn.js';\nimport { useMemo } from 'react';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(36),\n  BufferLayout.blob(8, 'supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('initialized'),\n  BufferLayout.blob(36),\n]);\n\nexport function parseTokenAccountData(\n  data: Buffer,\n): { mint: PublicKey; owner: PublicKey; amount: number } {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport interface MintInfo {\n  decimals: number;\n  initialized: boolean;\n  supply: BN;\n}\n\nexport function parseTokenMintData(data): MintInfo {\n  let { decimals, initialized, supply } = MINT_LAYOUT.decode(data);\n  return {\n    decimals,\n    initialized: !!initialized,\n    supply: new BN(supply, 10, 'le'),\n  };\n}\n\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(\n  connection: Connection,\n  publicKey: PublicKey,\n): Promise<Array<{ publicKey: PublicKey; accountInfo: AccountInfo<Buffer> }>> {\n  let filters = getOwnedAccountsFilters(publicKey);\n  // @ts-ignore\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length,\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    });\n}\n\nexport async function getTokenAccountInfo(\n  connection: Connection,\n  ownerAddress: PublicKey,\n) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(\n    ({ publicKey, accountInfo }) => {\n      return {\n        pubkey: publicKey,\n        account: accountInfo,\n        effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n      };\n    },\n  );\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n\nexport function useMintToTickers(): { [mint: string]: string } {\n  const { customMarkets } = useCustomMarkets();\n  const [markets] = useAllMarkets();\n  return useMemo(() => {\n    const mintsToTickers = Object.fromEntries(\n      TOKEN_MINTS.map((mint) => [mint.address.toBase58(), mint.name]),\n    );\n    for (let market of markets || []) {\n      const customMarketInfo = customMarkets.find(\n        (customMarket) =>\n          customMarket.address === market.market.address.toBase58(),\n      );\n      if (!(market.market.baseMintAddress.toBase58() in mintsToTickers)) {\n        if (customMarketInfo) {\n          mintsToTickers[market.market.baseMintAddress.toBase58()] =\n            customMarketInfo.baseLabel || `${customMarketInfo.name}_BASE`;\n        }\n      }\n      if (!(market.market.quoteMintAddress.toBase58() in mintsToTickers)) {\n        if (customMarketInfo) {\n          mintsToTickers[market.market.quoteMintAddress.toBase58()] =\n            customMarketInfo.quoteLabel || `${customMarketInfo.name}_QUOTE`;\n        }\n      }\n    }\n    return mintsToTickers;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [markets?.length, customMarkets.length]);\n}\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\nexport function useMintInfos(): [\n  (\n    | {\n        [mintAddress: string]: {\n          decimals: number;\n          initialized: boolean;\n        } | null;\n      }\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const connection = useConnection();\n  const [tokenAccounts] = useTokenAccounts();\n  const [allMarkets] = useAllMarkets();\n\n  const allMints = (tokenAccounts || [])\n    .map((account) => account.effectiveMint)\n    .concat(\n      (allMarkets || []).map((marketInfo) => marketInfo.market.baseMintAddress),\n    )\n    .concat(\n      (allMarkets || []).map(\n        (marketInfo) => marketInfo.market.quoteMintAddress,\n      ),\n    );\n  const uniqueMints = [...new Set(allMints.map((mint) => mint.toBase58()))].map(\n    (stringMint) => new PublicKey(stringMint),\n  );\n\n  const getAllMintInfo = async () => {\n    const mintInfos = await getMultipleSolanaAccounts(connection, uniqueMints);\n    return Object.fromEntries(\n      Object.entries(mintInfos.value).map(([key, accountInfo]) => [\n        key,\n        accountInfo && parseTokenMintData(accountInfo.data),\n      ]),\n    );\n  };\n\n  return useAsyncData(\n    getAllMintInfo,\n    tuple(\n      'getAllMintInfo',\n      connection,\n      (tokenAccounts || []).length,\n      (allMarkets || []).length,\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n","import { BonfidaTrade } from './types';\n\nexport default class BonfidaApi {\n  static URL: string = 'https://serum-api.bonfida.com/';\n\n  static async get(path: string) {\n    try {\n      const response = await fetch(this.URL + path);\n      if (response.ok) {\n        const responseJson = await response.json();\n        return responseJson.success ? responseJson.data : null;\n      }\n    } catch (err) {\n      console.log(`Error fetching from Bonfida API ${path}: ${err}`);\n    }\n    return null;\n  }\n\n  static async getRecentTrades(\n    marketAddress: string,\n  ): Promise<BonfidaTrade[] | null> {\n    return BonfidaApi.get(`trades/address/${marketAddress}`);\n  }\n}\n\nexport const BONFIDA_DATA_FEED = 'https://serum-api.bonfida.com/tv';\n","import {\n  decodeEventQueue,\n  Market,\n  MARKETS,\n  OpenOrders,\n  Orderbook,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n  divideBnToNumber,\n  floorToDecimal,\n  getTokenMultiplierFromDecimals,\n  useLocalStorageState,\n} from './utils';\nimport { refreshCache, useAsyncData } from './fetch-loop';\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport tuple from 'immutable-tuple';\nimport { notify } from './notifications';\nimport BN from 'bn.js';\nimport {\n  getTokenAccountInfo,\n  parseTokenAccountData,\n  useMintInfos,\n} from './tokens';\nimport {\n  Balances,\n  CustomMarketInfo,\n  DeprecatedOpenOrdersBalances,\n  FullMarketInfo,\n  MarketContextValues,\n  MarketInfo,\n  OrderWithMarketAndMarketName,\n  SelectedTokenAccounts,\n  TokenAccount,\n  Trade,\n} from './types';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { Order } from '@project-serum/serum/lib/market';\nimport BonfidaApi from './bonfidaConnector';\nimport { sleep } from './utils';\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nexport const USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\n}\n\nexport function useAllMarkets() {\n  const connection = useConnection();\n  const { customMarkets } = useCustomMarkets();\n\n  const getAllMarkets = async () => {\n    const markets: Array<{\n      market: Market;\n      marketName: string;\n      programId: PublicKey;\n    } | null> = await Promise.all(\n      getMarketInfos(customMarkets).map(async (marketInfo) => {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          return {\n            market,\n            marketName: marketInfo.name,\n            programId: marketInfo.programId,\n          };\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n          return null;\n        }\n      }),\n    );\n    return markets.filter(\n      (m): m is { market: Market; marketName: string; programId: PublicKey } =>\n        !!m,\n    );\n  };\n  return useAsyncData(\n    getAllMarkets,\n    tuple('getAllMarkets', customMarkets.length, connection),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId: PublicKey;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(\n  null,\n);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === 'SRM/USDT' && !deprecated,\n);\n\nexport function getMarketDetails(\n  market: Market | undefined | null,\n  customMarkets: CustomMarketInfo[],\n): FullMarketInfo {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function useCustomMarkets() {\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<\n    CustomMarketInfo[]\n  >('customMarkets', []);\n  return { customMarkets, setCustomMarkets };\n}\n\nexport function MarketProvider({ marketAddress, setMarketAddress, children }) {\n  const { customMarkets, setCustomMarkets } = useCustomMarkets();\n\n  const address = marketAddress && new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo =\n    address && marketInfos.find((market) => market.address.equals(address));\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      if (DEFAULT_MARKET) {\n        setMarketAddress(DEFAULT_MARKET.address.toBase58());\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState<Market | null>();\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      // @ts-ignore\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function getTradePageUrl(marketAddress?: string) {\n  if (!marketAddress) {\n    const saved = localStorage.getItem('marketAddress');\n    if (saved) {\n      marketAddress = JSON.parse(saved);\n    }\n    marketAddress = marketAddress || DEFAULT_MARKET?.address.toBase58() || '';\n  }\n  return `/market/${marketAddress}`;\n}\n\nexport function useSelectedTokenAccounts(): [\n  SelectedTokenAccounts,\n  (newSelectedTokenAccounts: SelectedTokenAccounts) => void,\n] {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useLocalStorageState<SelectedTokenAccounts>('selectedTokenAccounts', {});\n  return [selectedTokenAccounts, setSelectedTokenAccounts];\n}\n\nexport function useMarket() {\n  const context = useContext(MarketContext);\n  if (!context) {\n    throw new Error('Missing market context');\n  }\n  return context;\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades && trades.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades(): Promise<any[] | null> {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useBonfidaTrades() {\n  const { market } = useMarket();\n  const marketAddress = market?.address.toBase58();\n\n  async function getBonfidaTrades() {\n    if (!marketAddress) {\n      return null;\n    }\n    return await BonfidaApi.getRecentTrades(marketAddress);\n  }\n\n  return useAsyncData(\n    getBonfidaTrades,\n    tuple('getBonfidaTrades', marketAddress),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n    false,\n  );\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  // @ts-ignore\n  let bidData = useAccountData(market && market._decoded.bids);\n  // @ts-ignore\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(\n  depth = 20,\n): [{ bids: number[][]; asks: number[][] }, boolean] {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected || !wallet) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts(): [\n  TokenAccount[] | null | undefined,\n  boolean,\n] {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected || !wallet) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(\n  accounts: TokenAccount[] | undefined | null,\n  mint: PublicKey | undefined,\n  selectedPubKey?: string | PublicKey | null,\n) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(\n    ({ effectiveMint, pubkey }) =>\n      mint.equals(effectiveMint) &&\n      (!selectedPubKey ||\n        (typeof selectedPubKey === 'string'\n          ? selectedPubKey\n          : selectedPubKey.toBase58()) === pubkey.toBase58()),\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.quoteMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.baseMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useLocallyStoredFeeDiscountKey(): {\n  storedFeeDiscountKey: PublicKey | undefined;\n  setStoredFeeDiscountKey: (key: string) => void;\n} {\n  const [\n    storedFeeDiscountKey,\n    setStoredFeeDiscountKey,\n  ] = useLocalStorageState<string>(`feeDiscountKey`, undefined);\n  return {\n    storedFeeDiscountKey: storedFeeDiscountKey\n      ? new PublicKey(storedFeeDiscountKey)\n      : undefined,\n    setStoredFeeDiscountKey,\n  };\n}\n\nexport function useFeeDiscountKeys(): [\n  (\n    | {\n        pubkey: PublicKey;\n        feeTier: number;\n        balance: number;\n        mint: PublicKey;\n      }[]\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  const { setStoredFeeDiscountKey } = useLocallyStoredFeeDiscountKey();\n  let getFeeDiscountKeys = async () => {\n    if (!connected || !wallet) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    const feeDiscountKey = await market.findFeeDiscountKeys(\n      connection,\n      wallet.publicKey,\n    );\n    if (feeDiscountKey) {\n      setStoredFeeDiscountKey(feeDiscountKey[0].pubkey.toBase58());\n    }\n    return feeDiscountKey;\n  };\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\n// TODO: Update to use websocket\nexport function useFillsForAllMarkets(limit = 100) {\n  const { connected, wallet } = useWallet();\n\n  const connection = useConnection();\n  const allMarkets = useAllMarkets();\n\n  async function getFillsForAllMarkets() {\n    let fills: Trade[] = [];\n    if (!connected) {\n      return fills;\n    }\n\n    let marketData;\n    for (marketData of allMarkets) {\n      const { market, marketName } = marketData;\n      if (!market || !wallet) {\n        return fills;\n      }\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\n        connection,\n        wallet.publicKey,\n      );\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\n      if (!openOrdersAccount) {\n        return fills;\n      }\n      const eventQueueData = await connection.getAccountInfo(\n        market && market._decoded.eventQueue,\n      );\n      let data = eventQueueData?.data;\n      if (!data) {\n        return fills;\n      }\n      const events = decodeEventQueue(data, limit);\n      const fillsForMarket: Trade[] = events\n        .filter(\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\n        )\n        .map(market.parseFillEvent.bind(market));\n      const ownFillsForMarket = fillsForMarket\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\n        .map((fill) => ({ ...fill, marketName }));\n      fills = fills.concat(ownFillsForMarket);\n    }\n\n    console.log(JSON.stringify(fills));\n    return fills;\n  }\n\n  return useAsyncData(\n    getFillsForAllMarkets,\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersAccounts() {\n  const { wallet, connected } = useWallet();\n  const connection = useConnection();\n  const marketInfos = useMarketInfos();\n  const programIds = [\n    ...new Set(marketInfos.map((info) => info.programId.toBase58())),\n  ].map((stringProgramId) => new PublicKey(stringProgramId));\n\n  const getAllOpenOrdersAccounts = async () => {\n    if (!connected || !wallet) {\n      return [];\n    }\n    return (\n      await Promise.all(\n        programIds.map((programId) =>\n          OpenOrders.findForOwner(connection, wallet.publicKey, programId),\n        ),\n      )\n    ).flat();\n  };\n  return useAsyncData(\n    getAllOpenOrdersAccounts,\n    tuple(\n      'getAllOpenOrdersAccounts',\n      connection,\n      connected,\n      wallet?.publicKey?.toBase58(),\n      marketInfos.length,\n      (programIds || []).length,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersBalances() {\n  const [\n    openOrdersAccounts,\n    loadedOpenOrdersAccounts,\n  ] = useAllOpenOrdersAccounts();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n  const [allMarkets] = useAllMarkets();\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\n    return {};\n  }\n\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((m) => [m.market.address.toBase58(), m]),\n  );\n  const openOrdersBalances: {\n    [mint: string]: { market: PublicKey; free: number; total: number }[];\n  } = {};\n  for (let account of openOrdersAccounts || []) {\n    const marketInfo = marketsByAddress[account.market.toBase58()];\n    const baseMint = marketInfo?.market.baseMintAddress.toBase58();\n    const quoteMint = marketInfo?.market.quoteMintAddress.toBase58();\n    if (!(baseMint in openOrdersBalances)) {\n      openOrdersBalances[baseMint] = [];\n    }\n    if (!(quoteMint in openOrdersBalances)) {\n      openOrdersBalances[quoteMint] = [];\n    }\n\n    const baseMintInfo = mintInfos && mintInfos[baseMint];\n    const baseFree = divideBnToNumber(\n      new BN(account.baseTokenFree),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const baseTotal = divideBnToNumber(\n      new BN(account.baseTokenTotal),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint];\n    const quoteFree = divideBnToNumber(\n      new BN(account.quoteTokenFree),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n    const quoteTotal = divideBnToNumber(\n      new BN(account.quoteTokenTotal),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n\n    openOrdersBalances[baseMint].push({\n      market: account.market,\n      free: baseFree,\n      total: baseTotal,\n    });\n    openOrdersBalances[quoteMint].push({\n      market: account.market,\n      free: quoteFree,\n      total: quoteTotal,\n    });\n  }\n  return openOrdersBalances;\n}\n\nexport const useAllOpenOrders = (): {\n  openOrders: { orders: Order[]; marketAddress: string }[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} => {\n  const connection = useConnection();\n  const { connected, wallet } = useWallet();\n  const [loaded, setLoaded] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n  const [openOrders, setOpenOrders] = useState<\n    { orders: Order[]; marketAddress: string }[] | null | undefined\n  >(null);\n  const [lastRefresh, setLastRefresh] = useState(0);\n\n  const refreshOpenOrders = () => {\n    if (new Date().getTime() - lastRefresh > 10 * 1000) {\n      setRefresh((prev) => prev + 1);\n    } else {\n      console.log('not refreshing');\n    }\n  };\n\n  useEffect(() => {\n    if (connected && wallet) {\n      const getAllOpenOrders = async () => {\n        setLoaded(false);\n        const _openOrders: { orders: Order[]; marketAddress: string }[] = [];\n        const getOpenOrdersForMarket = async (marketInfo: MarketInfo) => {\n          await sleep(1000 * Math.random()); // Try not to hit rate limit\n          try {\n            const market = await Market.load(\n              connection,\n              marketInfo.address,\n              undefined,\n              marketInfo.programId,\n            );\n            const orders = await market.loadOrdersForOwner(\n              connection,\n              wallet?.publicKey,\n              30000,\n            );\n            _openOrders.push({\n              orders: orders,\n              marketAddress: marketInfo.address.toBase58(),\n            });\n          } catch (e) {\n            console.warn(`Error loading open order ${marketInfo.name} - ${e}`);\n          }\n        };\n        await Promise.all(USE_MARKETS.map((m) => getOpenOrdersForMarket(m)));\n        setOpenOrders(_openOrders);\n        setLastRefresh(new Date().getTime());\n        setLoaded(true);\n      };\n      getAllOpenOrders();\n    }\n  }, [connection, connected, wallet, refresh]);\n  return {\n    openOrders: openOrders,\n    loaded: loaded,\n    refreshOpenOrders: refreshOpenOrders,\n  };\n};\n\nexport function useBalances(): Balances[] {\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets(): {\n  mint: string;\n  balance: number;\n}[] {\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected } = useWallet();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n\n  if (!connected || !mintInfosConnected) {\n    return [];\n  }\n\n  let balances: { [mint: string]: number } = {};\n  for (let account of tokenAccounts || []) {\n    if (!account.account) {\n      continue;\n    }\n    let parsedAccount;\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\n      parsedAccount = {\n        mint: WRAPPED_SOL_MINT,\n        owner: account.pubkey,\n        amount: account.account.lamports,\n      };\n    } else {\n      parsedAccount = parseTokenAccountData(account.account.data);\n    }\n    if (!(parsedAccount.mint.toBase58() in balances)) {\n      balances[parsedAccount.mint.toBase58()] = 0;\n    }\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()];\n    const additionalAmount = divideBnToNumber(\n      new BN(parsedAccount.amount),\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0),\n    );\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\n  }\n  return Object.entries(balances).map(([mint, balance]) => {\n    return { mint, balance };\n  });\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      if (!marketInfo) {\n        console.log('Failed loading market');\n        notify({\n          message: 'Error loading market',\n          type: 'error',\n        });\n        return null;\n      }\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts?.filter(\n      (openOrders) => market && openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList &&\n    marketsList\n      .filter((market): market is Market => !!market)\n      .map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected || !wallet) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market: Market | null) => {\n      if (!market) {\n        return null;\n      }\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders)))\n      .filter((x): x is OrderWithMarketAndMarketName[] => !!x)\n      .flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\n    'customMarkets',\n    [],\n  );\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    if (!baseCurrency || !quoteCurrency || !market) {\n      return;\n    }\n    (openOrdersList || []).forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(\n  customMarkets: CustomMarketInfo[],\n): MarketInfo[] {\n  const customMarketsInfo = customMarkets.map((m) => ({\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n    deprecated: false,\n  }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n\nexport function useMarketInfos() {\n  const { customMarkets } = useCustomMarkets();\n  return getMarketInfos(customMarkets);\n}\n\n/**\n * If selling, choose min tick size. If buying choose a price\n * s.t. given the state of the orderbook, the order will spend\n * `cost` cost currency.\n *\n * @param orderbook serum Orderbook object\n * @param cost quantity to spend. Base currency if selling,\n *  quote currency if buying.\n * @param tickSizeDecimals size of price increment of the market\n */\nexport function getMarketOrderPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  if (orderbook.isBids) {\n    return orderbook.market.tickSize;\n  }\n  let spentCost = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  const asks = orderbook.getL2(1000);\n  for ([price, sizeAtLevel] of asks) {\n    costAtLevel = price * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      break;\n    }\n    spentCost += costAtLevel;\n  }\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = sendPrice;\n  }\n  return formattedPrice;\n}\n\nexport function getExpectedFillPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  let spentCost = 0;\n  let avgPrice = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  for ([price, sizeAtLevel] of orderbook.getL2(1000)) {\n    costAtLevel = (orderbook.isBids ? 1 : price) * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      avgPrice += (cost - spentCost) * price;\n      spentCost = cost;\n      break;\n    }\n    avgPrice += costAtLevel * price;\n    spentCost += costAtLevel;\n  }\n  const totalAvgPrice = avgPrice / Math.min(cost, spentCost);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(totalAvgPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = totalAvgPrice;\n  }\n  return formattedPrice;\n}\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef<() => void>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current && savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #1a2029;\n`;\n\nexport default function FloatingElement({\n  style = undefined,\n  children,\n  stretchVertical = false,\n}) {\n  return (\n    <Wrapper\n      style={{\n        height: stretchVertical ? 'calc(100% - 10px)' : undefined,\n        ...style,\n      }}\n    >\n      {children}\n    </Wrapper>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [orderbookData, setOrderbookData] = useState(null);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let sum = (total, [, size], index) =>\n        index < depth ? total + size : total;\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\n\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize,\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    return cumulative;\n  }\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {orderbookData?.asks.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      const id = setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        250,\n      );\n      return () => clearTimeout(id);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(market, openOrders) {\n    try {\n      await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.baseMintAddress,\n        ),\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.quoteMintAddress,\n        ),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n    onSettleSuccess && onSettleSuccess();\n  }\n\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Col, Row, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { OrderWithMarketAndMarketName } from '../../utils/types';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({\n  openOrders,\n  onCancelSuccess,\n  pageSize,\n  loading,\n  marketFilter,\n}: {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  onCancelSuccess?: () => void;\n  pageSize?: number;\n  loading?: boolean;\n  marketFilter?: boolean;\n}) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order?.orderId);\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const marketFilters = [\n    ...new Set((openOrders || []).map((orderInfos) => orderInfos.marketName)),\n  ].map((marketName) => {\n    return { text: marketName, value: marketName };\n  });\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n      filters: marketFilter ? marketFilters : undefined,\n      onFilter: (value, record) => record.marketName.indexOf(value) === 0,\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n      sorter: (a, b) => {\n        if (a.side === b.side) {\n          return 0;\n        } else if (a.side === 'buy') {\n          return 1;\n        } else {\n          return -1;\n        }\n      },\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n      sorter: (a, b) => b.size - a.size,\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      sorter: (a, b) => b.price - a.price,\n      showSorterTooltip: false,\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) => ({\n    ...order,\n    key: order.orderId,\n  }));\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={pageSize ? pageSize : 5}\n          loading={loading !== undefined && loading}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No (M)SRM accounts\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Holding SRM or MSRM makes you eligible for fee discounts:\n          </Typography>\n          <FeeScheduleTable />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  const { market } = useMarket();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\n      <Typography>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          Make sure to go to Balances and click Settle to send out your funds.\n        </Paragraph>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          To fund your wallet, <a href=\"https://www.sollet.io\">sollet.io</a>.\n          You can get SOL from FTX, Binance, BitMax, and others. You can get\n          other tokens from FTX.{' '}\n        </Paragraph>\n      </Typography>\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n        {market && market.supportsSrmFeeDiscounts ? (\n          <TabPane tab=\"Fee discounts\" key=\"fees\">\n            <FeesTable />\n          </TabPane>\n        ) : null}\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, baseOrQuote }) {\n  const { market, baseCurrency, quoteCurrency } = useMarket();\n\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let coinMint;\n  let account;\n  let depositCoin;\n  if (baseOrQuote === 'base') {\n    coinMint = market?.baseMintAddress;\n    account = baseCurrencyAccount;\n    depositCoin = baseCurrency;\n  } else if (baseOrQuote === 'quote') {\n    coinMint = market?.quoteMintAddress;\n    account = quoteCurrencyAccount;\n    depositCoin = quoteCurrency;\n  } else {\n    account = null;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { TokenAccount } from '../utils/types';\nimport { useSelectedTokenAccounts } from '../utils/markets';\nimport { Button, Col, Select, Typography } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { abbreviateAddress } from '../utils/utils';\nimport { notify } from '../utils/notifications';\n\nexport default function StandaloneTokenAccountsSelect({\n  accounts,\n  mint,\n  label,\n}: {\n  accounts: TokenAccount[] | null | undefined;\n  mint: string | undefined;\n  label?: boolean;\n}) {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useSelectedTokenAccounts();\n\n  let selectedValue: string | undefined;\n  if (mint && mint in selectedTokenAccounts) {\n    selectedValue = selectedTokenAccounts[mint];\n  } else if (accounts && accounts?.length > 0) {\n    selectedValue = accounts[0].pubkey.toBase58();\n  } else {\n    selectedValue = undefined;\n  }\n\n  const setTokenAccountForCoin = (value) => {\n    if (!mint) {\n      notify({\n        message: 'Error selecting token account',\n        description: 'Mint is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    const newSelectedTokenAccounts = { ...selectedTokenAccounts };\n    newSelectedTokenAccounts[mint] = value;\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\n  };\n\n  return (\n    <React.Fragment>\n      {label && <Col span={8}>Token account:</Col>}\n      <Col span={label ? 13 : 21}>\n        <Select\n          style={{ width: '100%' }}\n          value={selectedValue}\n          onSelect={setTokenAccountForCoin}\n        >\n          {accounts?.map((account) => (\n            <Select.Option\n              key={account.pubkey.toBase58()}\n              value={account.pubkey.toBase58()}\n            >\n              <Typography.Text code>\n                {label\n                  ? abbreviateAddress(account.pubkey, 8)\n                  : account.pubkey.toBase58()}\n              </Typography.Text>\n            </Select.Option>\n          ))}\n        </Select>\n      </Col>\n      <Col span={2} offset={1}>\n        <Button\n          shape=\"round\"\n          icon={<CopyOutlined />}\n          size={'small'}\n          onClick={() =>\n            selectedValue && navigator.clipboard.writeText(selectedValue)\n          }\n        />\n      </Col>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({\n  title,\n  address,\n  shorten = false,\n}: {\n  title?: undefined | any;\n  address: string;\n  shorten?: boolean;\n}) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + address}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        style={{ cursor: 'pointer' }}\n      >\n        {shorten ? `${address.slice(0, 4)}...${address.slice(-4)}` : address}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Col, Divider, Popover, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useTokenAccounts,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\nimport { notify } from '../utils/notifications';\nimport { Balances } from '../utils/types';\nimport StandaloneTokenAccountsSelect from './StandaloneTokenAccountSelect';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet, connected } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const [tokenAccounts] = useTokenAccounts();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    if (!wallet) {\n      notify({\n        message: 'Wallet not connected',\n        description: 'wallet is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    if (!market) {\n      notify({\n        message: 'Error settling funds',\n        description: 'market is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!openOrdersAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!baseCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!quoteCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  const formattedBalances: [\n    string | undefined,\n    Balances | undefined,\n    string,\n    string | undefined,\n  ][] = [\n    [\n      baseCurrency,\n      baseCurrencyBalances,\n      'base',\n      market?.baseMintAddress.toBase58(),\n    ],\n    [\n      quoteCurrency,\n      quoteCurrencyBalances,\n      'quote',\n      market?.quoteMintAddress.toBase58(),\n    ],\n  ];\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {formattedBalances.map(\n        ([currency, balances, baseOrQuote, mint], index) => (\n          <React.Fragment key={index}>\n            <Divider style={{ borderColor: 'white' }}>\n              {currency}{' '}\n              {mint && (\n                <Popover\n                  content={<LinkAddress address={mint} />}\n                  placement=\"bottomRight\"\n                  title=\"Token mint\"\n                  trigger=\"hover\"\n                >\n                  <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n                </Popover>\n              )}\n            </Divider>\n            {connected && (\n              <RowBox align=\"middle\" style={{ paddingBottom: 10 }}>\n                <StandaloneTokenAccountsSelect\n                  accounts={tokenAccounts?.filter(\n                    (account) => account.effectiveMint.toBase58() === mint,\n                  )}\n                  mint={mint}\n                  label\n                />\n              </RowBox>\n            )}\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Wallet balance:</Col>\n              <Col>{balances && balances.wallet}</Col>\n            </RowBox>\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Unsettled balance:</Col>\n              <Col>{balances && balances.unsettled}</Col>\n            </RowBox>\n            <RowBox align=\"middle\" justify=\"space-around\">\n              <Col style={{ width: 150 }}>\n                <ActionButton\n                  block\n                  size=\"large\"\n                  onClick={() => setBaseOrQuote(baseOrQuote)}\n                >\n                  Deposit\n                </ActionButton>\n              </Col>\n              <Col style={{ width: 150 }}>\n                <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                  Settle\n                </ActionButton>\n              </Col>\n            </RowBox>\n            <Tip>\n              All deposits go to your{' '}\n              <Link external to={providerUrl}>\n                {providerName}\n              </Link>{' '}\n              wallet\n            </Tip>\n          </React.Fragment>\n        ),\n      )}\n      <DepositDialog\n        baseOrQuote={baseOrQuote}\n        onClose={() => setBaseOrQuote('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  useSelectedBaseCurrencyBalances,\n  useSelectedQuoteCurrencyBalances,\n  useMarket,\n  useMarkPrice,\n  useSelectedOpenOrdersAccount,\n  useSelectedBaseCurrencyAccount,\n  useSelectedQuoteCurrencyAccount,\n  useFeeDiscountKeys,\n  useLocallyStoredFeeDiscountKey,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport {\n  getDecimalCount,\n  roundToDecimal,\n  floorToDecimal,\n} from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { getUnixTs, placeOrder } from '../utils/send';\nimport { SwitchChangeEventHandler } from 'antd/es/switch';\nimport { refreshCache } from '../utils/fetch-loop';\nimport tuple from 'immutable-tuple';\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({\n  style,\n  setChangeOrderRef,\n}: {\n  style?: any;\n  setChangeOrderRef?: (\n    ref: ({ size, price }: { size?: number; price?: number }) => void,\n  ) => void;\n}) {\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet, connected } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n  useFeeDiscountKeys();\n  const {\n    storedFeeDiscountKey: feeDiscountKey,\n  } = useLocallyStoredFeeDiscountKey();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote =\n    openOrdersAccount && market\n      ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n      : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  const publicKey = wallet?.publicKey;\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  useEffect(() => {\n    const warmUpCache = async () => {\n      try {\n        if (!wallet || !publicKey || !market) {\n          console.log(`Skipping refreshing accounts`);\n          return;\n        }\n        const startTime = getUnixTs();\n        console.log(`Refreshing accounts for ${market.address}`);\n        await market?.findOpenOrdersAccountsForOwner(sendConnection, publicKey);\n        await market?.findBestFeeDiscountKey(sendConnection, publicKey);\n        const endTime = getUnixTs();\n        console.log(\n          `Finished refreshing accounts for ${market.address} after ${\n            endTime - startTime\n          }`,\n        );\n      } catch (e) {\n        console.log(`Encountered error when refreshing trading accounts: ${e}`);\n      }\n    };\n    warmUpCache();\n    const id = setInterval(warmUpCache, 30_000);\n    return () => clearInterval(id);\n  }, [market, sendConnection, wallet, publicKey]);\n\n  const onSetBaseSize = (baseSize: number | undefined) => {\n    setBaseSize(baseSize);\n    if (!baseSize) {\n      setQuoteSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setQuoteSize(undefined);\n      return;\n    }\n    const rawQuoteSize = baseSize * usePrice;\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\n    setQuoteSize(quoteSize);\n    if (!quoteSize) {\n      setBaseSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setBaseSize(undefined);\n      return;\n    }\n    const rawBaseSize = quoteSize / usePrice;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({\n    size,\n    price,\n  }: {\n    size?: number;\n    price?: number;\n  }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize =\n      side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min(((baseSize || 0) / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice: number | string = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(\n        typeof formattedMarkPrice === 'number'\n          ? formattedMarkPrice\n          : parseFloat(formattedMarkPrice),\n      );\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice || 1)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    if (!price) {\n      console.warn('Missing price');\n      notify({\n        message: 'Missing price',\n        type: 'error',\n      });\n      return;\n    } else if (!baseSize) {\n      console.warn('Missing size');\n      notify({\n        message: 'Missing size',\n        type: 'error',\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await placeOrder({\n        side,\n        price,\n        size: baseSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey,\n      });\n      refreshCache(tuple('getTokenAccounts', wallet, connected));\n      setPrice(undefined);\n      onSetBaseSize(undefined);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <Input\n          style={{ textAlign: 'right', paddingBottom: 8 }}\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\n          suffix={\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n          }\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(parseFloat(e.target.value))}\n        />\n        <Input.Group compact style={{ paddingBottom: 8 }}>\n          <Input\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n            }\n            value={baseSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetBaseSize(parseFloat(e.target.value))}\n          />\n          <Input\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\n                {quoteCurrency}\n              </span>\n            }\n            value={quoteSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetQuoteSize(parseFloat(e.target.value))}\n          />\n        </Input.Group>\n        <Slider\n          value={sizeFraction}\n          tipFormatter={(value) => `${value}%`}\n          marks={sliderMarks}\n          onChange={onSliderChange}\n        />\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useBonfidaTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport { BonfidaTrade } from '../utils/types';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const [trades, loaded] = useBonfidaTrades();\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : {\n              marginTop: '10px',\n              minHeight: '270px',\n              maxHeight: 'calc(100vh - 700px)',\n            }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={8}>Price ({quoteCurrency}) </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Time\n        </Col>\n      </SizeTitle>\n      {!!trades && loaded && (\n        <div\n          style={{\n            marginRight: '-20px',\n            paddingRight: '5px',\n            overflowY: 'scroll',\n            maxHeight: smallScreen\n              ? 'calc(100% - 75px)'\n              : 'calc(100vh - 800px)',\n          }}\n        >\n          {trades.map((trade: BonfidaTrade, i: number) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col\n                span={8}\n                style={{\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right', color: '#434a59' }}>\n                {trade.time && new Date(trade.time).toLocaleTimeString()}\n              </Col>\n            </Row>\n          ))}\n        </div>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate to Serum DEX V3 markets\n      </Title>\n      <Typography>\n        Markets on older versions of the DEX are now deprecated. To migrate over\n        to the new markets, please cancel your orders and settle your funds on\n        old markets.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Col, Input, Modal, Row, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nexport default function CustomMarketDialog({\n  visible,\n  onAddCustomMarket,\n  onClose,\n}) {\n  const connection = useConnection();\n\n  const [marketId, setMarketId] = useState('');\n\n  const [marketLabel, setMarketLabel] = useState('');\n  const [baseLabel, setBaseLabel] = useState('');\n  const [quoteLabel, setQuoteLabel] = useState('');\n\n  const [market, setMarket] = useState(null);\n  const [loadingMarket, setLoadingMarket] = useState(false);\n\n  const wellFormedMarketId = isValidPublicKey(marketId);\n\n  const [marketAccountInfo] = useAccountInfo(\n    wellFormedMarketId ? new PublicKey(marketId) : null,\n  );\n  const programId = marketAccountInfo\n    ? marketAccountInfo.owner.toBase58()\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\n\n  useEffect(() => {\n    if (!wellFormedMarketId || !programId) {\n      resetLabels();\n      return;\n    }\n    setLoadingMarket(true);\n    Market.load(\n      connection,\n      new PublicKey(marketId),\n      {},\n      new PublicKey(programId),\n    )\n      .then((market) => {\n        setMarket(market);\n      })\n      .catch(() => {\n        resetLabels();\n        setMarket(null);\n      })\n      .finally(() => setLoadingMarket(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, marketId, programId]);\n\n  const resetLabels = () => {\n    setMarketLabel(null);\n    setBaseLabel(null);\n    setQuoteLabel(null);\n  };\n\n  const knownMarket = MARKETS.find(\n    (m) =>\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\n  );\n  const knownProgram = MARKETS.find(\n    (m) => m.programId.toBase58() === programId,\n  );\n  const knownBaseCurrency =\n    market?.baseMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n      ?.name;\n\n  const knownQuoteCurrency =\n    market?.quoteMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n      ?.name;\n\n  const canSubmit =\n    !loadingMarket &&\n    !!market &&\n    market.publicKey.toBase58() === marketId &&\n    marketId &&\n    programId &&\n    marketLabel &&\n    (knownBaseCurrency || baseLabel) &&\n    (knownQuoteCurrency || quoteLabel) &&\n    wellFormedMarketId;\n\n  const onSubmit = () => {\n    if (!canSubmit) {\n      notify({\n        message: 'Please fill in all fields with valid values',\n        type: 'error',\n      });\n      return;\n    }\n\n    let params = {\n      address: marketId,\n      programId,\n      name: marketLabel,\n    };\n    if (!knownBaseCurrency) {\n      params.baseLabel = baseLabel;\n    }\n    if (!knownQuoteCurrency) {\n      params.quoteLabel = quoteLabel;\n    }\n    onAddCustomMarket(params);\n    onDoClose();\n  };\n\n  const onDoClose = () => {\n    resetLabels();\n    setMarket(null);\n    setMarketId(null);\n    onClose();\n  };\n\n  return (\n    <Modal\n      title={'Add custom market'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <div>\n        {wellFormedMarketId ? (\n          <>\n            {!market && !loadingMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Not a valid market</Text>\n              </Row>\n            )}\n            {market && knownMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\n              </Row>\n            )}\n            {market && !knownProgram && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\n              </Row>\n            )}\n            {market && knownProgram && knownProgram.deprecated && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\n              </Row>\n            )}\n          </>\n        ) : (\n          <>\n            {marketId && !wellFormedMarketId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid market ID</Text>\n              </Row>\n            )}\n          </>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Id\"\n              value={marketId}\n              onChange={(e) => setMarketId(e.target.value)}\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\n            />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Label\"\n              disabled={!market}\n              value={marketLabel}\n              onChange={(e) => setMarketLabel(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\n          <Col span={12}>\n            <Input\n              placeholder=\"Base label\"\n              disabled={!market || knownBaseCurrency}\n              value={knownBaseCurrency || baseLabel}\n              onChange={(e) => setBaseLabel(e.target.value)}\n            />\n            {market && !knownBaseCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n          <Col span={12}>\n            <Input\n              placeholder=\"Quote label\"\n              disabled={!market || knownQuoteCurrency}\n              value={knownQuoteCurrency || quoteLabel}\n              onChange={(e) => setQuoteLabel(e.target.value)}\n            />\n            {market && !knownQuoteCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Popover, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  getMarketInfos,\n  getTradePageUrl,\n  MarketProvider,\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport {\n  DeleteOutlined,\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport CustomMarketDialog from '../components/CustomMarketDialog';\nimport { notify } from '../utils/notifications';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst { Option, OptGroup } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const { marketAddress } = useParams();\n  useEffect(() => {\n    if (marketAddress) {\n      localStorage.setItem('marketAddress', JSON.stringify(marketAddress));\n    }\n  }, [marketAddress]);\n  const history = useHistory();\n  function setMarketAddress(address) {\n    history.push(getTradePageUrl(address));\n  }\n\n  return (\n    <MarketProvider\n      marketAddress={marketAddress}\n      setMarketAddress={setMarketAddress}\n    >\n      <TradePageInner />\n    </MarketProvider>\n  );\n}\n\nfunction TradePageInner() {\n  const {\n    market,\n    marketName,\n    customMarkets,\n    setCustomMarkets,\n    setMarketAddress,\n  } = useMarket();\n  const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} — Serum` : 'Serum';\n  }, [marketName]);\n\n  const changeOrderRef = useRef<\n    ({ size, price }: { size?: number; price?: number }) => void\n  >();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n  const component = (() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  })();\n\n  const onAddCustomMarket = (customMarket) => {\n    const marketInfo = getMarketInfos(customMarkets).some(\n      (m) => m.address.toBase58() === customMarket.address,\n    );\n    if (marketInfo) {\n      notify({\n        message: `A market with the given ID already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomMarkets = [...customMarkets, customMarket];\n    setCustomMarkets(newCustomMarkets);\n    setMarketAddress(customMarket.address);\n  };\n\n  const onDeleteCustomMarket = (address) => {\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\n    setCustomMarkets(newCustomMarkets);\n  };\n\n  return (\n    <>\n      <CustomMarketDialog\n        visible={addMarketVisible}\n        onClose={() => setAddMarketVisible(false)}\n        onAddCustomMarket={onAddCustomMarket}\n      />\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector\n              markets={markets}\n              setHandleDeprecated={setHandleDeprecated}\n              placeholder={'Select market'}\n              customMarkets={customMarkets}\n              onDeleteCustomMarket={onDeleteCustomMarket}\n            />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          <Col>\n            <PlusCircleOutlined\n              style={{ color: '#2abdd2' }}\n              onClick={() => setAddMarketVisible(true)}\n            />\n          </Col>\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on old markets! Please go through\n                  them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {component}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({\n  markets,\n  placeholder,\n  setHandleDeprecated,\n  customMarkets,\n  onDeleteCustomMarket,\n}) {\n  const { market, setMarketAddress } = useMarket();\n\n  const onSetMarketAddress = (marketAddress) => {\n    setHandleDeprecated(false);\n    setMarketAddress(marketAddress);\n  };\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  const selectedMarket = getMarketInfos(customMarkets)\n    .find(\n      (proposedMarket) =>\n        market?.address && proposedMarket.address.equals(market.address),\n    )\n    ?.address?.toBase58();\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      style={{ width: 200 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={onSetMarketAddress}\n      listHeight={400}\n      value={selectedMarket}\n      filterOption={(input, option) =>\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {customMarkets && customMarkets.length > 0 && (\n        <OptGroup label=\"Custom\">\n          {customMarkets.map(({ address, name }, i) => (\n            <Option\n              value={address}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              <Row>\n                <Col flex=\"auto\">{name}</Col>\n                {selectedMarket !== address && (\n                  <Col>\n                    <DeleteOutlined\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\n                      }}\n                    />\n                  </Col>\n                )}\n              </Row>\n            </Option>\n          ))}\n        </OptGroup>\n      )}\n      <OptGroup label=\"Markets\">\n        {markets\n          .sort((a, b) =>\n            extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n              ? -1\n              : extractQuote(a.name) !== 'USDT' &&\n                extractQuote(b.name) === 'USDT'\n              ? 1\n              : 0,\n          )\n          .sort((a, b) =>\n            extractBase(a.name) < extractBase(b.name)\n              ? -1\n              : extractBase(a.name) > extractBase(b.name)\n              ? 1\n              : 0,\n          )\n          .map(({ address, name, deprecated }, i) => (\n            <Option\n              value={address.toBase58()}\n              key={address}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              {name} {deprecated ? ' (Deprecated)' : null}\n            </Option>\n          ))}\n      </OptGroup>\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '900px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n        <UserInfoTable />\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row\n        style={{\n          height: '900px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={13}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row\n        style={{\n          height: '500px',\n        }}\n      >\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { Dropdown, Menu } from 'antd';\nimport { useWallet } from '../utils/wallet';\nimport LinkAddress from './LinkAddress';\n\nexport default function WalletConnect() {\n  const { connected, wallet, select, connect, disconnect } = useWallet();\n  const publicKey = (connected && wallet?.publicKey?.toBase58()) || '';\n\n  const menu = (\n    <Menu>\n      {connected && <LinkAddress shorten={true} address={publicKey} />}\n      <Menu.Item key=\"3\" onClick={select}>\n        Change Wallet\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Dropdown.Button onClick={connected ? disconnect : connect} overlay={menu}>\n      {connected ? 'Disconnect' : 'Connect'}\n    </Dropdown.Button>\n  );\n}\n","import React from 'react';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport {\n  useAllMarkets,\n  useAllOpenOrders,\n  useMarketInfos,\n} from '../utils/markets';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\nimport { Button, Row } from 'antd';\nimport { OrderWithMarketAndMarketName } from '../utils/types';\nimport { useWallet } from '../utils/wallet';\nimport WalletConnect from '../components/WalletConnect';\n\nexport default function OpenOrdersPage() {\n  const { connected } = useWallet();\n  const { openOrders, loaded, refreshOpenOrders } = useAllOpenOrders();\n  let marketInfos = useMarketInfos();\n  let marketAddressesToNames = Object.fromEntries(\n    marketInfos.map((info) => [info.address.toBase58(), info.name]),\n  );\n  let [allMarkets] = useAllMarkets();\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((marketInfo) => [\n      marketInfo.market.address.toBase58(),\n      marketInfo.market,\n    ]),\n  );\n\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || [])\n    .map((orderInfos) =>\n      orderInfos.orders.map((order) => {\n        return {\n          marketName: marketAddressesToNames[orderInfos.marketAddress],\n          market: marketsByAddress[orderInfos.marketAddress],\n          ...order,\n        };\n      }),\n    )\n    .flat();\n\n  if (!connected) {\n    return (\n      <Row\n        justify=\"center\"\n        style={{\n          marginTop: '10%',\n        }}\n      >\n        <WalletConnect />\n      </Row>\n    );\n  }\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Button onClick={refreshOpenOrders} loading={!loaded}>\n        Refresh\n      </Button>\n      <OpenOrderTable\n        openOrders={dataSource}\n        pageSize={25}\n        loading={!loaded}\n        onCancelSuccess={refreshOpenOrders}\n        marketFilter\n      />\n    </FloatingElement>\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\nimport { Button, Row } from 'antd';\nimport { settleAllFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport {\n  useAllMarkets,\n  useSelectedTokenAccounts,\n  useTokenAccounts,\n} from '../../utils/markets';\nimport StandaloneTokenAccountsSelect from '../StandaloneTokenAccountSelect';\nimport { abbreviateAddress } from '../../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\n\nexport default function WalletBalancesTable({\n  walletBalances,\n}: {\n  walletBalances: {\n    coin: string;\n    mint: string;\n    walletBalance: number;\n    openOrdersFree: number;\n    openOrdersTotal: number;\n  }[];\n}) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const [tokenAccounts, tokenAccountsConnected] = useTokenAccounts();\n  const [allMarkets, allMarketsConnected] = useAllMarkets();\n  const [settlingFunds, setSettlingFunds] = useState(false);\n\n  async function onSettleFunds() {\n    setSettlingFunds(true);\n    try {\n      if (!wallet) {\n        notify({\n          message: 'Wallet not connected',\n          description: 'Wallet not connected',\n          type: 'error',\n        });\n        return;\n      }\n\n      if (!tokenAccounts || !tokenAccountsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'TokenAccounts not connected',\n          type: 'error',\n        });\n        return;\n      }\n      if (!allMarkets || !allMarketsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'Markets not connected',\n          type: 'error',\n        });\n        return;\n      }\n      await settleAllFunds({\n        connection,\n        tokenAccounts,\n        selectedTokenAccounts,\n        wallet,\n        markets: allMarkets.map((marketInfo) => marketInfo.market),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSettlingFunds(false);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Coin',\n      key: 'coin',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\">\n          <a\n            href={`https://explorer.solana.com/address/${walletBalance.mint}`}\n            target={'_blank'}\n            rel=\"noopener noreferrer\"\n          >\n            {walletBalance.coin ||\n              abbreviateAddress(new PublicKey(walletBalance.mint))}\n          </a>\n        </Row>\n      ),\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'walletBalance',\n      key: 'walletBalance',\n      width: '20%',\n    },\n    {\n      title: 'Open orders total balances',\n      dataIndex: 'openOrdersTotal',\n      key: 'openOrdersTotal',\n      width: '20%',\n    },\n    {\n      title: 'Unsettled balances',\n      dataIndex: 'openOrdersFree',\n      key: 'openOrdersFree',\n      width: '20%',\n    },\n    {\n      title: 'Selected token account',\n      key: 'selectTokenAccount',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\" style={{ width: '430px' }}>\n          <StandaloneTokenAccountsSelect\n            accounts={tokenAccounts?.filter(\n              (t) => t.effectiveMint.toBase58() === walletBalance.mint,\n            )}\n            mint={walletBalance.mint}\n          />\n        </Row>\n      ),\n    },\n  ];\n  return (\n    <React.Fragment>\n      <DataTable\n        emptyLabel=\"No balances\"\n        dataSource={walletBalances}\n        columns={columns}\n        pagination={false}\n      />\n      {connected && (\n        <Button onClick={onSettleFunds} loading={settlingFunds}>\n          Settle all funds\n        </Button>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useAllOpenOrdersBalances,\n  useWalletBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport { useMintToTickers } from '../utils/tokens';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const walletBalances = useWalletBalancesForAllMarkets();\n  const mintToTickers = useMintToTickers();\n  const openOrdersBalances = useAllOpenOrdersBalances();\n\n  const data = (walletBalances || []).map((balance) => {\n    const balances = {\n      coin: mintToTickers[balance.mint],\n      mint: balance.mint,\n      walletBalance: balance.balance,\n      openOrdersFree: 0,\n      openOrdersTotal: 0,\n    };\n    for (let openOrdersAccount of openOrdersBalances[balance.mint] || []) {\n      balances['openOrdersFree'] += openOrdersAccount.free;\n      balances['openOrdersTotal'] += openOrdersAccount.total;\n    }\n    return balances;\n  });\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable walletBalances={data} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Input, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { Orderbook } from '@project-serum/serum';\nimport {\n  getExpectedFillPrice,\n  getMarketDetails,\n  getMarketInfos,\n  getMarketOrderPrice,\n  getSelectedTokenAccountForMint,\n  MarketProvider,\n  useBalances,\n  useCustomMarkets,\n  useLocallyStoredFeeDiscountKey,\n  useMarket,\n  useTokenAccounts,\n} from '../utils/markets';\nimport { notify } from '../utils/notifications';\nimport { useWallet } from '../utils/wallet';\nimport { useConnection, useSendConnection } from '../utils/connection';\nimport { placeOrder } from '../utils/send';\nimport { floorToDecimal, getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport WalletConnect from './WalletConnect';\nimport { SwapOutlined } from '@ant-design/icons';\nimport { CustomMarketInfo } from '../utils/types';\nimport { WalletAdapter } from '../wallet-adapters';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nconst ConvertButton = styled(Button)`\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nexport default function ConvertForm() {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const marketInfos = getMarketInfos(customMarkets);\n  const [marketAddress, setMarketAddress] = useState<string | null>(null);\n\n  const [fromToken, setFromToken] = useState<string | undefined>(undefined);\n  const [toToken, setToToken] = useState<string | undefined>(undefined);\n  const [size, setSize] = useState<number | undefined>(undefined);\n\n  const marketInfosbyName = Object.fromEntries(\n    marketInfos.map((market) => [market.name, market]),\n  );\n\n  const tokenConvertMap: Map<string, Set<string>> = new Map();\n  Object.keys(marketInfosbyName).forEach((market) => {\n    let [base, quote] = market.split('/');\n    !tokenConvertMap.has(base)\n      ? tokenConvertMap.set(base, new Set([quote]))\n      : tokenConvertMap.set(\n          base,\n          new Set([...(tokenConvertMap.get(base) || []), quote]),\n        );\n    !tokenConvertMap.has(quote)\n      ? tokenConvertMap.set(quote, new Set([base]))\n      : tokenConvertMap.set(\n          quote,\n          new Set([...(tokenConvertMap.get(quote) || []), base]),\n        );\n  });\n\n  const setMarket = (toToken) => {\n    const marketInfo = marketInfos\n      .filter((marketInfo) => !marketInfo.deprecated)\n      .find(\n        (marketInfo) =>\n          marketInfo.name === `${fromToken}/${toToken}` ||\n          marketInfo.name === `${toToken}/${fromToken}`,\n      );\n    if (!marketInfo) {\n      console.warn(\n        `Could not find market info for market names ${fromToken}/${toToken} or ${toToken}/${fromToken}`,\n      );\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    setMarketAddress(marketInfo.address.toBase58());\n    setToToken(toToken);\n  };\n\n  return (\n    <FloatingElement style={{ maxWidth: 500 }}>\n      <Title level={3}>Convert</Title>\n      {!connected && (\n        <Row justify=\"center\">\n          <Col>\n            <WalletConnect />\n          </Col>\n        </Row>\n      )}\n      {tokenConvertMap && connected && (\n        <>\n          <Row style={{ marginBottom: 8 }}>\n            <Col>\n              <Select\n                style={{ minWidth: 300 }}\n                placeholder=\"Select a token\"\n                value={fromToken}\n                onChange={(token) => {\n                  setFromToken(token);\n                  setToToken(undefined);\n                }}\n              >\n                {Array.from(tokenConvertMap.keys()).map((token) => (\n                  <Option value={token} key={token}>\n                    {token}\n                  </Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n          {fromToken && (\n            <Row style={{ marginBottom: 8 }}>\n              <Col>\n                <Select\n                  style={{ minWidth: 300 }}\n                  value={toToken}\n                  onChange={setMarket}\n                >\n                  {[...(tokenConvertMap.get(fromToken) || [])].map((token) => (\n                    <Option value={token} key={token}>\n                      {token}\n                    </Option>\n                  ))}\n                </Select>\n              </Col>\n            </Row>\n          )}\n          {fromToken && toToken && (\n            <MarketProvider\n              marketAddress={marketAddress}\n              setMarketAddress={setMarketAddress}\n            >\n              <ConvertFormSubmit\n                size={size}\n                setSize={setSize}\n                fromToken={fromToken}\n                toToken={toToken}\n                wallet={wallet}\n                customMarkets={customMarkets}\n              />\n            </MarketProvider>\n          )}\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n\nfunction ConvertFormSubmit({\n  size,\n  setSize,\n  fromToken,\n  toToken,\n  wallet,\n  customMarkets,\n}: {\n  size: number | null | undefined;\n  setSize: (newSize: number | undefined) => void;\n  fromToken: string;\n  toToken: string;\n  wallet?: WalletAdapter;\n  customMarkets: CustomMarketInfo[];\n}) {\n  const { market } = useMarket();\n  const [accounts] = useTokenAccounts();\n  const balances = useBalances();\n  const [fromAmount, setFromAmount] = useState<number | undefined>();\n  const [toAmount, setToAmount] = useState<number | undefined>();\n  const {\n    storedFeeDiscountKey: feeDiscountKey,\n  } = useLocallyStoredFeeDiscountKey();\n\n  const connection = useConnection();\n  const sendConnection = useSendConnection();\n\n  const [isConverting, setIsConverting] = useState(false);\n\n  const isFromTokenBaseOfMarket = (market) => {\n    const { marketName } = getMarketDetails(market, customMarkets);\n    if (!marketName) {\n      throw Error(\n        'Cannot determine if coin is quote or base because marketName is missing',\n      );\n    }\n    const [base] = marketName.split('/');\n    return fromToken === base;\n  };\n\n  const onConvert = async () => {\n    if (!market) {\n      console.warn('Market is null when attempting convert.');\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    // get accounts\n    const baseCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.baseMintAddress,\n    );\n    const quoteCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.quoteMintAddress,\n    );\n\n    // get approximate price\n    let side;\n    try {\n      side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n\n    const sidedOrderbookAccount =\n      // @ts-ignore\n      side === 'buy' ? market._decoded.asks : market._decoded.bids;\n    const orderbookData = await connection.getAccountInfo(\n      sidedOrderbookAccount,\n    );\n    if (!orderbookData?.data) {\n      notify({ message: 'Invalid orderbook data', type: 'error' });\n      return;\n    }\n    const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n    const [bbo] =\n      decodedOrderbookData &&\n      decodedOrderbookData.getL2(1).map(([price]) => price);\n    if (!bbo) {\n      notify({ message: 'No best price found', type: 'error' });\n      return;\n    }\n    if (!size) {\n      notify({ message: 'Size not specified', type: 'error' });\n      return;\n    }\n\n    const tickSizeDecimals = getDecimalCount(market.tickSize);\n    const parsedPrice = getMarketOrderPrice(\n      decodedOrderbookData,\n      size,\n      tickSizeDecimals,\n    );\n\n    // round size\n    const sizeDecimalCount = getDecimalCount(market.minOrderSize);\n    const nativeSize = side === 'sell' ? size : size / parsedPrice;\n    const parsedSize = floorToDecimal(nativeSize, sizeDecimalCount);\n\n    setIsConverting(true);\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: 'ioc',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey,\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  const getPrice = async () => {\n    try {\n      const side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n      const sidedOrderbookAccount =\n        // @ts-ignore\n        side === 'buy' ? market._decoded.asks : market._decoded.bids;\n      const orderbookData = await connection.getAccountInfo(\n        sidedOrderbookAccount,\n      );\n      if (!orderbookData?.data || !market) {\n        return [null, null];\n      }\n      const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n      const [bbo] =\n        decodedOrderbookData &&\n        decodedOrderbookData.getL2(1).map(([price]) => price);\n      if (!bbo || !size) {\n        return [null, null];\n      }\n      const tickSizeDecimals = getDecimalCount(market.tickSize);\n      const expectedPrice = getExpectedFillPrice(\n        decodedOrderbookData,\n        size,\n        tickSizeDecimals,\n      );\n      if (side === 'buy') {\n        return [expectedPrice.toFixed(6), 1];\n      } else {\n        return [1, expectedPrice.toFixed(6)];\n      }\n    } catch (e) {\n      console.log(`Got error ${e}`);\n      return [null, null];\n    }\n  };\n\n  useEffect(\n    () => {\n      getPrice().then(([fromAmount, toAmount]) => {\n        setFromAmount(fromAmount || undefined);\n        setToAmount(toAmount || undefined);\n      });\n    },\n    // eslint-disable-next-line\n    [market?.address.toBase58(), size],\n  );\n\n  const canConvert = market && size && size > 0;\n  const balance = balances.find(\n    (coinBalance) => coinBalance.coin === fromToken,\n  );\n  const availableBalance =\n    ((balance?.unsettled || 0) + (balance?.wallet || 0)) * 0.99;\n\n  return (\n    <React.Fragment>\n      <Row style={{ marginBottom: 8 }}>\n        <Col>\n          <Input\n            style={{ minWidth: 300 }}\n            addonBefore={`Size (${fromToken})`}\n            placeholder=\"Size\"\n            value={size === null ? undefined : size}\n            type=\"number\"\n            onChange={(e) => setSize(parseFloat(e.target.value) || undefined)}\n          />\n        </Col>\n      </Row>\n      <Row gutter={12} style={{ marginBottom: 8 }}>\n        <Col span={12}>\n          <ActionButton\n            block\n            size=\"large\"\n            onClick={() => setSize(floorToDecimal(availableBalance, 4))}\n          >\n            Max: {availableBalance.toFixed(4)}\n          </ActionButton>\n        </Col>\n        <Col span={12}>\n          <ConvertButton\n            block\n            type=\"primary\"\n            size=\"large\"\n            loading={isConverting}\n            onClick={onConvert}\n            disabled={!canConvert}\n          >\n            Convert\n          </ConvertButton>\n        </Col>\n      </Row>\n      {canConvert && (\n        <Row align=\"middle\" justify=\"center\">\n          <Col>\n            {fromAmount} {fromToken}\n          </Col>\n          <Col offset={1}>\n            <SwapOutlined />\n          </Col>\n          <Col offset={1}>\n            {toAmount} {toToken}\n          </Col>\n        </Row>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport ConvertForm from '../components/ConvertForm';\nimport { Row, Col } from 'antd';\nimport { DEFAULT_MARKET, MarketProvider } from '../utils/markets';\nimport { useLocalStorageState } from '../utils/utils';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function ConvertPage() {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET?.address.toBase58(),\n  );\n  return (\n    <Wrapper style={{ flex: 1, paddingTop: 10 }}>\n      <Row justify=\"center\">\n        <Col>\n          <MarketProvider\n            marketAddress={marketAddress}\n            setMarketAddress={setMarketAddress}\n          >\n            <ConvertForm />\n          </MarketProvider>\n        </Col>\n      </Row>\n    </Wrapper>\n  );\n}\n","import React, { useContext } from 'react';\nimport { useLocalStorageState } from './utils';\nimport { useInterval } from './useInterval';\nimport { useConnection } from './connection';\nimport { useWallet } from './wallet';\nimport {\n  useAllMarkets,\n  useSelectedTokenAccounts,\n  useTokenAccounts,\n} from './markets';\nimport { settleAllFunds } from './send';\nimport { PreferencesContextValues } from './types';\n\nconst PreferencesContext = React.createContext<PreferencesContextValues | null>(\n  null,\n);\n\nexport function PreferencesProvider({ children }) {\n  const [autoSettleEnabled, setAutoSettleEnabled] = useLocalStorageState(\n    'autoSettleEnabled',\n    true,\n  );\n\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected, wallet } = useWallet();\n  const [marketList] = useAllMarkets();\n  const connection = useConnection();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      const markets = (marketList || []).map((m) => m.market);\n      try {\n        if (!wallet) {\n          return;\n        }\n\n        console.log('Auto settling');\n        await settleAllFunds({\n          connection,\n          wallet,\n          tokenAccounts: tokenAccounts || [],\n          markets,\n          selectedTokenAccounts,\n        });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n      }\n    };\n\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\n  }, 10000);\n\n  return (\n    <PreferencesContext.Provider\n      value={{\n        autoSettleEnabled,\n        setAutoSettleEnabled,\n      }}\n    >\n      {children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport function usePreferences() {\n  const context = useContext(PreferencesContext);\n  if (!context) {\n    throw new Error('Missing preferences context');\n  }\n  return {\n    autoSettleEnabled: context.autoSettleEnabled,\n    setAutoSettleEnabled: context.setAutoSettleEnabled,\n  };\n}\n","import React from 'react';\nimport { Switch, Typography } from 'antd';\nimport { usePreferences } from '../utils/preferences';\n\nconst { Paragraph } = Typography;\n\nexport default function Settings({ autoApprove }) {\n  const { autoSettleEnabled, setAutoSettleEnabled } = usePreferences();\n\n  return (\n    <div>\n      <Switch\n        style={{ marginRight: 10 }}\n        disabled={!autoApprove}\n        checked={autoApprove && autoSettleEnabled}\n        onChange={setAutoSettleEnabled}\n      />{' '}\n      Auto settle\n      {!autoApprove && (\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)', marginTop: 10 }}>\n          To use auto settle, first enable auto approval in your wallet\n        </Paragraph>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Col, Input, Modal, Row } from 'antd';\nimport { EndpointInfo } from '../utils/types';\n\nexport default function CustomClusterEndpointDialog({\n  visible,\n  testingConnection,\n  onAddCustomEndpoint,\n  onClose,\n}: {\n  visible: boolean;\n  testingConnection: boolean;\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\n  onClose?: () => void;\n}) {\n  const [customEndpoint, setCustomEndpoint] = useState('');\n  const [customEndpointName, setCustomEndpointName] = useState('');\n\n  const onSubmit = () => {\n    const fullEndpoint = 'https://' + customEndpoint;\n    const params = {\n      name: customEndpointName,\n      endpoint: fullEndpoint,\n      custom: true,\n    };\n    onAddCustomEndpoint(params);\n    onDoClose();\n  };\n  const onDoClose = () => {\n    setCustomEndpoint('');\n    setCustomEndpointName('');\n    onClose && onClose();\n  };\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\n\n  return (\n    <Modal\n      title={'Add custom endpoint'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\n    >\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Name\"\n            value={customEndpointName}\n            onChange={(e) => setCustomEndpointName(e.target.value)}\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Endpoint\"\n            value={customEndpoint}\n            addonBefore={'https://'}\n            onChange={(e) => setCustomEndpoint(e.target.value)}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport { Select, Typography } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport apps from '@project-serum/awesome-serum';\n\nconst { Option } = Select;\n\nconst appsAndTokens = apps.concat(\n  TOKEN_MINTS.map((mint) => {\n    return {\n      name: `${mint.name} SPL`,\n      url: `https://explorer.solana.com/address/${mint.address.toBase58()}`,\n      description: `${mint.name} SPL token`,\n      icon: '',\n      tags: [\n        'token',\n        'blockchain',\n        'solana',\n        'spl',\n        'solana',\n        mint.address.toBase58(),\n      ],\n    };\n  }),\n);\n\ninterface App {\n  name: string;\n  url: string;\n  description: string;\n  tags: string[];\n}\n\nexport default function AppSearch(props) {\n  const [searchMatches, setSearchMatches] = useState<App[]>([]);\n  const [searchValue, setSearchValue] = useState<string | undefined>(undefined);\n\n  const matchApp = (searchString: string, app: App) => {\n    const lowerSearchStr = searchString.toLowerCase();\n    return (\n      app.name.toLowerCase().includes(lowerSearchStr) ||\n      app.tags.some(\n        (tag) =>\n          tag.toLowerCase().includes(lowerSearchStr) ||\n          lowerSearchStr.includes(tag.toLowerCase()),\n      )\n    );\n  };\n\n  const handleSearch = (value) => {\n    setSearchValue(value === '' ? undefined : value);\n    const filteredApps = appsAndTokens.filter((app) => matchApp(value, app));\n    setSearchMatches(filteredApps);\n  };\n\n  const handleSelect = (value, option) => {\n    window.open(option.href, '_blank');\n    handleClear();\n  };\n\n  const handleClear = () => {\n    setSearchMatches([]);\n    setSearchValue(undefined);\n  };\n\n  const options = searchMatches.map((d) => (\n    <Option key={d.name} value={d.name} href={d.url}>\n      <h3>{d.name}</h3>\n      <Typography.Text type=\"secondary\">\n        {d.url.replace('https://', '')}\n      </Typography.Text>\n    </Option>\n  ));\n\n  const ref = useRef<any>();\n  return (\n    <Select\n      ref={ref}\n      showSearch\n      allowClear\n      value={searchValue}\n      placeholder={\n        props.focussed || props.focussed === undefined\n          ? 'Search for dex, swap, wallet, token...'\n          : ''\n      }\n      onSearch={handleSearch}\n      onClear={handleClear}\n      onSelect={handleSelect}\n      onFocus={props.onFocus}\n      onBlur={() => {\n        props.onBlur();\n        handleClear();\n      }}\n      notFoundContent={null} // todo: make this search history\n      style={{\n        width: props.width || '300px',\n        transition: props.focussed ? 'width 0.1s ease 0.1s' : '',\n      }}\n      dropdownStyle={{\n        width: props.width || '300px',\n      }}\n      dropdownMatchSelectWidth={false}\n      suffixIcon={\n        <SearchOutlined onClick={() => ref.current && ref.current.focus()} />\n      }\n      filterOption={false}\n    >\n      {options}\n    </Select>\n  );\n}\n","import {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { Button, Col, Menu, Popover, Row, Select } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { useWallet } from '../utils/wallet';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport Settings from './Settings';\nimport CustomClusterEndpointDialog from './CustomClusterEndpointDialog';\nimport { EndpointInfo } from '../utils/types';\nimport { notify } from '../utils/notifications';\nimport { Connection } from '@solana/web3.js';\nimport WalletConnect from './WalletConnect';\nimport AppSearch from './AppSearch';\nimport { getTradePageUrl } from '../utils/markets';\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nconst EXTERNAL_LINKS = {\n  '/learn': 'https://serum-academy.com/en/serum-dex/',\n  '/add-market': 'https://serum-academy.com/en/add-market/',\n  '/wallet-support': 'https://serum-academy.com/en/wallet-support',\n  '/dex-list': 'https://serum-academy.com/en/dex-list/',\n  '/developer-resources': 'https://serum-academy.com/en/developer-resources/',\n  '/explorer': 'https://explorer.solana.com',\n  '/srm-faq': 'https://projectserum.com/srm-faq',\n  '/swap': 'https://serum-swap.cryptostarkwolf.com/'\n};\n\nexport default function TopBar() {\n  const { connected, wallet } = useWallet();\n  const {\n    endpoint,\n    endpointInfo,\n    setEndpoint,\n    availableEndpoints,\n    setCustomEndpoints,\n  } = useConnectionConfig();\n  const [addEndpointVisible, setAddEndpointVisible] = useState(false);\n  const [testingConnection, setTestingConnection] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n  const [searchFocussed, setSearchFocussed] = useState(false);\n\n  const handleClick = useCallback(\n    (e) => {\n      if (!(e.key in EXTERNAL_LINKS)) {\n        history.push(e.key);\n      }\n    },\n    [history],\n  );\n\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\n    const existingEndpoint = availableEndpoints.some(\n      (e) => e.endpoint === info.endpoint,\n    );\n    if (existingEndpoint) {\n      notify({\n        message: `An endpoint with the given url already exists`,\n        type: 'error',\n      });\n      return;\n    }\n\n    const handleError = (e) => {\n      console.log(`Connection to ${info.endpoint} failed: ${e}`);\n      notify({\n        message: `Failed to connect to ${info.endpoint}`,\n        type: 'error',\n      });\n    };\n\n    try {\n      const connection = new Connection(info.endpoint, 'recent');\n      connection\n        .getEpochInfo()\n        .then((result) => {\n          setTestingConnection(true);\n          console.log(`testing connection to ${info.endpoint}`);\n          const newCustomEndpoints = [\n            ...availableEndpoints.filter((e) => e.custom),\n            info,\n          ];\n          setEndpoint(info.endpoint);\n          setCustomEndpoints(newCustomEndpoints);\n        })\n        .catch(handleError);\n    } catch (e) {\n      handleError(e);\n    } finally {\n      setTestingConnection(false);\n    }\n  };\n\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom;\n  useEffect(() => {\n    const handler = () => {\n      if (endpointInfoCustom) {\n        setEndpoint(ENDPOINTS[0].endpoint);\n      }\n    };\n    window.addEventListener('beforeunload', handler);\n    return () => window.removeEventListener('beforeunload', handler);\n  }, [endpointInfoCustom, setEndpoint]);\n\n  const tradePageUrl = location.pathname.startsWith('/market/')\n    ? location.pathname\n    : getTradePageUrl();\n\n  return (\n    <>\n      <CustomClusterEndpointDialog\n        visible={addEndpointVisible}\n        testingConnection={testingConnection}\n        onAddCustomEndpoint={onAddCustomEndpoint}\n        onClose={() => setAddEndpointVisible(false)}\n      />\n      <Wrapper>\n        <LogoWrapper onClick={() => history.push(tradePageUrl)}>\n          <img src={logo} alt=\"\" />\n          {'SERUM'}\n        </LogoWrapper>\n        <Menu\n          mode=\"horizontal\"\n          onClick={handleClick}\n          selectedKeys={[location.pathname]}\n          style={{\n            borderBottom: 'none',\n            backgroundColor: 'transparent',\n            display: 'flex',\n            alignItems: 'flex-end',\n            flex: 1,\n          }}\n        >\n          <Menu.Item key={tradePageUrl} style={{ margin: '0 10px 0 20px' }}>\n            TRADE\n          </Menu.Item>\n          {!searchFocussed && (\n            <Menu.Item key=\"/swap\" style={{ margin: '0 10px' }}>\n              <a\n                href={EXTERNAL_LINKS['/swap']}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                SWAP\n              </a>\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/balances') && (\n            <Menu.Item key=\"/balances\" style={{ margin: '0 10px' }}>\n              BALANCES\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/orders') && (\n            <Menu.Item key=\"/orders\" style={{ margin: '0 10px' }}>\n              ORDERS\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/convert') && (\n            <Menu.Item key=\"/convert\" style={{ margin: '0 10px' }}>\n              CONVERT\n            </Menu.Item>\n          )}\n          {(!searchFocussed || location.pathname === '/list-new-market') && (\n            <Menu.Item key=\"/list-new-market\" style={{ margin: '0 10px' }}>\n              ADD MARKET\n            </Menu.Item>\n          )}\n          {!searchFocussed && (\n            <Menu.SubMenu\n              title=\"LEARN\"\n              onTitleClick={() =>\n                window.open(EXTERNAL_LINKS['/learn'], '_blank')\n              }\n              style={{ margin: '0 0px 0 10px' }}\n            >\n              <Menu.Item key=\"/add-market\">\n                <a\n                  href={EXTERNAL_LINKS['/add-market']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Adding a market\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/wallet-support\">\n                <a\n                  href={EXTERNAL_LINKS['/wallet-support']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Supported wallets\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/dex-list\">\n                <a\n                  href={EXTERNAL_LINKS['/dex-list']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  DEX list\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/developer-resources\">\n                <a\n                  href={EXTERNAL_LINKS['/developer-resources']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Developer resources\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/explorer\">\n                <a\n                  href={EXTERNAL_LINKS['/explorer']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Solana block explorer\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/srm-faq\">\n                <a\n                  href={EXTERNAL_LINKS['/srm-faq']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  SRM FAQ\n                </a>\n              </Menu.Item>\n            </Menu.SubMenu>\n          )}\n        </Menu>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            paddingRight: 5,\n          }}\n        >\n          <AppSearch\n            onFocus={() => setSearchFocussed(true)}\n            onBlur={() => setSearchFocussed(false)}\n            focussed={searchFocussed}\n            width={searchFocussed ? '350px' : '35px'}\n          />\n        </div>\n        <div>\n          <Row\n            align=\"middle\"\n            style={{ paddingLeft: 5, paddingRight: 5 }}\n            gutter={16}\n          >\n            <Col>\n              <PlusCircleOutlined\n                style={{ color: '#2abdd2' }}\n                onClick={() => setAddEndpointVisible(true)}\n              />\n            </Col>\n            <Col>\n              <Popover\n                content={endpoint}\n                placement=\"bottomRight\"\n                title=\"URL\"\n                trigger=\"hover\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n            <Col>\n              <Select\n                onSelect={setEndpoint}\n                value={endpoint}\n                style={{ marginRight: 8, width: '150px' }}\n              >\n                {availableEndpoints.map(({ name, endpoint }) => (\n                  <Select.Option value={endpoint} key={endpoint}>\n                    {name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n        </div>\n        {connected && (\n          <div>\n            <Popover\n              content={<Settings autoApprove={wallet?.autoApprove} />}\n              placement=\"bottomRight\"\n              title=\"Settings\"\n              trigger=\"click\"\n            >\n              <Button style={{ marginRight: 8 }}>\n                <SettingOutlined />\n                Settings\n              </Button>\n            </Popover>\n          </div>\n        )}\n        <div>\n          <WalletConnect />\n        </div>\n      </Wrapper>\n    </>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/ProjectSerum',\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\n  contactEmail: 'mailto:contact@projectserum.com',\n  discord: 'https://discord.gg/EDvudv6',\n  telegram: 'https://t.me/ProjectSerum',\n  github: 'https://github.com/project-serum',\n  projectSerum: 'https://projectserum.com/',\n  developerResources: 'https://projectserum.com/developer-resources',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'Serum Developer Resources',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Project Serum', link: helpUrls.projectSerum },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import { PublicKey } from '@solana/web3.js';\nimport React, { ReactElement, useMemo, useState } from 'react';\nimport { useAccountInfo } from '../utils/connection';\nimport { isValidPublicKey } from '../utils/utils';\nimport { ValidateStatus } from 'antd/lib/form/FormItem';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { parseTokenMintData, useMintToTickers } from '../utils/tokens';\nimport { AutoComplete, Form, Tooltip } from 'antd';\nimport Link from './Link';\n\nexport interface MintInfo {\n  address: PublicKey;\n  decimals: number;\n}\n\nexport function useMintInput(\n  name,\n  label: string | ReactElement,\n  tooltip?: string | ReactElement,\n): [ReactElement, MintInfo | null] {\n  const [address, setAddress] = useState('');\n  const [accountInfo, loaded] = useAccountInfo(\n    isValidPublicKey(address) ? new PublicKey(address) : null,\n  );\n\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(address) ||\n          ticker.toLowerCase().includes(address.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, address]);\n\n  const { validateStatus, hasFeedback, help, mintInfo } = useMemo(() => {\n    let validateStatus: ValidateStatus = '';\n    let hasFeedback = false;\n    let help: string | null = null;\n    let mintInfo: MintInfo | null = null;\n    if (address) {\n      hasFeedback = true;\n      if (accountInfo) {\n        if (\n          accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\n          accountInfo.data.length === 82\n        ) {\n          let parsed = parseTokenMintData(accountInfo.data);\n          if (parsed.initialized) {\n            validateStatus = 'success';\n            mintInfo = {\n              address: new PublicKey(address),\n              decimals: parsed.decimals,\n            };\n          } else {\n            validateStatus = 'error';\n            help = 'Invalid SPL mint';\n          }\n        } else {\n          validateStatus = 'error';\n          help = 'Invalid SPL mint address';\n        }\n      } else if (isValidPublicKey(address) && !loaded) {\n        validateStatus = 'validating';\n      } else {\n        validateStatus = 'error';\n        help = 'Invalid Solana address';\n      }\n    }\n    return { validateStatus, hasFeedback, help, mintInfo };\n  }, [address, accountInfo, loaded]);\n\n  const input = (\n    <Form.Item\n      label={\n        <Tooltip\n          title={\n            <>\n              {tooltip} You can look up token mint addresses on{' '}\n              <Link external to=\"https://sollet.io\">\n                sollet.io\n              </Link>\n              .\n            </>\n          }\n        >\n          {label}\n        </Tooltip>\n      }\n      name={name}\n      validateStatus={validateStatus}\n      hasFeedback={hasFeedback}\n      help={help}\n    >\n      <AutoComplete\n        options={options}\n        value={address}\n        onChange={(value) => setAddress(value)}\n      />\n    </Form.Item>\n  );\n\n  return [input, mintInfo];\n}\n","import React, { useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { MARKETS } from '@project-serum/serum';\nimport { useConnection } from '../utils/connection';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../utils/wallet';\nimport { listMarket } from '../utils/send';\nimport { useMintInput } from '../components/useMintInput';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport default function ListNewMarketPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [baseMintInput, baseMintInfo] = useMintInput(\n    'baseMint',\n    <Text>\n      Base Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. BTC solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\n  );\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\n    'quoteMint',\n    <Text>\n      Quote Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. USDT solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\n  );\n  const [lotSize, setLotSize] = useState('1');\n  const [tickSize, setTickSize] = useState('0.01');\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\n  const [submitting, setSubmitting] = useState(false);\n\n  const [listedMarket, setListedMarket] = useState(null);\n\n  let baseLotSize;\n  let quoteLotSize;\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\n      quoteLotSize = Math.round(\n        parseFloat(lotSize) *\n          10 ** quoteMintInfo.decimals *\n          parseFloat(tickSize),\n      );\n    }\n  }\n\n  const canSubmit =\n    connected &&\n    !!baseMintInfo &&\n    !!quoteMintInfo &&\n    !!baseLotSize &&\n    !!quoteLotSize;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const marketAddress = await listMarket({\n        connection,\n        wallet,\n        baseMint: baseMintInfo.address,\n        quoteMint: quoteMintInfo.address,\n        baseLotSize,\n        quoteLotSize,\n        dexProgramId,\n      });\n      setListedMarket(marketAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error listing new market',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>List New Market</Title>\n        <Form\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          layout={'vertical'}\n          onFinish={onSubmit}\n        >\n          {baseMintInput}\n          {quoteMintInput}\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\n                Minimum Order Size{' '}\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\n              </Tooltip>\n            }\n            name=\"lotSize\"\n            initialValue=\"1\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? baseLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={lotSize}\n              onChange={(e) => setLotSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\n                Tick Size{' '}\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\n              </Tooltip>\n            }\n            name=\"tickSize\"\n            initialValue=\"0.01\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? quoteLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={tickSize}\n              onChange={(e) => setTickSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {listedMarket ? (\n        <FloatingElement>\n          <Text>New market address: {listedMarket.toBase58()}</Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  AutoComplete,\n  Button,\n  Form,\n  Input,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useConnection } from '../../utils/connection';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../../utils/wallet';\nimport { sendSignedTransaction, signTransactions } from '../../utils/send';\nimport { useMintInput } from '../../components/useMintInput';\nimport { PoolTransactions } from '@project-serum/pool';\nimport { useTokenAccounts } from '../../utils/markets';\nimport BN from 'bn.js';\nimport { notify } from '../../utils/notifications';\nimport Link from '../../components/Link';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst AddRemoveTokenButtons = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nconst SIMPLE_POOL_PROGRAM_ID = '71JS8f7y7ASMbuuSMCVG7a3qDdcVco2qYD6bMJeZqUCm';\nconst ADMIN_CONTROLLED_POOL_PROGRAM_ID =\n  'WvmTNLpGMVbwJVYztYL4Hnsy82cJhQorxjnnXcRm3b6';\nconst DEFAULT_PROGRAM_ID = ADMIN_CONTROLLED_POOL_PROGRAM_ID;\nconst PROGRAM_ID_OPTIONS = [\n  {\n    label: `Simple Pool (${SIMPLE_POOL_PROGRAM_ID})`,\n    value: SIMPLE_POOL_PROGRAM_ID,\n  },\n  {\n    label: `Admin-Controlled Pool (${ADMIN_CONTROLLED_POOL_PROGRAM_ID})`,\n    value: ADMIN_CONTROLLED_POOL_PROGRAM_ID,\n  },\n];\n\nexport default function NewPoolPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [poolName, setPoolName] = useState('');\n  const [programId, setProgramId] = useState(DEFAULT_PROGRAM_ID);\n  const [initialSupply, setInitialSupply] = useState('1');\n  const [initialAssets, setInitialAssets] = useState<InitialAsset[]>([\n    { valid: false },\n    { valid: false },\n  ]);\n  const [adminControlled, setAdminControlled] = useState(false);\n  const [adminAddress, setAdminAddress] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n  const [newPoolAddress, setNewPoolAddress] = useState<PublicKey | null>(null);\n\n  useEffect(() => {\n    if (programId === SIMPLE_POOL_PROGRAM_ID) {\n      setAdminControlled(false);\n    } else if (programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID) {\n      setAdminControlled(true);\n    }\n  }, [programId]);\n\n  useEffect(() => {\n    if (connected && wallet) {\n      setAdminAddress(wallet.publicKey.toBase58());\n    }\n  }, [wallet, connected]);\n\n  const canSubmit =\n    connected &&\n    poolName.trim() &&\n    programId &&\n    parseFloat(initialSupply) > 0 &&\n    initialAssets.every((asset) => asset.valid) &&\n    tokenAccounts &&\n    (adminAddress || !adminControlled);\n\n  async function onSubmit() {\n    if (!canSubmit || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const assets = initialAssets as ValidInitialAsset[];\n      const [\n        poolAddress,\n        transactionsAndSigners,\n      ] = await PoolTransactions.initializeSimplePool({\n        connection,\n        programId: new PublicKey(programId),\n        poolName,\n        poolStateSpace: 1024,\n        poolMintDecimals: 6,\n        initialPoolMintSupply: new BN(\n          Math.round(10 ** 6 * parseFloat(initialSupply)),\n        ),\n        assetMints: assets.map((asset) => asset.mint),\n        initialAssetQuantities: assets.map((asset) => new BN(asset.quantity)),\n        creator: wallet.publicKey,\n        creatorAssets: assets.map((asset) => {\n          const found = tokenAccounts?.find((tokenAccount) =>\n            tokenAccount.effectiveMint.equals(asset.mint),\n          );\n          if (!found) {\n            throw new Error('No token account for ' + asset.mint.toBase58());\n          }\n          return found.pubkey;\n        }),\n        additionalAccounts: adminControlled\n          ? [\n              {\n                pubkey: new PublicKey(adminAddress),\n                isSigner: false,\n                isWritable: false,\n              },\n            ]\n          : [],\n      });\n      const signed = await signTransactions({\n        transactionsAndSigners,\n        wallet,\n        connection,\n      });\n      for (let signedTransaction of signed) {\n        await sendSignedTransaction({ signedTransaction, connection });\n      }\n      setNewPoolAddress(poolAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error creating new pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>Create new pool</Title>\n        <Form layout=\"vertical\" onFinish={onSubmit}>\n          <Form.Item\n            label={\n              <Tooltip title=\"Public name of the pool.\">Pool Name</Tooltip>\n            }\n            name=\"name\"\n          >\n            <Input\n              value={poolName}\n              onChange={(e) => setPoolName(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Address of the pool program.\">\n                Program ID{' '}\n                <Text type=\"secondary\">(e.g. {DEFAULT_PROGRAM_ID})</Text>\n              </Tooltip>\n            }\n            name=\"programId\"\n            initialValue={DEFAULT_PROGRAM_ID}\n          >\n            <AutoComplete\n              value={programId}\n              onChange={(value) => setProgramId(value)}\n              options={PROGRAM_ID_OPTIONS}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Initial number of pool tokens to mint to your account.\">\n                Initial Pool Token Supply\n              </Tooltip>\n            }\n            name=\"initialSupply\"\n            initialValue=\"1\"\n          >\n            <Input\n              value={initialSupply}\n              onChange={(e) => setInitialSupply(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <AddRemoveTokenButtons>\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.concat({ valid: false }))\n              }\n            >\n              Add token\n            </Button>{' '}\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.slice(0, assets.length - 1))\n              }\n              disabled={initialAssets.length <= 1}\n            >\n              Remove token\n            </Button>\n          </AddRemoveTokenButtons>\n          {initialAssets.map((asset, i) => (\n            <AssetInput setInitialAssets={setInitialAssets} index={i} key={i} />\n          ))}\n          <Form.Item\n            label={\n              <Tooltip title=\"Whether the assets in the pool can be controlled by the pool admin.\">\n                Admin Controlled\n              </Tooltip>\n            }\n            name=\"adminControlled\"\n          >\n            <Switch\n              checked={adminControlled}\n              onChange={(checked) => setAdminControlled(checked)}\n              disabled={\n                programId === SIMPLE_POOL_PROGRAM_ID ||\n                programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID\n              }\n            />\n          </Form.Item>\n          {adminControlled ? (\n            <Form.Item\n              label={\n                <Tooltip title=\"Address of the pool admin account.\">\n                  Admin Address\n                </Tooltip>\n              }\n            >\n              <Input\n                value={adminAddress}\n                onChange={(e) => setAdminAddress(e.target.value.trim())}\n              />\n            </Form.Item>\n          ) : null}\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {newPoolAddress ? (\n        <FloatingElement>\n          <Text>\n            New pool address:{' '}\n            <Link to={`/pools/${newPoolAddress.toBase58()}`}>\n              {newPoolAddress.toBase58()}\n            </Link>\n          </Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n\ntype InitialAsset = { valid: false } | ValidInitialAsset;\ninterface ValidInitialAsset {\n  valid: true;\n  mint: PublicKey;\n  quantity: number;\n}\n\nfunction AssetInput({ setInitialAssets, index }) {\n  const [mintInput, mintInfo] = useMintInput(\n    `mint${index}`,\n    <Text>Token {index + 1} Mint Address</Text>,\n    <>Token mint address for token {index + 1}.</>,\n  );\n  const [quantity, setQuantity] = useState('');\n\n  useEffect(() => {\n    let change: InitialAsset;\n    if (mintInfo && parseFloat(quantity) >= 0) {\n      let parsedQuantity = Math.round(\n        10 ** mintInfo.decimals * parseFloat(quantity),\n      );\n      change = {\n        mint: mintInfo.address,\n        quantity: parsedQuantity,\n        valid: true,\n      };\n    } else {\n      change = { valid: false };\n    }\n    setInitialAssets((assets: InitialAsset[]) =>\n      assets.map((old, i) => (i === index ? change : old)),\n    );\n  }, [setInitialAssets, index, mintInfo, quantity]);\n\n  return (\n    <>\n      {mintInput}\n      <Form.Item\n        label={\n          <Tooltip\n            title={\n              <>\n                Initial quantity of token {index + 1} to deposit into the pool.\n              </>\n            }\n          >\n            Token {index + 1} Initial Quantity\n          </Tooltip>\n        }\n        name={`quantity${index}`}\n        validateStatus={'success'}\n      >\n        <Input\n          value={quantity}\n          onChange={(e) => setQuantity(e.target.value.trim())}\n          type=\"number\"\n          min=\"0\"\n          step=\"any\"\n        />\n      </Form.Item>\n    </>\n  );\n}\n","import React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport { useMintToTickers } from '../utils/tokens';\nimport { Popover } from 'antd';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nexport function MintName({\n  mint,\n  showAddress = false,\n}: {\n  mint: string | PublicKey | null | undefined;\n  showAddress?: boolean;\n}) {\n  const mintToTickers = useMintToTickers();\n  if (!mint) {\n    return null;\n  }\n  const mintKey = typeof mint === 'string' ? new PublicKey(mint) : mint;\n  const mintAddress = typeof mint === 'string' ? mint : mint.toBase58();\n  const ticker = mintToTickers[mintAddress] ?? abbreviateAddress(mintKey);\n\n  return (\n    <>\n      {ticker}\n      {showAddress ? (\n        <>\n          {' '}\n          <Popover\n            content={<LinkAddress address={mintAddress} />}\n            placement=\"bottomRight\"\n            title=\"Token mint\"\n            trigger=\"hover\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import { Basket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport BN from 'bn.js';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport { Spin } from 'antd';\nimport { MintName } from '../../../components/MintName';\n\ninterface BasketDisplayProps {\n  poolInfo: PoolInfo;\n  basket?: Basket | null | undefined;\n}\n\nexport default function PoolBasketDisplay({\n  poolInfo,\n  basket,\n}: BasketDisplayProps) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => (\n        <BasketItem\n          key={index}\n          mint={asset.mint}\n          quantity={basket?.quantities[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ninterface BasketItemProps {\n  mint: PublicKey;\n  quantity?: BN;\n}\n\nfunction BasketItem({ mint, quantity }: BasketItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && quantity) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    quantityDisplay = <>{quantity.toNumber() / 10 ** mintInfo.decimals}</>;\n  }\n\n  return (\n    <li>\n      {quantityDisplay} <MintName mint={mint} showAddress />\n    </li>\n  );\n}\n","import { getPoolBasket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\n\nconst { Text, Paragraph } = Typography;\n\ninterface PoolInfoProps {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nconst feeFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 6,\n});\n\nexport default function PoolInfoPanel({ poolInfo, mintInfo }: PoolInfoProps) {\n  const connection = useConnection();\n\n  const [totalBasket] = useAsyncData(\n    () => getPoolBasket(connection, poolInfo, { redeem: mintInfo.supply }),\n    tuple(getPoolBasket, connection, poolInfo, 'total', mintInfo),\n  );\n\n  return (\n    <FloatingElement stretchVertical>\n      <Paragraph>Name: {poolInfo.state.name}</Paragraph>\n      <Paragraph>\n        Address: <Text copyable>{poolInfo.address.toBase58()}</Text>\n      </Paragraph>\n      <Paragraph>\n        Pool token mint address:{' '}\n        <Text copyable>{poolInfo.state.poolTokenMint.toBase58()}</Text>\n      </Paragraph>\n      {poolInfo.state.adminKey ? (\n        <Paragraph>\n          Pool admin: <Text copyable>{poolInfo.state.adminKey.toBase58()}</Text>\n        </Paragraph>\n      ) : null}\n      <Paragraph>\n        Fee rate: {feeFormat.format(poolInfo.state.feeRate / 1_000_000)}\n      </Paragraph>\n      <Paragraph>\n        Total supply: {mintInfo.supply.toNumber() / 10 ** mintInfo.decimals}\n      </Paragraph>\n      <Text>Total assets:</Text>\n      <div>\n        <PoolBasketDisplay poolInfo={poolInfo} basket={totalBasket} />\n      </div>\n    </FloatingElement>\n  );\n}\n","import { getPoolBasket, PoolInfo, PoolTransactions } from '@project-serum/pool';\nimport React, { useMemo, useState } from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Button, Input, Spin, Tabs, Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport { PublicKey } from '@solana/web3.js';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\nimport BN from 'bn.js';\nimport { notify } from '../../../utils/notifications';\nimport { useWallet } from '../../../utils/wallet';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\ninterface PoolCreateRedeemPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nexport default function PoolCreateRedeemPanel({\n  poolInfo,\n  mintInfo,\n}: PoolCreateRedeemPanel) {\n  return (\n    <FloatingElement stretchVertical>\n      <Tabs>\n        <TabPane tab=\"Create\" key=\"create\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"create\"\n          />\n        </TabPane>\n        <TabPane tab=\"Redeem\" key=\"redeem\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"redeem\"\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface CreateRedeemInnerPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n  tab: string;\n}\n\nfunction CreateRedeemTab({ poolInfo, mintInfo, tab }: CreateRedeemInnerPanel) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [quantity, setQuantity] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n\n  const action = useMemo(() => {\n    const parsedQuantity = Math.round(\n      parseFloat(quantity) * 10 ** mintInfo.decimals,\n    );\n    if (parsedQuantity > 0) {\n      if (tab === 'create') {\n        return { create: new BN(parsedQuantity) };\n      } else {\n        return { redeem: new BN(parsedQuantity) };\n      }\n    }\n    return null;\n  }, [mintInfo.decimals, quantity, tab]);\n\n  const [basket, basketLoaded] = useAsyncData(\n    async () =>\n      action ? await getPoolBasket(connection, poolInfo, action) : null,\n    tuple(getPoolBasket, connection, poolInfo.address.toBase58(), action),\n  );\n\n  function findTokenAccount(mint: PublicKey): PublicKey {\n    const account = tokenAccounts?.find((account) =>\n      account.effectiveMint.equals(mint),\n    );\n    if (account) {\n      return account.pubkey;\n    }\n    throw new Error('No token account for ' + mint.toBase58());\n  }\n\n  const canSubmit = connected && action && basket;\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    if (!action || !basket || !connected || !canSubmit || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const { transaction, signers } = PoolTransactions.execute(\n        poolInfo,\n        action,\n        {\n          owner: wallet.publicKey,\n          poolTokenAccount: findTokenAccount(poolInfo.state.poolTokenMint),\n          assetAccounts: poolInfo.state.assets.map((asset) =>\n            findTokenAccount(asset.mint),\n          ),\n        },\n        basket,\n      );\n      await sendTransaction({ connection, wallet, transaction, signers });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message:\n          'Error ' +\n          (tab === 'create' ? 'creating' : 'redeeming') +\n          ' pool tokens',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <div>\n        {!basket ? (\n          basketLoaded ? null : (\n            <Spin />\n          )\n        ) : (\n          <>\n            <Text>{tab === 'create' ? 'Cost' : 'Proceeds'}: </Text>\n            <Text type=\"secondary\">(indicative only)</Text>\n            <PoolBasketDisplay poolInfo={poolInfo} basket={basket} />\n          </>\n        )}\n      </div>\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n        disabled={!canSubmit || submitting}\n      >\n        {!connected ? 'Wallet not connected' : 'Submit'}\n      </Button>\n    </form>\n  );\n}\n","import { PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport {\n  parseTokenAccountData,\n  parseTokenMintData,\n} from '../../../utils/tokens';\nimport { Button, Spin, Tabs } from 'antd';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { MintName } from '../../../components/MintName';\nimport { LinkOutlined } from '@ant-design/icons';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\n\nconst { TabPane } = Tabs;\n\nexport default function PoolBalancesPanel({\n  poolInfo,\n}: {\n  poolInfo: PoolInfo;\n}) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Wallet Balances\" key=\"wallet\">\n          <WalletBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Pool Balances\" key=\"pool\">\n          <PoolBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nfunction WalletBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  const [tokenAccounts] = useTokenAccounts();\n  return (\n    <ul>\n      {[\n        poolInfo.state.poolTokenMint,\n        ...poolInfo.state.assets.map((asset) => asset.mint),\n      ].map((mint, index) => {\n        const tokenAccount = tokenAccounts?.find((account) =>\n          account.effectiveMint.equals(mint),\n        );\n        if (!tokenAccount) {\n          return null;\n        }\n        return (\n          <BalanceItem\n            key={index}\n            mint={mint}\n            publicKey={tokenAccount.pubkey}\n            isPoolToken={mint.equals(poolInfo.state.poolTokenMint)}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction PoolBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => {\n        return (\n          <BalanceItem\n            key={index}\n            mint={asset.mint}\n            publicKey={asset.vaultAddress}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\ninterface BalanceItemProps {\n  mint: PublicKey;\n  publicKey: PublicKey;\n  isPoolToken?: boolean;\n}\n\nfunction BalanceItem({ mint, publicKey, isPoolToken }: BalanceItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  const [balanceAccountInfo] = useAccountInfo(publicKey);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && balanceAccountInfo) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    if (mint.equals(WRAPPED_SOL_MINT)) {\n      quantityDisplay = (\n        <>{balanceAccountInfo.lamports / 10 ** mintInfo.decimals}</>\n      );\n    } else {\n      const accountInfo = parseTokenAccountData(balanceAccountInfo.data);\n      quantityDisplay = <>{accountInfo.amount / 10 ** mintInfo.decimals}</>;\n    }\n  }\n\n  return (\n    <li>\n      {quantityDisplay}{' '}\n      {isPoolToken ? (\n        <>\n          Pool Token (<MintName mint={mint} />)\n        </>\n      ) : (\n        <MintName mint={mint} />\n      )}{' '}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://explorer.solana.com/address/' + publicKey.toBase58()}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      />\n    </li>\n  );\n}\n","import React, { FormEvent, useMemo, useState } from 'react';\nimport { AdminControlledPoolInstructions, PoolInfo } from '@project-serum/pool';\nimport { TokenInstructions } from '@project-serum/serum';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useConnection } from '../../../utils/connection';\nimport { useWallet } from '../../../utils/wallet';\nimport {\n  getSelectedTokenAccountForMint,\n  useTokenAccounts,\n} from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\nimport { notify } from '../../../utils/notifications';\nimport {\n  Account,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from '@solana/web3.js';\nimport { AutoComplete, Button, Input, Select, Tabs } from 'antd';\nimport {\n  createAssociatedTokenAccount,\n  getAssociatedTokenAddress,\n} from '@project-serum/associated-token';\nimport { parseTokenMintData, useMintToTickers } from '../../../utils/tokens';\nimport BN from 'bn.js';\nimport { refreshAllCaches } from '../../../utils/fetch-loop';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nexport function PoolAdminPanel({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Pause/Unpause\" key=\"pause\">\n          <PauseUnpauseTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Add Token\" key=\"addAsset\">\n          <AddAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Remove Token\" key=\"removeAsset\">\n          <RemoveAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Deposit\" key=\"deposit\">\n          <DepositTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Withdraw\" key=\"withdraw\">\n          <WithdrawTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Modify Fee\" key=\"updateFee\">\n          <UpdateFeeTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface TabParams {\n  poolInfo: PoolInfo;\n}\n\nfunction PauseUnpauseTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function sendPause() {\n    if (!connected || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.pause(poolInfo));\n      await sendTransaction({ connection, wallet, transaction });\n    } catch (e) {\n      notify({\n        message: 'Error pausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  async function sendUnpause() {\n    if (!connected || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.unpause(poolInfo));\n      await sendTransaction({ connection, wallet, transaction });\n    } catch (e) {\n      notify({\n        message: 'Error unpausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <>\n      <Button onClick={sendPause} disabled={submitting}>\n        Pause\n      </Button>{' '}\n      <Button onClick={sendUnpause} disabled={submitting}>\n        Unpause\n      </Button>\n    </>\n  );\n}\n\nfunction AddAssetTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const [address, setAddress] = useState('');\n  const { wallet, connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'adding asset to pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = await getAssociatedTokenAddress(\n        poolInfo.state.vaultSigner,\n        mintAddress,\n      );\n      const transaction = new Transaction();\n      if (!(await connection.getAccountInfo(vaultAddress)) && wallet) {\n        transaction.add(\n          await createAssociatedTokenAccount(\n            wallet.publicKey,\n            poolInfo.state.vaultSigner,\n            mintAddress,\n          ),\n        );\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.addAsset(poolInfo, vaultAddress),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintSelector\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction RemoveAssetTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const { connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'removing asset from pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.removeAsset(poolInfo, vaultAddress),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction DepositTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'depositing to pool',\n    async () => {\n      if (!wallet) {\n        throw new Error('Wallet is not connected');\n      }\n\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const wrappedSolAccount =\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\n          ? new Account()\n          : null;\n\n      const transaction = new Transaction();\n      const signers: Account[] = [];\n      if (wrappedSolAccount) {\n        transaction.add(\n          SystemProgram.createAccount({\n            fromPubkey: wallet.publicKey,\n            lamports: parsedQuantity + 2.04e6,\n            newAccountPubkey: wrappedSolAccount.publicKey,\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\n            space: 165,\n          }),\n          TokenInstructions.initializeAccount({\n            account: wrappedSolAccount.publicKey,\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.transfer({\n            source: wrappedSolAccount.publicKey,\n            destination: vaultAddress,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.closeAccount({\n            source: wrappedSolAccount.publicKey,\n            destination: walletTokenAccount.pubkey,\n            owner: wallet.publicKey,\n          }),\n        );\n        signers.push(wrappedSolAccount);\n      } else {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: walletTokenAccount.pubkey,\n            destination: vaultAddress,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n        );\n      }\n      return [transaction, signers];\n    },\n    true,\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction WithdrawTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'withdrawing from pool',\n    async () => {\n      if (!wallet) {\n        throw new Error('Wallet is not connected');\n      }\n\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const wrappedSolAccount =\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\n          ? new Account()\n          : null;\n\n      const transaction = new Transaction();\n      const signers: Account[] = [];\n      if (wrappedSolAccount) {\n        transaction.add(\n          SystemProgram.createAccount({\n            fromPubkey: wallet.publicKey,\n            lamports: 2.04e6,\n            newAccountPubkey: wrappedSolAccount.publicKey,\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\n            space: 165,\n          }),\n          TokenInstructions.initializeAccount({\n            account: wrappedSolAccount.publicKey,\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\n            owner: wallet.publicKey,\n          }),\n        );\n        signers.push(wrappedSolAccount);\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.approveDelegate(\n          poolInfo,\n          vaultAddress,\n          wallet.publicKey,\n          new BN(parsedQuantity),\n        ),\n      );\n      if (wrappedSolAccount) {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: vaultAddress,\n            destination: wrappedSolAccount.publicKey,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.closeAccount({\n            source: wrappedSolAccount.publicKey,\n            destination: walletTokenAccount.pubkey,\n            owner: wallet.publicKey,\n          }),\n        );\n      } else {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: vaultAddress,\n            destination: walletTokenAccount.pubkey,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n        );\n      }\n      return [transaction, signers];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction UpdateFeeTab({ poolInfo }: TabParams) {\n  const [feeRate, setFeeRate] = useState('');\n\n  const { connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit = connected && tokenAccounts && parseFloat(feeRate);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'changing pool fee',\n    async () => {\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.updateFee(\n          poolInfo,\n          Math.round(parseFloat(feeRate) * 1_000_000),\n        ),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Fee Rate</>}\n        value={feeRate}\n        onChange={(e) => setFeeRate(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction useOnSubmitHandler(\n  description: string,\n  makeTransaction: () => Promise<[Transaction, Account[]]>,\n  refresh = false,\n): [(FormEvent) => void, boolean] {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function onSubmit(e: FormEvent) {\n    e.preventDefault();\n    if (submitting) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      if (!connected || !wallet) {\n        throw new Error('Wallet not connected');\n      }\n      const [transaction, signers] = await makeTransaction();\n      await sendTransaction({ connection, wallet, transaction, signers });\n      if (refresh) {\n        refreshAllCaches();\n      }\n    } catch (e) {\n      notify({\n        message: `Error ${description}`,\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return [onSubmit, submitting];\n}\n\nfunction SubmitButton({ canSubmit, submitting }) {\n  const { connected } = useWallet();\n  return (\n    <Button\n      htmlType=\"submit\"\n      type=\"primary\"\n      disabled={!canSubmit || submitting}\n    >\n      {!connected ? 'Wallet not connected' : 'Submit'}\n    </Button>\n  );\n}\n\nfunction MintInPoolSelector({\n  poolInfo,\n  label,\n  value,\n  onChange,\n  style,\n}: {\n  poolInfo: PoolInfo;\n  label: string;\n  value: string;\n  onChange: (string) => void;\n  style: any;\n}) {\n  const mintToTickers = useMintToTickers();\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <Select onChange={onChange} value={value} style={{ width: '100%' }}>\n        {poolInfo.state.assets.map((asset) => (\n          <Option value={asset.mint.toBase58()} key={asset.mint.toBase58()}>\n            {mintToTickers[asset.mint.toBase58()] ? (\n              <>\n                {mintToTickers[asset.mint.toBase58()]} ({asset.mint.toBase58()})\n              </>\n            ) : (\n              asset.mint.toBase58()\n            )}\n          </Option>\n        ))}\n      </Select>\n    </Input.Group>\n  );\n}\n\nfunction MintSelector({ label, style, value, onChange }) {\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(value) ||\n          ticker.toLowerCase().includes(value.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, value]);\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <AutoComplete\n        options={options}\n        value={value}\n        onChange={(e) => onChange(e)}\n        style={{ width: '100%' }}\n      />\n    </Input.Group>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Col, PageHeader, Row, Spin, Typography } from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport {\n  decodePoolState,\n  isAdminControlledPool,\n  PoolInfo,\n} from '@project-serum/pool';\nimport PoolInfoPanel from './PoolInfoPanel';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport PoolCreateRedeemPanel from './PoolCreateRedeemPanel';\nimport PoolBalancesPanel from './PoolBalancesPanel';\nimport { useHistory } from 'react-router-dom';\nimport { PoolAdminPanel } from './PoolAdminPanel';\nimport { useWallet } from '../../../utils/wallet';\n\nconst { Text } = Typography;\n\nexport default function PoolPage() {\n  const { poolAddress } = useParams();\n  const [poolAccountInfo, poolAccountLoaded] = useAccountInfo(\n    isPublicKey(poolAddress) ? new PublicKey(poolAddress) : null,\n  );\n  const history = useHistory();\n\n  const poolInfo: PoolInfo | null = useMemo(() => {\n    if (!poolAccountInfo) {\n      return null;\n    }\n    try {\n      return {\n        address: new PublicKey(poolAddress),\n        state: decodePoolState(poolAccountInfo.data),\n        program: poolAccountInfo.owner,\n      };\n    } catch (e) {\n      return null;\n    }\n  }, [poolAddress, poolAccountInfo]);\n  const [mintAccountInfo, mintAccountInfoLoaded] = useAccountInfo(\n    poolInfo?.state.poolTokenMint,\n  );\n  const mintInfo = useMemo(\n    () => (mintAccountInfo ? parseTokenMintData(mintAccountInfo.data) : null),\n    [mintAccountInfo],\n  );\n  const { wallet } = useWallet();\n\n  if (poolInfo && mintInfo && wallet) {\n    return (\n      <>\n        <PageHeader\n          title={<>Pool {poolInfo.address.toBase58()}</>}\n          onBack={() => history.push('/pools')}\n          subTitle={poolInfo.state.name}\n        />\n        <Row>\n          <Col xs={24} lg={12}>\n            <PoolInfoPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24} lg={12}>\n            <PoolCreateRedeemPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24}>\n            <PoolBalancesPanel poolInfo={poolInfo} />\n          </Col>\n          {wallet.connected &&\n          poolInfo.state.adminKey?.equals(wallet.publicKey) &&\n          isAdminControlledPool(poolInfo) ? (\n            <Col xs={24}>\n              <PoolAdminPanel poolInfo={poolInfo} />\n            </Col>\n          ) : null}\n        </Row>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageHeader\n        title={<>Pool {poolAddress}</>}\n        onBack={() => history.push('/pools')}\n      />\n      <FloatingElement>\n        {!poolAccountLoaded || !mintAccountInfoLoaded ? (\n          <Spin />\n        ) : (\n          <Text>Invalid pool</Text>\n        )}\n      </FloatingElement>\n    </>\n  );\n}\n\nfunction isPublicKey(address) {\n  try {\n    new PublicKey(address);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","import styled from 'styled-components';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport React, { useState } from 'react';\nimport { Button, Input, Typography } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport Link from '../../components/Link';\n\nconst { Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  margin-top: 16px;\n  margin-bottom: 48px;\n`;\n\nexport default function PoolListPage() {\n  const [poolAddress, setPoolAddress] = useState('');\n  const history = useHistory();\n\n  function onSubmit(e) {\n    e.preventDefault();\n    history.push(`/pools/${poolAddress}`);\n  }\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={3}>Pools</Title>\n        <Form onSubmit={onSubmit}>\n          <Input\n            value={poolAddress}\n            onChange={(e) => setPoolAddress(e.target.value.trim())}\n            placeholder=\"Pool address\"\n          />\n          <Button type=\"primary\" htmlType=\"submit\">\n            Go\n          </Button>\n        </Form>\n        <Link to=\"/pools/new\">Create new pool</Link>\n      </FloatingElement>\n    </Wrapper>\n  );\n}\n","import { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport ConvertPage from './pages/ConvertPage';\nimport BasicLayout from './components/BasicLayout';\nimport ListNewMarketPage from './pages/ListNewMarketPage';\nimport NewPoolPage from './pages/pools/NewPoolPage';\nimport PoolPage from './pages/pools/PoolPage';\nimport PoolListPage from './pages/pools/PoolListPage';\nimport { getTradePageUrl } from './utils/markets';\n\nexport function Routes() {\n  return (\n    <>\n      <HashRouter basename={'/'}>\n        <BasicLayout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to={getTradePageUrl()} />\n            </Route>\n            <Route exact path=\"/market/:marketAddress\">\n              <TradePage />\n            </Route>\n            <Route exact path=\"/orders\" component={OpenOrdersPage} />\n            <Route exact path=\"/balances\" component={BalancesPage} />\n            <Route exact path=\"/convert\" component={ConvertPage} />\n            <Route\n              exact\n              path=\"/list-new-market\"\n              component={ListNewMarketPage}\n            />\n            <Route exact path=\"/pools\">\n              <PoolListPage />\n            </Route>\n            <Route exact path=\"/pools/new\">\n              <NewPoolPage />\n            </Route>\n            <Route exact path=\"/pools/:poolAddress\">\n              <PoolPage />\n            </Route>\n          </Switch>\n        </BasicLayout>\n      </HashRouter>\n    </>\n  );\n}\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\nimport { PreferencesProvider } from './utils/preferences';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <WalletProvider>\n            <PreferencesProvider>\n              <Suspense fallback={() => <Spin size=\"large\" />}>\n                <Routes />\n              </Suspense>\n            </PreferencesProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}